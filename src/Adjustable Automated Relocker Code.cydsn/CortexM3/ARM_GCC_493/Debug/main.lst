ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_i2d
  19              		.global	__aeabi_ddiv
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_dsub
  22              		.global	__aeabi_d2iz
  23              		.global	__aeabi_dadd
  24              		.section	.text.main,"ax",%progbits
  25              		.align	2
  26              		.global	main
  27              		.thumb
  28              		.thumb_func
  29              		.type	main, %function
  30              	main:
  31              	.LFB63:
  32              		.file 1 "main.c"
   1:main.c        **** /* ================================================================
   2:main.c        **** 
   3:main.c        **** Automated Laser Frequency Relocking Procedure
   4:main.c        **** Original Programmer: Denton Wu
   5:main.c        **** Last modified: 14 June, 2018
   6:main.c        **** 
   7:main.c        **** Notes:
   8:main.c        **** 
   9:main.c        **** Greetings relocker user or improver. This is the main relocker algorithm.
  10:main.c        **** 
  11:main.c        **** There are two parts to the code: the setup and the relocking procedure. Because this algorithm
  12:main.c        **** needs the ability to work with three different loop filter output ranges, it offers three 
  13:main.c        **** relocking procedures, one for each loop filter model. The user can cue the box to run any one of th
  14:main.c        **** loop filter in use. Effectively, these procedures are the same except for the ADC and DAC voltage l
  15:main.c        **** 
  16:main.c        **** On your journeys through this code, remember:
  17:main.c        **** You got a fast car.
  18:main.c        **** 
  19:main.c        **** ==================================================================*/
  20:main.c        **** 
  21:main.c        **** 
  22:main.c        **** #include "project.h"
  23:main.c        **** #include <stdbool.h>
  24:main.c        **** 
  25:main.c        ****     int main(void) {
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 2


  33              		.loc 1 25 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 32
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  38              		.cfi_def_cfa_offset 36
  39              		.cfi_offset 4, -36
  40              		.cfi_offset 5, -32
  41              		.cfi_offset 6, -28
  42              		.cfi_offset 7, -24
  43              		.cfi_offset 8, -20
  44              		.cfi_offset 9, -16
  45              		.cfi_offset 10, -12
  46              		.cfi_offset 11, -8
  47              		.cfi_offset 14, -4
  48 0004 89B0     		sub	sp, sp, #36
  49              		.cfi_def_cfa_offset 72
  26:main.c        ****         CyGlobalIntEnable
  50              		.loc 1 26 0
  51              	@ 26 "main.c" 1
  52 0006 62B6     		CPSIE   i
  53              	@ 0 "" 2
  54              	.LVL0:
  27:main.c        **** 
  28:main.c        ****         /*Variable setup and pin initialization*/
  29:main.c        **** 
  30:main.c        ****         int i = 0;
  31:main.c        ****         int j = 0;
  32:main.c        ****         int check = 0;
  33:main.c        **** 
  34:main.c        ****         int modeOut = 0;
  35:main.c        ****         int upRail = 0;
  36:main.c        ****         int lowRail = 0;
  37:main.c        ****         int sweepHigh = 0;
  38:main.c        ****         double sweepCenter = 0.0;
  39:main.c        ****         int courseCenter = 0;
  40:main.c        ****         int courseLow = 0;
  41:main.c        ****         int courseHigh = 0;
  42:main.c        ****         double fineProp = 0.0;
  43:main.c        ****         int fineCenter = 0;
  44:main.c        ****         int fineLow = 0;
  45:main.c        ****         int fineHigh = 0;
  46:main.c        **** 
  47:main.c        ****         int nowEMonVal = 4000;
  48:main.c        ****         int lowVal = 4000;
  49:main.c        ****         int dev = 0;
  50:main.c        ****         int thresSubtract = 0;
  51:main.c        ****         int detectThres = 0;
  52:main.c        **** 
  53:main.c        ****         int whichLoop = 0;
  54:main.c        ****         int decideLoop = 0;
  55:main.c        **** 
  56:main.c        ****         int lockFail = 0;
  57:main.c        **** 
  58:main.c        ****         checkLight_Write(1); //checkLight is simply the onboard LED. It has no consequence to the r
  55              		.loc 1 58 0
  56              		.thumb
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 3


  57 0008 0120     		movs	r0, #1
  58 000a FFF7FEFF 		bl	checkLight_Write
  59              	.LVL1:
  59:main.c        **** 
  60:main.c        ****         yellowLight_Write(0);
  60              		.loc 1 60 0
  61 000e 0020     		movs	r0, #0
  62 0010 FFF7FEFF 		bl	yellowLight_Write
  63              	.LVL2:
  61:main.c        ****         greenLight_Write(0);
  64              		.loc 1 61 0
  65 0014 0020     		movs	r0, #0
  66 0016 FFF7FEFF 		bl	greenLight_Write
  67              	.LVL3:
  62:main.c        ****         redLight_Write(0);
  68              		.loc 1 62 0
  69 001a 0020     		movs	r0, #0
  70 001c FFF7FEFF 		bl	redLight_Write
  71              	.LVL4:
  63:main.c        ****         switches_Write(0); //Writing to switches writes to all pins attached. For this program, tha
  72              		.loc 1 63 0
  73 0020 0020     		movs	r0, #0
  74 0022 FFF7FEFF 		bl	switches_Write
  75              	.LVL5:
  64:main.c        **** 
  65:main.c        ****         eMonADC_Start(); /*Each ADC and DAC has startup procedures to run. This is one of them, for
  76              		.loc 1 65 0
  77 0026 FFF7FEFF 		bl	eMonADC_Start
  78              	.LVL6:
  66:main.c        **** 
  67:main.c        ****         /*When the user turns on the box, the microprocessor runs the code up to here. The followin
  68:main.c        ****           prevents the program from moving on until the user sets the "Lock in Range" switch to "Lo
  69:main.c        ****           set the switch until having already selected for the loop filter range.*/
  70:main.c        ****         
  71:main.c        ****         while (lockIn_Read() == 1) {
  79              		.loc 1 71 0
  80 002a 02E0     		b	.L2
  81              	.L3:
  72:main.c        ****             CyDelay(50);
  82              		.loc 1 72 0
  83 002c 3220     		movs	r0, #50
  84 002e FFF7FEFF 		bl	CyDelay
  85              	.LVL7:
  86              	.L2:
  71:main.c        ****             CyDelay(50);
  87              		.loc 1 71 0
  88 0032 FFF7FEFF 		bl	lockIn_Read
  89              	.LVL8:
  90 0036 0128     		cmp	r0, #1
  91 0038 F8D0     		beq	.L3
  92 003a 0023     		movs	r3, #0
  93 003c 0193     		str	r3, [sp, #4]
  94 003e 9946     		mov	r9, r3
  95 0040 1C46     		mov	r4, r3
  96 0042 4FF47A62 		mov	r2, #4000
  97 0046 0792     		str	r2, [sp, #28]
  98 0048 1F46     		mov	r7, r3
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 4


  99 004a 0493     		str	r3, [sp, #16]
 100 004c 9B46     		mov	fp, r3
 101 004e 0393     		str	r3, [sp, #12]
 102 0050 9A46     		mov	r10, r3
 103 0052 0693     		str	r3, [sp, #24]
 104 0054 0593     		str	r3, [sp, #20]
 105 0056 1DE1     		b	.L4
 106              	.LVL9:
 107              	.L9:
  73:main.c        ****         }
  74:main.c        **** 
  75:main.c        ****         for (;;) {
  76:main.c        ****             
  77:main.c        ****         /*Once the user sets "Lock in Range" to "Lock", the microprocessor reads in which range the
  78:main.c        ****             channels connecting the microprocessor output level shifter bias to the microprocessor 
  79:main.c        ****             Each channel is connected to one pin: either setting8V, setting22V, or setting28V. Only
  80:main.c        ****             5 V. The microprocessor enters the loop whose detection pin reads its channel to be hig
  81:main.c        ****             relevant loop filter model.*/
  82:main.c        **** 
  83:main.c        ****             while (setting8V_Read() == 1) {
  84:main.c        ****                 
  85:main.c        ****                 /*Once the microprocessor knows the loop filter model and has entered into the appr
  86:main.c        ****                 to read in the desired error signal's parameters and calibrate its code to relock t
  87:main.c        ****                 The user should trigger the calibration procedure immediately after locking in the 
  88:main.c        ****                 user will have preset the "Choose Mode" switch to the "Choose" position before turn
  89:main.c        ****                 procedure will start immediately after range lock in.*/
  90:main.c        ****                 
  91:main.c        ****                 while (calibratePin_Read() == 1) {
  92:main.c        **** 
  93:main.c        ****                     greenLight_Write(0);
 108              		.loc 1 93 0
 109 0058 0020     		movs	r0, #0
 110 005a FFF7FEFF 		bl	greenLight_Write
 111              	.LVL10:
  94:main.c        ****                     yellowLight_Write(1);
 112              		.loc 1 94 0
 113 005e 0120     		movs	r0, #1
 114 0060 FFF7FEFF 		bl	yellowLight_Write
 115              	.LVL11:
  95:main.c        **** 
  96:main.c        ****                     /*The microprocessor needs two features of the error signal. The first is the s
  97:main.c        ****                     This loop measures the maximum and sets lowVal to that maximum, in terms of the
  98:main.c        ****                     The ADC's lowest reading corresponds to the error signal's highest voltage beca
  99:main.c        ****                     shifter inverts the error signal. Flipping the "Error Signal Sampling" switch t
 100:main.c        ****                     
 101:main.c        ****                     if (thresSample_Read() == 1) {
 116              		.loc 1 101 0
 117 0064 FFF7FEFF 		bl	thresSample_Read
 118              	.LVL12:
 119 0068 0128     		cmp	r0, #1
 120 006a 06D1     		bne	.L5
 102:main.c        ****                         eMonADC_StartConvert();
 121              		.loc 1 102 0
 122 006c FFF7FEFF 		bl	eMonADC_StartConvert
 123              	.LVL13:
 103:main.c        ****                         nowEMonVal = eMonADC_GetResult16();
 124              		.loc 1 103 0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 5


 125 0070 FFF7FEFF 		bl	eMonADC_GetResult16
 126              	.LVL14:
 104:main.c        **** 
 105:main.c        ****                         if (nowEMonVal < lowVal) {
 127              		.loc 1 105 0
 128 0074 B042     		cmp	r0, r6
 129 0076 00DA     		bge	.L5
 106:main.c        ****                             lowVal = nowEMonVal;
 130              		.loc 1 106 0
 131 0078 0646     		mov	r6, r0
 132              	.LVL15:
 133              	.L5:
 107:main.c        ****                         }
 108:main.c        ****                     }
 109:main.c        ****                     
 110:main.c        ****                     /*Next, we use lowVal to set the detection threshold voltage. The error signal 
 111:main.c        ****                     signal's 0 V up to 2 V, which corresponds to an ADC parameter of 2000. This cod
 112:main.c        ****                     variable, detectThres, to be half the error signal maximum value.*/
 113:main.c        **** 
 114:main.c        ****                     dev = 2000 - lowVal; //From center value
 134              		.loc 1 114 0
 135 007a C6F5FA63 		rsb	r3, r6, #2000
 136              	.LVL16:
 115:main.c        ****                     thresSubtract = dev / 2;
 137              		.loc 1 115 0
 138 007e 03EBD373 		add	r3, r3, r3, lsr #31
 139              	.LVL17:
 140 0082 5C10     		asrs	r4, r3, #1
 141              	.LVL18:
 116:main.c        ****                     detectThres = 2000 - thresSubtract;
 142              		.loc 1 116 0
 143 0084 C4F5FA64 		rsb	r4, r4, #2000
 144              	.LVL19:
 117:main.c        ****                     
 118:main.c        ****                     /*After sampling the error signal, the user should lock the cavity.
 119:main.c        ****                     The second relevant error signal feature is the loop filter voltage associated 
 120:main.c        ****                     error signal. With the cavity locked, the next three lines can read this in.*/
 121:main.c        **** 
 122:main.c        ****                     lfOutADC_Start();
 145              		.loc 1 122 0
 146 0088 FFF7FEFF 		bl	lfOutADC_Start
 147              	.LVL20:
 123:main.c        ****                     lfOutADC_StartConvert();
 148              		.loc 1 123 0
 149 008c FFF7FEFF 		bl	lfOutADC_StartConvert
 150              	.LVL21:
 124:main.c        ****                     modeOut = lfOutADC_Read32();
 151              		.loc 1 124 0
 152 0090 FFF7FEFF 		bl	lfOutADC_Read32
 153              	.LVL22:
 125:main.c        **** 
 126:main.c        ****                     /*The microprocessor now knows what loop filter output voltage corresponds to "
 127:main.c        ****                     It needs to calculate upper and lower voltage bounds to this lock voltage. Thes
 128:main.c        ****                     inside of which the microprocessor thinks lock voltage sits. I've chosen to set
 129:main.c        ****                     above and below the in lock voltage, as modes usually don't drift any further t
 130:main.c        ****                     to the ADC parameter 940 in the 8 V mode.*/
 131:main.c        ****                     
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 6


 132:main.c        ****                     upRail = modeOut + 940;
 154              		.loc 1 132 0
 155 0094 00F56B72 		add	r2, r0, #940
 156 0098 0592     		str	r2, [sp, #20]
 157              	.LVL23:
 133:main.c        ****                     lowRail = modeOut - 940;
 158              		.loc 1 133 0
 159 009a A0F56B73 		sub	r3, r0, #940
 160 009e 0693     		str	r3, [sp, #24]
 161              	.LVL24:
 134:main.c        ****                     
 135:main.c        ****                     /*Now the fun begins. When attempting to relock, the microprocessor sweeps the 
 136:main.c        ****                     the region in which it thinks the lock voltage lies. That voltage region is the
 137:main.c        ****                     150 mV above and below the current loop filter voltage. It needs to set its swe
 138:main.c        ****                     as well.
 139:main.c        ****                     
 140:main.c        ****                     Unfortunately, the DAC parameters are not the same as the ADC parameters. We ne
 141:main.c        ****                     parameters (one for the courseDAC and one for the fineDAC) that correspond to t
 142:main.c        ****                     and the two DAC parameters that correspond to the upper sweep bound at +150 mV.
 143:main.c        ****                     
 144:main.c        ****                     The calculation is a bit involved. Consult the user manual for details. The fol
 145:main.c        ****                     the sweep bounds and assign them to courseLow, fineLow, courseHigh, and fineHig
 146:main.c        **** 
 147:main.c        ****                     sweepCenter = 256 * (((double) modeOut) / ((double) 53595)) - 12; /*At times th
 162              		.loc 1 147 0
 163 00a0 FFF7FEFF 		bl	__aeabi_i2d
 164              	.LVL25:
 165 00a4 D0A3     		adr	r3, .L123
 166 00a6 D3E90023 		ldrd	r2, [r3]
 167 00aa FFF7FEFF 		bl	__aeabi_ddiv
 168              	.LVL26:
 169 00ae 0022     		movs	r2, #0
 170 00b0 D14B     		ldr	r3, .L123+16
 171 00b2 FFF7FEFF 		bl	__aeabi_dmul
 172              	.LVL27:
 173 00b6 0022     		movs	r2, #0
 174 00b8 D04B     		ldr	r3, .L123+20
 175 00ba FFF7FEFF 		bl	__aeabi_dsub
 176              	.LVL28:
 177 00be 8046     		mov	r8, r0
 178              	.LVL29:
 179 00c0 8946     		mov	r9, r1
 180              	.LVL30:
 148:main.c        ****                                                                                         can misalig
 149:main.c        ****                                                                                         misalignmen
 150:main.c        ****                                                                                         variable by
 151:main.c        ****                     courseCenter = (int) sweepCenter;
 181              		.loc 1 151 0
 182 00c2 FFF7FEFF 		bl	__aeabi_d2iz
 183              	.LVL31:
 184 00c6 0546     		mov	r5, r0
 185              	.LVL32:
 152:main.c        ****                     fineProp = sweepCenter - courseCenter;
 186              		.loc 1 152 0
 187 00c8 FFF7FEFF 		bl	__aeabi_i2d
 188              	.LVL33:
 189 00cc 0246     		mov	r2, r0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 7


 190 00ce 0B46     		mov	r3, r1
 191 00d0 4046     		mov	r0, r8
 192 00d2 4946     		mov	r1, r9
 193 00d4 FFF7FEFF 		bl	__aeabi_dsub
 194              	.LVL34:
 153:main.c        ****                     fineCenter = (int)((fineProp * ((double) 255)) + 0.5);
 195              		.loc 1 153 0
 196 00d8 C5A3     		adr	r3, .L123+8
 197 00da D3E90023 		ldrd	r2, [r3]
 198 00de FFF7FEFF 		bl	__aeabi_dmul
 199              	.LVL35:
 200 00e2 0022     		movs	r2, #0
 201 00e4 C64B     		ldr	r3, .L123+24
 202 00e6 FFF7FEFF 		bl	__aeabi_dadd
 203              	.LVL36:
 204 00ea FFF7FEFF 		bl	__aeabi_d2iz
 205              	.LVL37:
 154:main.c        **** 
 155:main.c        ****                     if (fineCenter > 203) {
 206              		.loc 1 155 0
 207 00ee CB28     		cmp	r0, #203
 208 00f0 09DD     		ble	.L6
 156:main.c        ****                         courseLow = courseCenter - 4;
 209              		.loc 1 156 0
 210 00f2 A5F10408 		sub	r8, r5, #4
 211              	.LVL38:
 157:main.c        ****                         courseHigh = courseCenter + 5;
 212              		.loc 1 157 0
 213 00f6 05F1050B 		add	fp, r5, #5
 214              	.LVL39:
 158:main.c        ****                         sweepHigh = courseCenter + 6;
 215              		.loc 1 158 0
 216 00fa 0635     		adds	r5, r5, #6
 217              	.LVL40:
 159:main.c        **** 
 160:main.c        ****                         fineLow = fineCenter - 204;
 218              		.loc 1 160 0
 219 00fc A0F1CC0A 		sub	r10, r0, #204
 220              	.LVL41:
 161:main.c        ****                         fineHigh = fineCenter - 50;
 221              		.loc 1 161 0
 222 0100 A0F13207 		sub	r7, r0, #50
 223              	.LVL42:
 224 0104 16E0     		b	.L7
 225              	.LVL43:
 226              	.L6:
 162:main.c        ****                                                                     /*Set +1 higher than it needs t
 163:main.c        ****                                                                     the for loop to sweep through t
 164:main.c        ****                                                                     necessary high value*/
 165:main.c        ****                     } else if (fineCenter > 51 && fineCenter <= 203) {
 227              		.loc 1 165 0
 228 0106 A0F13403 		sub	r3, r0, #52
 229 010a 972B     		cmp	r3, #151
 230 010c 09D8     		bhi	.L8
 166:main.c        ****                         courseLow = courseCenter - 5;
 231              		.loc 1 166 0
 232 010e A5F10508 		sub	r8, r5, #5
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 8


 233              	.LVL44:
 167:main.c        ****                         courseHigh = courseCenter + 5;
 234              		.loc 1 167 0
 235 0112 05F1050B 		add	fp, r5, #5
 236              	.LVL45:
 168:main.c        ****                         sweepHigh = courseCenter + 6;
 237              		.loc 1 168 0
 238 0116 0635     		adds	r5, r5, #6
 239              	.LVL46:
 169:main.c        **** 
 170:main.c        ****                         fineLow = fineCenter + 51;
 240              		.loc 1 170 0
 241 0118 00F1330A 		add	r10, r0, #51
 242              	.LVL47:
 171:main.c        ****                         fineHigh = fineCenter - 50;
 243              		.loc 1 171 0
 244 011c A0F13207 		sub	r7, r0, #50
 245              	.LVL48:
 246 0120 08E0     		b	.L7
 247              	.LVL49:
 248              	.L8:
 172:main.c        ****                                                                     /*Set +1 higher than it needs t
 173:main.c        ****                                                                      the for loop to sweep through 
 174:main.c        ****                                                                      necessary high value*/
 175:main.c        ****                     } else {
 176:main.c        ****                         courseLow = courseCenter - 5;
 249              		.loc 1 176 0
 250 0122 A5F10508 		sub	r8, r5, #5
 251              	.LVL50:
 177:main.c        ****                         courseHigh = courseCenter + 4;
 252              		.loc 1 177 0
 253 0126 05F1040B 		add	fp, r5, #4
 254              	.LVL51:
 178:main.c        ****                         sweepHigh = courseCenter + 5;
 255              		.loc 1 178 0
 256 012a 0535     		adds	r5, r5, #5
 257              	.LVL52:
 179:main.c        **** 
 180:main.c        ****                         fineLow = fineCenter + 51;
 258              		.loc 1 180 0
 259 012c 00F1330A 		add	r10, r0, #51
 260              	.LVL53:
 181:main.c        ****                         fineHigh = fineCenter + 205;
 261              		.loc 1 181 0
 262 0130 00F1CD07 		add	r7, r0, #205
 263              	.LVL54:
 264              	.L7:
 182:main.c        ****                                                                     /*Set +1 higher than it needs t
 183:main.c        ****                                                                     the for loop to sweep through t
 184:main.c        ****                                                                     necessary high value*/
 185:main.c        ****                     }
 186:main.c        ****                     
 187:main.c        ****                     //The sweep boundaries are now assigned.
 188:main.c        **** 
 189:main.c        ****                     whichLoop = 1;  //For tracking which voltage sweep loop to enter
 190:main.c        ****                     decideLoop = sweepHigh - courseLow; /*This variable tells the code how many ful
 265              		.loc 1 190 0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 9


 266 0134 C8EB0503 		rsb	r3, r8, r5
 267 0138 0193     		str	r3, [sp, #4]
 268              	.LVL55:
 189:main.c        ****                     decideLoop = sweepHigh - courseLow; /*This variable tells the code how many ful
 269              		.loc 1 189 0
 270 013a 4FF00109 		mov	r9, #1
 271              	.LVL56:
 272              	.L29:
  91:main.c        **** 
 273              		.loc 1 91 0
 274 013e FFF7FEFF 		bl	calibratePin_Read
 275              	.LVL57:
 276 0142 0128     		cmp	r0, #1
 277 0144 88D0     		beq	.L9
 278 0146 CDF80C80 		str	r8, [sp, #12]
 279 014a CDF810A0 		str	r10, [sp, #16]
 280 014e AA46     		mov	r10, r5
 281              	.LVL58:
 282 0150 0796     		str	r6, [sp, #28]
 191:main.c        ****                                                         signal spans, and thus the number of full f
 192:main.c        ****                 }
 193:main.c        **** 
 194:main.c        ****                 yellowLight_Write(0);
 283              		.loc 1 194 0
 284 0152 0020     		movs	r0, #0
 285 0154 FFF7FEFF 		bl	yellowLight_Write
 286              	.LVL59:
 195:main.c        **** 
 196:main.c        ****                 //Board is in watch mode while outside the loop below.
 197:main.c        ****                 //Board is in relocking mode while inside the loop below.
 198:main.c        **** 
 199:main.c        ****                 lfOutADC_StartConvert();
 287              		.loc 1 199 0
 288 0158 FFF7FEFF 		bl	lfOutADC_StartConvert
 289              	.LVL60:
 200:main.c        **** 
 201:main.c        ****                 while (lfOutADC_GetResult32() > upRail || lfOutADC_GetResult32() < lowRail) {   //D
 290              		.loc 1 201 0
 291 015c 83E0     		b	.L10
 292              	.LVL61:
 293              	.L28:
 202:main.c        **** 
 203:main.c        ****                     //Switch to search mode
 204:main.c        **** 
 205:main.c        ****                     greenLight_Write(0);
 294              		.loc 1 205 0
 295 015e 0020     		movs	r0, #0
 296 0160 FFF7FEFF 		bl	greenLight_Write
 297              	.LVL62:
 206:main.c        ****                     switches_Write(1);
 298              		.loc 1 206 0
 299 0164 0120     		movs	r0, #1
 300 0166 FFF7FEFF 		bl	switches_Write
 301              	.LVL63:
 207:main.c        **** 
 208:main.c        ****                     check = 0;
 209:main.c        ****                     lockFail = 0;   /*This variable tracks how many times the microprocessor has sw
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 10


 210:main.c        ****                                     the expected lock voltage and failed.*/
 211:main.c        **** 
 212:main.c        ****                     courseDAC_Start();
 302              		.loc 1 212 0
 303 016a FFF7FEFF 		bl	courseDAC_Start
 304              	.LVL64:
 213:main.c        ****                     fineDAC_Start();
 305              		.loc 1 213 0
 306 016e FFF7FEFF 		bl	fineDAC_Start
 307              	.LVL65:
 214:main.c        ****                     eMonADC_StartConvert();
 308              		.loc 1 214 0
 309 0172 FFF7FEFF 		bl	eMonADC_StartConvert
 310              	.LVL66:
 215:main.c        **** 
 216:main.c        ****                     //The following for loop is the voltage sweep. It is comprised of three smaller
 217:main.c        **** 
 218:main.c        ****                     for (i = courseLow; i < sweepHigh; i++) {
 311              		.loc 1 218 0
 312 0176 DDF80C80 		ldr	r8, [sp, #12]
 209:main.c        ****                                     the expected lock voltage and failed.*/
 313              		.loc 1 209 0
 314 017a 0023     		movs	r3, #0
 315 017c 0293     		str	r3, [sp, #8]
 208:main.c        ****                     lockFail = 0;   /*This variable tracks how many times the microprocessor has sw
 316              		.loc 1 208 0
 317 017e 1E46     		mov	r6, r3
 318              		.loc 1 218 0
 319 0180 6FE0     		b	.L11
 320              	.LVL67:
 321              	.L27:
 219:main.c        ****                         courseDAC_SetValue(i);
 322              		.loc 1 219 0
 323 0182 5FFA88F0 		uxtb	r0, r8
 324 0186 FFF7FEFF 		bl	courseDAC_SetValue
 325              	.LVL68:
 220:main.c        ****                         
 221:main.c        ****                         /*This is the first fineDAC sweep to run. It begins right on fineLow so tha
 222:main.c        ****                         hits the exact lower voltage bound of -150 mV.*/
 223:main.c        **** 
 224:main.c        ****                         if (whichLoop == 1) {
 326              		.loc 1 224 0
 327 018a B9F1010F 		cmp	r9, #1
 328 018e 1BD1     		bne	.L116
 329 0190 14E0     		b	.L84
 330              	.LVL69:
 331              	.L16:
 225:main.c        ****                             for (j = fineLow; j < 256; j++) {
 226:main.c        ****                                 fineDAC_SetValue(j);
 332              		.loc 1 226 0
 333 0192 E8B2     		uxtb	r0, r5
 334 0194 FFF7FEFF 		bl	fineDAC_SetValue
 335              	.LVL70:
 227:main.c        ****                                 
 228:main.c        ****                                 /*These two if statements check whether the error signal has passed
 229:main.c        ****                                 out and back in again. The variable "check" tracks whether the erro
 230:main.c        ****                                 already passed the detection threshold once. If it is 1 when the er
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 11


 231:main.c        ****                                 the detection threshold the second time, the microprocessor knows t
 232:main.c        ****                                 the central linear region and the cavity is ready for lock.*/
 233:main.c        **** 
 234:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)
 336              		.loc 1 234 0
 337 0198 FFF7FEFF 		bl	eMonADC_GetResult16
 338              	.LVL71:
 339 019c A042     		cmp	r0, r4
 340 019e 00DA     		bge	.L14
 235:main.c        ****                                     check = 1;
 341              		.loc 1 235 0
 342 01a0 0126     		movs	r6, #1
 343              	.LVL72:
 344              	.L14:
 236:main.c        **** 
 237:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 345              		.loc 1 237 0
 346 01a2 FFF7FEFF 		bl	eMonADC_GetResult16
 347              	.LVL73:
 348 01a6 A042     		cmp	r0, r4
 349 01a8 03DD     		ble	.L15
 350              		.loc 1 237 0 is_stmt 0 discriminator 1
 351 01aa 16B1     		cbz	r6, .L15
 238:main.c        ****                                     j = 300;    /*Once the microprocessor sees that the error signa
 352              		.loc 1 238 0 is_stmt 1
 353 01ac 4FF49675 		mov	r5, #300
 354              	.LVL74:
 239:main.c        ****                                                 region, it sets the iteration variables to values t
 240:main.c        ****                                                 courseDAC and fineDAC loop conditions.*/
 241:main.c        ****                                     i = 300;
 355              		.loc 1 241 0
 356 01b0 A846     		mov	r8, r5
 357              	.LVL75:
 358              	.L15:
 242:main.c        ****                                 }
 243:main.c        **** 
 244:main.c        ****                                 CyDelayUs(0);   /*CyDelay() and CyDelayUs() are delays in the code.
 359              		.loc 1 244 0 discriminator 2
 360 01b2 0020     		movs	r0, #0
 361 01b4 FFF7FEFF 		bl	CyDelayUs
 362              	.LVL76:
 225:main.c        ****                                 fineDAC_SetValue(j);
 363              		.loc 1 225 0 discriminator 2
 364 01b8 0135     		adds	r5, r5, #1
 365              	.LVL77:
 366 01ba 00E0     		b	.L12
 367              	.LVL78:
 368              	.L84:
 369 01bc 049D     		ldr	r5, [sp, #16]
 370              	.L12:
 371              	.LVL79:
 225:main.c        ****                                 fineDAC_SetValue(j);
 372              		.loc 1 225 0 is_stmt 0 discriminator 1
 373 01be FF2D     		cmp	r5, #255
 374 01c0 E7DD     		ble	.L16
 245:main.c        ****                                                 wait for a certain amount of time set by their argu
 246:main.c        ****                                                 slows down the relocking sweep, which can improve r
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 12


 247:main.c        ****                                                 is not working.*/
 248:main.c        ****                                                 
 249:main.c        ****                             }
 250:main.c        **** 
 251:main.c        ****                             whichLoop++;    //Adding to whichLoop tells the code that the first fin
 375              		.loc 1 251 0 is_stmt 1
 376 01c2 09F10109 		add	r9, r9, #1
 377              	.LVL80:
 378 01c6 3CE0     		b	.L17
 379              	.LVL81:
 380              	.L116:
 252:main.c        ****                                             //and that the full sweeps should be run next. It knows
 253:main.c        ****                                             //based on the decideLoop variable.
 254:main.c        ****                             
 255:main.c        ****                         } else if (whichLoop < decideLoop && whichLoop > 1) {
 381              		.loc 1 255 0
 382 01c8 019B     		ldr	r3, [sp, #4]
 383 01ca 9945     		cmp	r9, r3
 384 01cc 34DA     		bge	.L87
 385              		.loc 1 255 0 is_stmt 0 discriminator 1
 386 01ce B9F1010F 		cmp	r9, #1
 387 01d2 16DC     		bgt	.L88
 388 01d4 0025     		movs	r5, #0
 389 01d6 30E0     		b	.L18
 390              	.LVL82:
 391              	.L22:
 256:main.c        ****                             for (j = 0; j < 256; j++) {
 257:main.c        ****                                 fineDAC_SetValue(j);
 392              		.loc 1 257 0 is_stmt 1
 393 01d8 E8B2     		uxtb	r0, r5
 394 01da FFF7FEFF 		bl	fineDAC_SetValue
 395              	.LVL83:
 258:main.c        **** 
 259:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)    /*These checks for dete
 396              		.loc 1 259 0
 397 01de FFF7FEFF 		bl	eMonADC_GetResult16
 398              	.LVL84:
 399 01e2 A042     		cmp	r0, r4
 400 01e4 00DA     		bge	.L20
 260:main.c        ****                                                                             happen every sweep step
 261:main.c        ****                                     check = 1;
 401              		.loc 1 261 0
 402 01e6 0126     		movs	r6, #1
 403              	.LVL85:
 404              	.L20:
 262:main.c        **** 
 263:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 405              		.loc 1 263 0
 406 01e8 FFF7FEFF 		bl	eMonADC_GetResult16
 407              	.LVL86:
 408 01ec A042     		cmp	r0, r4
 409 01ee 03DD     		ble	.L21
 410              		.loc 1 263 0 is_stmt 0 discriminator 1
 411 01f0 16B1     		cbz	r6, .L21
 264:main.c        ****                                     j = 300;
 412              		.loc 1 264 0 is_stmt 1
 413 01f2 4FF49675 		mov	r5, #300
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 13


 414              	.LVL87:
 265:main.c        ****                                     i = 300;
 415              		.loc 1 265 0
 416 01f6 A846     		mov	r8, r5
 417              	.LVL88:
 418              	.L21:
 266:main.c        ****                                 }
 267:main.c        **** 
 268:main.c        ****                                 CyDelayUs(0);
 419              		.loc 1 268 0 discriminator 2
 420 01f8 0020     		movs	r0, #0
 421 01fa FFF7FEFF 		bl	CyDelayUs
 422              	.LVL89:
 256:main.c        ****                                 fineDAC_SetValue(j);
 423              		.loc 1 256 0 discriminator 2
 424 01fe 0135     		adds	r5, r5, #1
 425              	.LVL90:
 426 0200 00E0     		b	.L19
 427              	.LVL91:
 428              	.L88:
 429 0202 0025     		movs	r5, #0
 430              	.L19:
 431              	.LVL92:
 256:main.c        ****                                 fineDAC_SetValue(j);
 432              		.loc 1 256 0 is_stmt 0 discriminator 1
 433 0204 FF2D     		cmp	r5, #255
 434 0206 E7DD     		ble	.L22
 269:main.c        ****                             }
 270:main.c        **** 
 271:main.c        ****                             whichLoop++;
 435              		.loc 1 271 0 is_stmt 1
 436 0208 09F10109 		add	r9, r9, #1
 437              	.LVL93:
 438 020c 19E0     		b	.L17
 439              	.L25:
 272:main.c        ****                             
 273:main.c        ****                         /*Finally, the last fineDAC sweep runs. This one ends on fineHigh, hitting 
 274:main.c        ****                             +150 mV.*/    
 275:main.c        ****                             
 276:main.c        ****                         } else {
 277:main.c        ****                             for (j = 0; j < fineHigh; j++) {
 278:main.c        ****                                 fineDAC_SetValue(j);
 440              		.loc 1 278 0
 441 020e E8B2     		uxtb	r0, r5
 442 0210 FFF7FEFF 		bl	fineDAC_SetValue
 443              	.LVL94:
 279:main.c        **** 
 280:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)
 444              		.loc 1 280 0
 445 0214 FFF7FEFF 		bl	eMonADC_GetResult16
 446              	.LVL95:
 447 0218 A042     		cmp	r0, r4
 448 021a 00DA     		bge	.L23
 281:main.c        ****                                     check = 1;
 449              		.loc 1 281 0
 450 021c 0126     		movs	r6, #1
 451              	.LVL96:
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 14


 452              	.L23:
 282:main.c        **** 
 283:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 453              		.loc 1 283 0
 454 021e FFF7FEFF 		bl	eMonADC_GetResult16
 455              	.LVL97:
 456 0222 A042     		cmp	r0, r4
 457 0224 03DD     		ble	.L24
 458              		.loc 1 283 0 is_stmt 0 discriminator 1
 459 0226 16B1     		cbz	r6, .L24
 284:main.c        ****                                     j = 300;
 460              		.loc 1 284 0 is_stmt 1
 461 0228 4FF49675 		mov	r5, #300
 462              	.LVL98:
 285:main.c        ****                                     i = 300;
 463              		.loc 1 285 0
 464 022c A846     		mov	r8, r5
 465              	.LVL99:
 466              	.L24:
 286:main.c        ****                                 }
 287:main.c        **** 
 288:main.c        ****                                 CyDelayUs(0);
 467              		.loc 1 288 0 discriminator 2
 468 022e 0020     		movs	r0, #0
 469 0230 FFF7FEFF 		bl	CyDelayUs
 470              	.LVL100:
 277:main.c        ****                                 fineDAC_SetValue(j);
 471              		.loc 1 277 0 discriminator 2
 472 0234 0135     		adds	r5, r5, #1
 473              	.LVL101:
 474 0236 00E0     		b	.L18
 475              	.LVL102:
 476              	.L87:
 477 0238 0025     		movs	r5, #0
 478              	.L18:
 479              	.LVL103:
 277:main.c        ****                                 fineDAC_SetValue(j);
 480              		.loc 1 277 0 is_stmt 0 discriminator 1
 481 023a BD42     		cmp	r5, r7
 482 023c E7DB     		blt	.L25
 289:main.c        ****                             }
 290:main.c        **** 
 291:main.c        ****                             whichLoop = 1;  //We reset whichLoop back to 1 in case the microprocess
 483              		.loc 1 291 0 is_stmt 1
 484 023e 4FF00109 		mov	r9, #1
 485              	.LVL104:
 486              	.L17:
 292:main.c        ****                                             //fineDAC loops without relocking success.
 293:main.c        ****                         }
 294:main.c        **** 
 295:main.c        ****                         if (i == courseHigh) {  //These if statements manage lockFail. lockFail cou
 487              		.loc 1 295 0
 488 0242 D845     		cmp	r8, fp
 489 0244 0BD1     		bne	.L26
 296:main.c        ****                                                 //microprocessor has failed to relock. If it ever f
 297:main.c        ****                                                 //the if statement turns on the red light, signalli
 298:main.c        ****                             i = (courseLow - 1);
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 15


 490              		.loc 1 298 0
 491 0246 039B     		ldr	r3, [sp, #12]
 492 0248 03F1FF38 		add	r8, r3, #-1
 493              	.LVL105:
 299:main.c        ****                             lockFail++;
 494              		.loc 1 299 0
 495 024c 029B     		ldr	r3, [sp, #8]
 496 024e 0133     		adds	r3, r3, #1
 497              	.LVL106:
 300:main.c        **** 
 301:main.c        ****                             if (lockFail == 20) {
 498              		.loc 1 301 0
 499 0250 142B     		cmp	r3, #20
 500 0252 03D1     		bne	.L93
 302:main.c        ****                                 redLight_Write(0);
 501              		.loc 1 302 0
 502 0254 0020     		movs	r0, #0
 503 0256 FFF7FEFF 		bl	redLight_Write
 504              	.LVL107:
 505 025a 00E0     		b	.L26
 506              	.LVL108:
 507              	.L93:
 299:main.c        ****                             lockFail++;
 508              		.loc 1 299 0
 509 025c 0293     		str	r3, [sp, #8]
 510              	.LVL109:
 511              	.L26:
 218:main.c        ****                         courseDAC_SetValue(i);
 512              		.loc 1 218 0 discriminator 2
 513 025e 08F10108 		add	r8, r8, #1
 514              	.LVL110:
 515              	.L11:
 218:main.c        ****                         courseDAC_SetValue(i);
 516              		.loc 1 218 0 is_stmt 0 discriminator 1
 517 0262 D045     		cmp	r8, r10
 518 0264 8DDB     		blt	.L27
 519              	.LVL111:
 520              	.L10:
 201:main.c        **** 
 521              		.loc 1 201 0 is_stmt 1
 522 0266 FFF7FEFF 		bl	lfOutADC_GetResult32
 523              	.LVL112:
 524 026a 059B     		ldr	r3, [sp, #20]
 525 026c 9842     		cmp	r0, r3
 526 026e 3FF776AF 		bgt	.L28
 201:main.c        **** 
 527              		.loc 1 201 0 is_stmt 0 discriminator 1
 528 0272 FFF7FEFF 		bl	lfOutADC_GetResult32
 529              	.LVL113:
 530 0276 069B     		ldr	r3, [sp, #24]
 531 0278 9842     		cmp	r0, r3
 532 027a FFF670AF 		blt	.L28
 533              	.LVL114:
 303:main.c        ****                                 lockFail--;
 304:main.c        ****                             }
 305:main.c        ****                         }
 306:main.c        ****                     }
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 16


 307:main.c        ****                 }
 308:main.c        **** 
 309:main.c        ****                 //If the microprocessor has detected the error signal enter back into its central l
 310:main.c        ****                 //loops to here. It then switches the loop filter back into the conventional PDH or
 311:main.c        **** 
 312:main.c        ****                 whichLoop = 1;
 313:main.c        ****                 switches_Write(0);
 534              		.loc 1 313 0 is_stmt 1
 535 027e 0020     		movs	r0, #0
 536 0280 FFF7FEFF 		bl	switches_Write
 537              	.LVL115:
 314:main.c        ****                 greenLight_Write(1);
 538              		.loc 1 314 0
 539 0284 0120     		movs	r0, #1
 540 0286 FFF7FEFF 		bl	greenLight_Write
 541              	.LVL116:
 315:main.c        ****                 redLight_Write(0);
 542              		.loc 1 315 0
 543 028a 0020     		movs	r0, #0
 544 028c FFF7FEFF 		bl	redLight_Write
 545              	.LVL117:
 312:main.c        ****                 switches_Write(0);
 546              		.loc 1 312 0
 547 0290 4FF00109 		mov	r9, #1
 548              	.LVL118:
 549              	.L4:
  83:main.c        ****                 
 550              		.loc 1 83 0
 551 0294 FFF7FEFF 		bl	setting8V_Read
 552              	.LVL119:
 553 0298 0128     		cmp	r0, #1
 554 029a 40F03E81 		bne	.L30
 555 029e 5546     		mov	r5, r10
 556 02a0 DDF80C80 		ldr	r8, [sp, #12]
 557 02a4 DDF810A0 		ldr	r10, [sp, #16]
 558              	.LVL120:
 559 02a8 079E     		ldr	r6, [sp, #28]
 560 02aa 48E7     		b	.L29
 561              	.LVL121:
 562              	.L35:
 316:main.c        ****                 
 317:main.c        ****             /*This is the end of the relocker code. Beyond this lay the two loops that manage reloc
 318:main.c        ****                 28 V mode. The code for these modes is exactly the same, barring the ADC and DAC pa
 319:main.c        ****                 and relocking the system.*/
 320:main.c        ****             }
 321:main.c        **** 
 322:main.c        ****             while (setting22V_Read() == 1) {
 323:main.c        ****                 while (calibratePin_Read() == 1) {
 324:main.c        ****                     greenLight_Write(0);
 563              		.loc 1 324 0
 564 02ac 0020     		movs	r0, #0
 565 02ae FFF7FEFF 		bl	greenLight_Write
 566              	.LVL122:
 325:main.c        ****                     yellowLight_Write(1);
 567              		.loc 1 325 0
 568 02b2 0120     		movs	r0, #1
 569 02b4 FFF7FEFF 		bl	yellowLight_Write
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 17


 570              	.LVL123:
 326:main.c        **** 
 327:main.c        ****                     //Reading in the error signal size
 328:main.c        ****                     if (thresSample_Read() == 1) {
 571              		.loc 1 328 0
 572 02b8 FFF7FEFF 		bl	thresSample_Read
 573              	.LVL124:
 574 02bc 0128     		cmp	r0, #1
 575 02be 06D1     		bne	.L31
 329:main.c        ****                         eMonADC_StartConvert();
 576              		.loc 1 329 0
 577 02c0 FFF7FEFF 		bl	eMonADC_StartConvert
 578              	.LVL125:
 330:main.c        ****                         nowEMonVal = eMonADC_GetResult16();
 579              		.loc 1 330 0
 580 02c4 FFF7FEFF 		bl	eMonADC_GetResult16
 581              	.LVL126:
 331:main.c        **** 
 332:main.c        ****                         if (nowEMonVal < lowVal) {
 582              		.loc 1 332 0
 583 02c8 4045     		cmp	r0, r8
 584 02ca 00DA     		bge	.L31
 333:main.c        ****                             lowVal = nowEMonVal;
 585              		.loc 1 333 0
 586 02cc 8046     		mov	r8, r0
 587              	.LVL127:
 588              	.L31:
 334:main.c        ****                         }
 335:main.c        ****                     }
 336:main.c        **** 
 337:main.c        ****                     dev = 2000 - lowVal; //From center value
 589              		.loc 1 337 0
 590 02ce C8F5FA63 		rsb	r3, r8, #2000
 591              	.LVL128:
 338:main.c        ****                     thresSubtract = dev / 2;
 592              		.loc 1 338 0
 593 02d2 03EBD373 		add	r3, r3, r3, lsr #31
 594              	.LVL129:
 595 02d6 5C10     		asrs	r4, r3, #1
 596              	.LVL130:
 339:main.c        ****                     detectThres = 2000 - thresSubtract;
 597              		.loc 1 339 0
 598 02d8 C4F5FA64 		rsb	r4, r4, #2000
 599              	.LVL131:
 340:main.c        **** 
 341:main.c        ****                     lfOutADC_Start();
 600              		.loc 1 341 0
 601 02dc FFF7FEFF 		bl	lfOutADC_Start
 602              	.LVL132:
 342:main.c        **** 
 343:main.c        ****                     //Calibrate relocking parameters to prefer mode to which laser is curently lock
 344:main.c        ****                     lfOutADC_StartConvert();
 603              		.loc 1 344 0
 604 02e0 FFF7FEFF 		bl	lfOutADC_StartConvert
 605              	.LVL133:
 345:main.c        ****                     modeOut = lfOutADC_Read32();
 606              		.loc 1 345 0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 18


 607 02e4 FFF7FEFF 		bl	lfOutADC_Read32
 608              	.LVL134:
 346:main.c        **** 
 347:main.c        ****                     upRail = modeOut + 342;
 609              		.loc 1 347 0
 610 02e8 00F5AB72 		add	r2, r0, #342
 611 02ec 0592     		str	r2, [sp, #20]
 612              	.LVL135:
 348:main.c        ****                     lowRail = modeOut - 342;
 613              		.loc 1 348 0
 614 02ee A0F5AB73 		sub	r3, r0, #342
 615 02f2 0693     		str	r3, [sp, #24]
 616              	.LVL136:
 349:main.c        **** 
 350:main.c        ****                     sweepCenter = 256 * (((double) modeOut) / ((double) 53595)) - 11;
 617              		.loc 1 350 0
 618 02f4 FFF7FEFF 		bl	__aeabi_i2d
 619              	.LVL137:
 620 02f8 3BA3     		adr	r3, .L123
 621 02fa D3E90023 		ldrd	r2, [r3]
 622 02fe FFF7FEFF 		bl	__aeabi_ddiv
 623              	.LVL138:
 624 0302 0022     		movs	r2, #0
 625 0304 3C4B     		ldr	r3, .L123+16
 626 0306 FFF7FEFF 		bl	__aeabi_dmul
 627              	.LVL139:
 628 030a 0022     		movs	r2, #0
 629 030c 3D4B     		ldr	r3, .L123+28
 630 030e FFF7FEFF 		bl	__aeabi_dsub
 631              	.LVL140:
 632 0312 0646     		mov	r6, r0
 633              	.LVL141:
 634 0314 0F46     		mov	r7, r1
 635              	.LVL142:
 351:main.c        ****                     courseCenter = (int) sweepCenter;
 636              		.loc 1 351 0
 637 0316 FFF7FEFF 		bl	__aeabi_d2iz
 638              	.LVL143:
 639 031a 8246     		mov	r10, r0
 640              	.LVL144:
 352:main.c        ****                     fineProp = sweepCenter - courseCenter;
 641              		.loc 1 352 0
 642 031c FFF7FEFF 		bl	__aeabi_i2d
 643              	.LVL145:
 644 0320 0246     		mov	r2, r0
 645 0322 0B46     		mov	r3, r1
 646 0324 3046     		mov	r0, r6
 647 0326 3946     		mov	r1, r7
 648 0328 FFF7FEFF 		bl	__aeabi_dsub
 649              	.LVL146:
 353:main.c        ****                     fineCenter = (int)((fineProp * ((double) 255)) + 0.5);
 650              		.loc 1 353 0
 651 032c 30A3     		adr	r3, .L123+8
 652 032e D3E90023 		ldrd	r2, [r3]
 653 0332 FFF7FEFF 		bl	__aeabi_dmul
 654              	.LVL147:
 655 0336 0022     		movs	r2, #0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 19


 656 0338 314B     		ldr	r3, .L123+24
 657 033a FFF7FEFF 		bl	__aeabi_dadd
 658              	.LVL148:
 659 033e FFF7FEFF 		bl	__aeabi_d2iz
 660              	.LVL149:
 354:main.c        **** 
 355:main.c        ****                     if (fineCenter > 189) {
 661              		.loc 1 355 0
 662 0342 BD28     		cmp	r0, #189
 663 0344 0BDD     		ble	.L32
 356:main.c        ****                         courseLow = courseCenter - 2;
 664              		.loc 1 356 0
 665 0346 AAF10205 		sub	r5, r10, #2
 666              	.LVL150:
 357:main.c        ****                         courseHigh = courseCenter + 3;
 667              		.loc 1 357 0
 668 034a 0AF1030B 		add	fp, r10, #3
 669              	.LVL151:
 358:main.c        ****                         sweepHigh = courseCenter + 4;
 670              		.loc 1 358 0
 671 034e 0AF1040A 		add	r10, r10, #4
 672              	.LVL152:
 359:main.c        **** 
 360:main.c        ****                         fineLow = fineCenter - 190;
 673              		.loc 1 360 0
 674 0352 A0F1BE03 		sub	r3, r0, #190
 675 0356 0493     		str	r3, [sp, #16]
 676              	.LVL153:
 361:main.c        ****                         fineHigh = fineCenter - 64;
 677              		.loc 1 361 0
 678 0358 A0F14007 		sub	r7, r0, #64
 679              	.LVL154:
 680 035c 1AE0     		b	.L33
 681              	.LVL155:
 682              	.L32:
 362:main.c        ****                         /*Set +1 higher than it needs to be for 
 363:main.c        ****                                                                        the for loop to sweep throug
 364:main.c        ****                                                                        necessary high value*/
 365:main.c        ****                     } else if (fineCenter > 65 && fineCenter <= 189) {
 683              		.loc 1 365 0
 684 035e A0F14203 		sub	r3, r0, #66
 685 0362 7B2B     		cmp	r3, #123
 686 0364 0BD8     		bhi	.L34
 366:main.c        ****                         courseLow = courseCenter - 3;
 687              		.loc 1 366 0
 688 0366 AAF10305 		sub	r5, r10, #3
 689              	.LVL156:
 367:main.c        ****                         courseHigh = courseCenter + 3;
 690              		.loc 1 367 0
 691 036a 0AF1030B 		add	fp, r10, #3
 692              	.LVL157:
 368:main.c        ****                         sweepHigh = courseCenter + 4;
 693              		.loc 1 368 0
 694 036e 0AF1040A 		add	r10, r10, #4
 695              	.LVL158:
 369:main.c        **** 
 370:main.c        ****                         fineLow = fineCenter + 65;
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 20


 696              		.loc 1 370 0
 697 0372 00F14103 		add	r3, r0, #65
 698 0376 0493     		str	r3, [sp, #16]
 699              	.LVL159:
 371:main.c        ****                         fineHigh = fineCenter - 64;
 700              		.loc 1 371 0
 701 0378 A0F14007 		sub	r7, r0, #64
 702              	.LVL160:
 703 037c 0AE0     		b	.L33
 704              	.LVL161:
 705              	.L34:
 372:main.c        ****                         /*Set +1 higher than it needs to be for 
 373:main.c        ****                                                                        the for loop to sweep throug
 374:main.c        ****                                                                        necessary high value*/
 375:main.c        ****                     } else {
 376:main.c        ****                         courseLow = courseCenter - 3;
 706              		.loc 1 376 0
 707 037e AAF10305 		sub	r5, r10, #3
 708              	.LVL162:
 377:main.c        ****                         courseHigh = courseCenter + 2;
 709              		.loc 1 377 0
 710 0382 0AF1020B 		add	fp, r10, #2
 711              	.LVL163:
 378:main.c        ****                         sweepHigh = courseCenter + 4;
 712              		.loc 1 378 0
 713 0386 0AF1040A 		add	r10, r10, #4
 714              	.LVL164:
 379:main.c        **** 
 380:main.c        ****                         fineLow = fineCenter + 65;
 715              		.loc 1 380 0
 716 038a 00F14103 		add	r3, r0, #65
 717 038e 0493     		str	r3, [sp, #16]
 718              	.LVL165:
 381:main.c        ****                         fineHigh = fineCenter + 191;
 719              		.loc 1 381 0
 720 0390 00F1BF07 		add	r7, r0, #191
 721              	.LVL166:
 722              	.L33:
 382:main.c        ****                         /*Set +1 higher than it needs to be for 
 383:main.c        ****                                                                        the for loop to sweep throug
 384:main.c        ****                                                                        necessary high value*/
 385:main.c        ****                     }
 386:main.c        **** 
 387:main.c        ****                     whichLoop = 1;
 388:main.c        ****                     decideLoop = sweepHigh - courseLow;
 723              		.loc 1 388 0
 724 0394 C5EB0A06 		rsb	r6, r5, r10
 725              	.LVL167:
 387:main.c        ****                     decideLoop = sweepHigh - courseLow;
 726              		.loc 1 387 0
 727 0398 4FF00109 		mov	r9, #1
 728 039c 03E0     		b	.L55
 729              	.LVL168:
 730              	.L120:
 731 039e 039D     		ldr	r5, [sp, #12]
 732 03a0 DDF81C80 		ldr	r8, [sp, #28]
 733 03a4 019E     		ldr	r6, [sp, #4]
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 21


 734              	.LVL169:
 735              	.L55:
 323:main.c        ****                     greenLight_Write(0);
 736              		.loc 1 323 0
 737 03a6 FFF7FEFF 		bl	calibratePin_Read
 738              	.LVL170:
 739 03aa 0128     		cmp	r0, #1
 740 03ac 3FF47EAF 		beq	.L35
 741 03b0 0395     		str	r5, [sp, #12]
 742 03b2 CDF81C80 		str	r8, [sp, #28]
 743 03b6 0196     		str	r6, [sp, #4]
 389:main.c        ****                 }
 390:main.c        **** 
 391:main.c        ****                 yellowLight_Write(0);
 744              		.loc 1 391 0
 745 03b8 0020     		movs	r0, #0
 746 03ba FFF7FEFF 		bl	yellowLight_Write
 747              	.LVL171:
 392:main.c        **** 
 393:main.c        ****                 //Board is in watch mode while outside the loop below.
 394:main.c        ****                 //Board is in search mode while inside the loop below.
 395:main.c        **** 
 396:main.c        ****                 lfOutADC_StartConvert();
 748              		.loc 1 396 0
 749 03be FFF7FEFF 		bl	lfOutADC_StartConvert
 750              	.LVL172:
 397:main.c        **** 
 398:main.c        ****                 while (lfOutADC_GetResult32() > upRail || lfOutADC_GetResult32() < lowRail) {
 751              		.loc 1 398 0
 752 03c2 93E0     		b	.L36
 753              	.LVL173:
 754              	.L54:
 399:main.c        **** 
 400:main.c        ****                     //Switch to search mode    
 401:main.c        **** 
 402:main.c        ****                     greenLight_Write(0);
 755              		.loc 1 402 0
 756 03c4 0020     		movs	r0, #0
 757 03c6 FFF7FEFF 		bl	greenLight_Write
 758              	.LVL174:
 403:main.c        ****                     switches_Write(1);
 759              		.loc 1 403 0
 760 03ca 0120     		movs	r0, #1
 761 03cc FFF7FEFF 		bl	switches_Write
 762              	.LVL175:
 404:main.c        **** 
 405:main.c        ****                     check = 0;
 406:main.c        ****                     lockFail = 0;
 407:main.c        **** 
 408:main.c        ****                     courseDAC_Start();
 763              		.loc 1 408 0
 764 03d0 FFF7FEFF 		bl	courseDAC_Start
 765              	.LVL176:
 409:main.c        ****                     fineDAC_Start();
 766              		.loc 1 409 0
 767 03d4 FFF7FEFF 		bl	fineDAC_Start
 768              	.LVL177:
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 22


 410:main.c        ****                     eMonADC_StartConvert();
 769              		.loc 1 410 0
 770 03d8 FFF7FEFF 		bl	eMonADC_StartConvert
 771              	.LVL178:
 411:main.c        **** 
 412:main.c        ****                     //Sweep laser frequency    
 413:main.c        **** 
 414:main.c        ****                     for (i = courseLow; i < sweepHigh; i++) {
 772              		.loc 1 414 0
 773 03dc DDF80C80 		ldr	r8, [sp, #12]
 406:main.c        **** 
 774              		.loc 1 406 0
 775 03e0 0023     		movs	r3, #0
 776 03e2 0293     		str	r3, [sp, #8]
 405:main.c        ****                     lockFail = 0;
 777              		.loc 1 405 0
 778 03e4 1E46     		mov	r6, r3
 779              		.loc 1 414 0
 780 03e6 7FE0     		b	.L37
 781              	.L124:
 782              		.align	3
 783              	.L123:
 784 03e8 00000000 		.word	0
 785 03ec 602BEA40 		.word	1089088352
 786 03f0 00000000 		.word	0
 787 03f4 00E06F40 		.word	1081073664
 788 03f8 00007040 		.word	1081081856
 789 03fc 00002840 		.word	1076363264
 790 0400 0000E03F 		.word	1071644672
 791 0404 00002640 		.word	1076232192
 792              	.LVL179:
 793              	.L53:
 415:main.c        ****                         courseDAC_SetValue(i);
 794              		.loc 1 415 0
 795 0408 5FFA88F0 		uxtb	r0, r8
 796 040c FFF7FEFF 		bl	courseDAC_SetValue
 797              	.LVL180:
 416:main.c        **** 
 417:main.c        ****                         if (whichLoop == 1) {
 798              		.loc 1 417 0
 799 0410 B9F1010F 		cmp	r9, #1
 800 0414 1BD1     		bne	.L117
 801 0416 14E0     		b	.L95
 802              	.LVL181:
 803              	.L42:
 418:main.c        ****                             for (j = fineLow; j < 256; j++) {
 419:main.c        ****                                 fineDAC_SetValue(j);
 804              		.loc 1 419 0
 805 0418 E8B2     		uxtb	r0, r5
 806 041a FFF7FEFF 		bl	fineDAC_SetValue
 807              	.LVL182:
 420:main.c        **** 
 421:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)
 808              		.loc 1 421 0
 809 041e FFF7FEFF 		bl	eMonADC_GetResult16
 810              	.LVL183:
 811 0422 A042     		cmp	r0, r4
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 23


 812 0424 00DA     		bge	.L40
 422:main.c        ****                                     check = 1;
 813              		.loc 1 422 0
 814 0426 0126     		movs	r6, #1
 815              	.LVL184:
 816              	.L40:
 423:main.c        **** 
 424:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 817              		.loc 1 424 0
 818 0428 FFF7FEFF 		bl	eMonADC_GetResult16
 819              	.LVL185:
 820 042c A042     		cmp	r0, r4
 821 042e 03DD     		ble	.L41
 822              		.loc 1 424 0 is_stmt 0 discriminator 1
 823 0430 16B1     		cbz	r6, .L41
 425:main.c        ****                                     j = 300;
 824              		.loc 1 425 0 is_stmt 1
 825 0432 4FF49675 		mov	r5, #300
 826              	.LVL186:
 426:main.c        ****                                     i = 300;
 827              		.loc 1 426 0
 828 0436 A846     		mov	r8, r5
 829              	.LVL187:
 830              	.L41:
 427:main.c        ****                                 }
 428:main.c        **** 
 429:main.c        ****                                 CyDelayUs(1);
 831              		.loc 1 429 0 discriminator 2
 832 0438 0120     		movs	r0, #1
 833 043a FFF7FEFF 		bl	CyDelayUs
 834              	.LVL188:
 418:main.c        ****                                 fineDAC_SetValue(j);
 835              		.loc 1 418 0 discriminator 2
 836 043e 0135     		adds	r5, r5, #1
 837              	.LVL189:
 838 0440 00E0     		b	.L38
 839              	.LVL190:
 840              	.L95:
 841 0442 049D     		ldr	r5, [sp, #16]
 842              	.L38:
 843              	.LVL191:
 418:main.c        ****                                 fineDAC_SetValue(j);
 844              		.loc 1 418 0 is_stmt 0 discriminator 1
 845 0444 FF2D     		cmp	r5, #255
 846 0446 E7DD     		ble	.L42
 430:main.c        ****                             }
 431:main.c        **** 
 432:main.c        ****                             whichLoop++;
 847              		.loc 1 432 0 is_stmt 1
 848 0448 09F10109 		add	r9, r9, #1
 849              	.LVL192:
 850 044c 3CE0     		b	.L43
 851              	.LVL193:
 852              	.L117:
 433:main.c        ****                         } else if (whichLoop < decideLoop && whichLoop > 1) {
 853              		.loc 1 433 0
 854 044e 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 24


 855 0450 9945     		cmp	r9, r3
 856 0452 34DA     		bge	.L98
 857              		.loc 1 433 0 is_stmt 0 discriminator 1
 858 0454 B9F1010F 		cmp	r9, #1
 859 0458 16DC     		bgt	.L99
 860 045a 0025     		movs	r5, #0
 861 045c 30E0     		b	.L44
 862              	.LVL194:
 863              	.L48:
 434:main.c        ****                             for (j = 0; j < 256; j++) {
 435:main.c        ****                                 fineDAC_SetValue(j);
 864              		.loc 1 435 0 is_stmt 1
 865 045e E8B2     		uxtb	r0, r5
 866 0460 FFF7FEFF 		bl	fineDAC_SetValue
 867              	.LVL195:
 436:main.c        **** 
 437:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)
 868              		.loc 1 437 0
 869 0464 FFF7FEFF 		bl	eMonADC_GetResult16
 870              	.LVL196:
 871 0468 A042     		cmp	r0, r4
 872 046a 00DA     		bge	.L46
 438:main.c        ****                                     check = 1;
 873              		.loc 1 438 0
 874 046c 0126     		movs	r6, #1
 875              	.LVL197:
 876              	.L46:
 439:main.c        **** 
 440:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 877              		.loc 1 440 0
 878 046e FFF7FEFF 		bl	eMonADC_GetResult16
 879              	.LVL198:
 880 0472 A042     		cmp	r0, r4
 881 0474 03DD     		ble	.L47
 882              		.loc 1 440 0 is_stmt 0 discriminator 1
 883 0476 16B1     		cbz	r6, .L47
 441:main.c        ****                                     j = 300;
 884              		.loc 1 441 0 is_stmt 1
 885 0478 4FF49675 		mov	r5, #300
 886              	.LVL199:
 442:main.c        ****                                     i = 300;
 887              		.loc 1 442 0
 888 047c A846     		mov	r8, r5
 889              	.LVL200:
 890              	.L47:
 443:main.c        ****                                 }
 444:main.c        **** 
 445:main.c        ****                                 CyDelayUs(1);
 891              		.loc 1 445 0 discriminator 2
 892 047e 0120     		movs	r0, #1
 893 0480 FFF7FEFF 		bl	CyDelayUs
 894              	.LVL201:
 434:main.c        ****                                 fineDAC_SetValue(j);
 895              		.loc 1 434 0 discriminator 2
 896 0484 0135     		adds	r5, r5, #1
 897              	.LVL202:
 898 0486 00E0     		b	.L45
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 25


 899              	.LVL203:
 900              	.L99:
 901 0488 0025     		movs	r5, #0
 902              	.L45:
 903              	.LVL204:
 434:main.c        ****                                 fineDAC_SetValue(j);
 904              		.loc 1 434 0 is_stmt 0 discriminator 1
 905 048a FF2D     		cmp	r5, #255
 906 048c E7DD     		ble	.L48
 446:main.c        ****                             }
 447:main.c        **** 
 448:main.c        ****                             whichLoop++;
 907              		.loc 1 448 0 is_stmt 1
 908 048e 09F10109 		add	r9, r9, #1
 909              	.LVL205:
 910 0492 19E0     		b	.L43
 911              	.L51:
 449:main.c        ****                         } else {
 450:main.c        ****                             for (j = 0; j < fineHigh; j++) {
 451:main.c        ****                                 fineDAC_SetValue(j);
 912              		.loc 1 451 0
 913 0494 E8B2     		uxtb	r0, r5
 914 0496 FFF7FEFF 		bl	fineDAC_SetValue
 915              	.LVL206:
 452:main.c        **** 
 453:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)
 916              		.loc 1 453 0
 917 049a FFF7FEFF 		bl	eMonADC_GetResult16
 918              	.LVL207:
 919 049e A042     		cmp	r0, r4
 920 04a0 00DA     		bge	.L49
 454:main.c        ****                                     check = 1;
 921              		.loc 1 454 0
 922 04a2 0126     		movs	r6, #1
 923              	.LVL208:
 924              	.L49:
 455:main.c        **** 
 456:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 925              		.loc 1 456 0
 926 04a4 FFF7FEFF 		bl	eMonADC_GetResult16
 927              	.LVL209:
 928 04a8 A042     		cmp	r0, r4
 929 04aa 03DD     		ble	.L50
 930              		.loc 1 456 0 is_stmt 0 discriminator 1
 931 04ac 16B1     		cbz	r6, .L50
 457:main.c        ****                                     j = 300;
 932              		.loc 1 457 0 is_stmt 1
 933 04ae 4FF49675 		mov	r5, #300
 934              	.LVL210:
 458:main.c        ****                                     i = 300;
 935              		.loc 1 458 0
 936 04b2 A846     		mov	r8, r5
 937              	.LVL211:
 938              	.L50:
 459:main.c        ****                                 }
 460:main.c        **** 
 461:main.c        ****                                 CyDelayUs(1);
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 26


 939              		.loc 1 461 0 discriminator 2
 940 04b4 0120     		movs	r0, #1
 941 04b6 FFF7FEFF 		bl	CyDelayUs
 942              	.LVL212:
 450:main.c        ****                                 fineDAC_SetValue(j);
 943              		.loc 1 450 0 discriminator 2
 944 04ba 0135     		adds	r5, r5, #1
 945              	.LVL213:
 946 04bc 00E0     		b	.L44
 947              	.LVL214:
 948              	.L98:
 949 04be 0025     		movs	r5, #0
 950              	.L44:
 951              	.LVL215:
 450:main.c        ****                                 fineDAC_SetValue(j);
 952              		.loc 1 450 0 is_stmt 0 discriminator 1
 953 04c0 BD42     		cmp	r5, r7
 954 04c2 E7DB     		blt	.L51
 462:main.c        ****                             }
 463:main.c        **** 
 464:main.c        ****                             whichLoop = 1;
 955              		.loc 1 464 0 is_stmt 1
 956 04c4 4FF00109 		mov	r9, #1
 957              	.LVL216:
 958              	.L43:
 465:main.c        ****                         }
 466:main.c        **** 
 467:main.c        ****                         if (i == courseHigh) {
 959              		.loc 1 467 0
 960 04c8 D845     		cmp	r8, fp
 961 04ca 0BD1     		bne	.L52
 468:main.c        ****                             i = (courseLow - 1);
 962              		.loc 1 468 0
 963 04cc 039B     		ldr	r3, [sp, #12]
 964 04ce 03F1FF38 		add	r8, r3, #-1
 965              	.LVL217:
 469:main.c        ****                             lockFail++;
 966              		.loc 1 469 0
 967 04d2 029B     		ldr	r3, [sp, #8]
 968 04d4 0133     		adds	r3, r3, #1
 969              	.LVL218:
 470:main.c        **** 
 471:main.c        ****                             if (lockFail == 20) {
 970              		.loc 1 471 0
 971 04d6 142B     		cmp	r3, #20
 972 04d8 03D1     		bne	.L104
 472:main.c        ****                                 redLight_Write(1);
 973              		.loc 1 472 0
 974 04da 0120     		movs	r0, #1
 975 04dc FFF7FEFF 		bl	redLight_Write
 976              	.LVL219:
 977 04e0 00E0     		b	.L52
 978              	.LVL220:
 979              	.L104:
 469:main.c        ****                             lockFail++;
 980              		.loc 1 469 0
 981 04e2 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 27


 982              	.LVL221:
 983              	.L52:
 414:main.c        ****                         courseDAC_SetValue(i);
 984              		.loc 1 414 0 discriminator 2
 985 04e4 08F10108 		add	r8, r8, #1
 986              	.LVL222:
 987              	.L37:
 414:main.c        ****                         courseDAC_SetValue(i);
 988              		.loc 1 414 0 is_stmt 0 discriminator 1
 989 04e8 D045     		cmp	r8, r10
 990 04ea 8DDB     		blt	.L53
 991              	.LVL223:
 992              	.L36:
 398:main.c        **** 
 993              		.loc 1 398 0 is_stmt 1
 994 04ec FFF7FEFF 		bl	lfOutADC_GetResult32
 995              	.LVL224:
 996 04f0 059B     		ldr	r3, [sp, #20]
 997 04f2 9842     		cmp	r0, r3
 998 04f4 3FF766AF 		bgt	.L54
 398:main.c        **** 
 999              		.loc 1 398 0 is_stmt 0 discriminator 1
 1000 04f8 FFF7FEFF 		bl	lfOutADC_GetResult32
 1001              	.LVL225:
 1002 04fc 069B     		ldr	r3, [sp, #24]
 1003 04fe 9842     		cmp	r0, r3
 1004 0500 FFF660AF 		blt	.L54
 1005              	.LVL226:
 473:main.c        ****                                 lockFail--;
 474:main.c        ****                             }
 475:main.c        ****                         }
 476:main.c        ****                     }
 477:main.c        ****                 }
 478:main.c        **** 
 479:main.c        ****                 //Switch to watch mode
 480:main.c        **** 
 481:main.c        ****                 whichLoop = 1;
 482:main.c        ****                 switches_Write(0);
 1006              		.loc 1 482 0 is_stmt 1
 1007 0504 0020     		movs	r0, #0
 1008 0506 FFF7FEFF 		bl	switches_Write
 1009              	.LVL227:
 483:main.c        ****                 greenLight_Write(1);
 1010              		.loc 1 483 0
 1011 050a 0120     		movs	r0, #1
 1012 050c FFF7FEFF 		bl	greenLight_Write
 1013              	.LVL228:
 484:main.c        ****                 redLight_Write(0);
 1014              		.loc 1 484 0
 1015 0510 0020     		movs	r0, #0
 1016 0512 FFF7FEFF 		bl	redLight_Write
 1017              	.LVL229:
 481:main.c        ****                 switches_Write(0);
 1018              		.loc 1 481 0
 1019 0516 4FF00109 		mov	r9, #1
 1020              	.LVL230:
 1021              	.L30:
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 28


 322:main.c        ****                 while (calibratePin_Read() == 1) {
 1022              		.loc 1 322 0
 1023 051a FFF7FEFF 		bl	setting22V_Read
 1024              	.LVL231:
 1025 051e 0128     		cmp	r0, #1
 1026 0520 3FF43DAF 		beq	.L120
 1027 0524 28E1     		b	.L56
 1028              	.LVL232:
 1029              	.L61:
 485:main.c        ****             }
 486:main.c        **** 
 487:main.c        ****             while (setting28V_Read() == 1) {
 488:main.c        ****                 while (calibratePin_Read() == 1) {
 489:main.c        ****                     greenLight_Write(0);
 1030              		.loc 1 489 0
 1031 0526 0020     		movs	r0, #0
 1032 0528 FFF7FEFF 		bl	greenLight_Write
 1033              	.LVL233:
 490:main.c        ****                     yellowLight_Write(1);
 1034              		.loc 1 490 0
 1035 052c 0120     		movs	r0, #1
 1036 052e FFF7FEFF 		bl	yellowLight_Write
 1037              	.LVL234:
 491:main.c        **** 
 492:main.c        ****                     //Reading in the error signal size
 493:main.c        ****                     if (thresSample_Read() == 1) {
 1038              		.loc 1 493 0
 1039 0532 FFF7FEFF 		bl	thresSample_Read
 1040              	.LVL235:
 1041 0536 0128     		cmp	r0, #1
 1042 0538 06D1     		bne	.L57
 494:main.c        ****                         eMonADC_StartConvert();
 1043              		.loc 1 494 0
 1044 053a FFF7FEFF 		bl	eMonADC_StartConvert
 1045              	.LVL236:
 495:main.c        ****                         nowEMonVal = eMonADC_GetResult16();
 1046              		.loc 1 495 0
 1047 053e FFF7FEFF 		bl	eMonADC_GetResult16
 1048              	.LVL237:
 496:main.c        **** 
 497:main.c        ****                         if (nowEMonVal < lowVal) {
 1049              		.loc 1 497 0
 1050 0542 B042     		cmp	r0, r6
 1051 0544 00DA     		bge	.L57
 498:main.c        ****                             lowVal = nowEMonVal;
 1052              		.loc 1 498 0
 1053 0546 0646     		mov	r6, r0
 1054              	.LVL238:
 1055              	.L57:
 499:main.c        ****                         }
 500:main.c        ****                     }
 501:main.c        **** 
 502:main.c        ****                     dev = 2000 - lowVal; //From center value
 1056              		.loc 1 502 0
 1057 0548 C6F5FA63 		rsb	r3, r6, #2000
 1058              	.LVL239:
 503:main.c        ****                     thresSubtract = dev / 2;
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 29


 1059              		.loc 1 503 0
 1060 054c 03EBD373 		add	r3, r3, r3, lsr #31
 1061              	.LVL240:
 1062 0550 5C10     		asrs	r4, r3, #1
 1063              	.LVL241:
 504:main.c        ****                     detectThres = 2000 - thresSubtract;
 1064              		.loc 1 504 0
 1065 0552 C4F5FA64 		rsb	r4, r4, #2000
 1066              	.LVL242:
 505:main.c        **** 
 506:main.c        ****                     lfOutADC_Start();
 1067              		.loc 1 506 0
 1068 0556 FFF7FEFF 		bl	lfOutADC_Start
 1069              	.LVL243:
 507:main.c        **** 
 508:main.c        ****                     //Calibrate relocking parameters to prefer mode to which laser is curently lock
 509:main.c        ****                     lfOutADC_StartConvert();
 1070              		.loc 1 509 0
 1071 055a FFF7FEFF 		bl	lfOutADC_StartConvert
 1072              	.LVL244:
 510:main.c        ****                     modeOut = lfOutADC_Read32();
 1073              		.loc 1 510 0
 1074 055e FFF7FEFF 		bl	lfOutADC_Read32
 1075              	.LVL245:
 511:main.c        **** 
 512:main.c        ****                     upRail = modeOut + 269;
 1076              		.loc 1 512 0
 1077 0562 00F20D12 		addw	r2, r0, #269
 1078 0566 0592     		str	r2, [sp, #20]
 1079              	.LVL246:
 513:main.c        ****                     lowRail = modeOut - 269;
 1080              		.loc 1 513 0
 1081 0568 A0F20D13 		subw	r3, r0, #269
 1082 056c 0693     		str	r3, [sp, #24]
 1083              	.LVL247:
 514:main.c        **** 
 515:main.c        ****                     sweepCenter = 256 * (((double) modeOut) / ((double) 53595));
 1084              		.loc 1 515 0
 1085 056e FFF7FEFF 		bl	__aeabi_i2d
 1086              	.LVL248:
 1087 0572 85A3     		adr	r3, .L125
 1088 0574 D3E90023 		ldrd	r2, [r3]
 1089 0578 FFF7FEFF 		bl	__aeabi_ddiv
 1090              	.LVL249:
 1091 057c 0022     		movs	r2, #0
 1092 057e 864B     		ldr	r3, .L125+16
 1093 0580 FFF7FEFF 		bl	__aeabi_dmul
 1094              	.LVL250:
 1095 0584 8046     		mov	r8, r0
 1096              	.LVL251:
 1097 0586 8946     		mov	r9, r1
 1098              	.LVL252:
 516:main.c        ****                     courseCenter = (int) sweepCenter;
 1099              		.loc 1 516 0
 1100 0588 FFF7FEFF 		bl	__aeabi_d2iz
 1101              	.LVL253:
 1102 058c 8246     		mov	r10, r0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 30


 1103              	.LVL254:
 517:main.c        ****                     fineProp = sweepCenter - courseCenter;
 1104              		.loc 1 517 0
 1105 058e FFF7FEFF 		bl	__aeabi_i2d
 1106              	.LVL255:
 1107 0592 0246     		mov	r2, r0
 1108 0594 0B46     		mov	r3, r1
 1109 0596 4046     		mov	r0, r8
 1110 0598 4946     		mov	r1, r9
 1111 059a FFF7FEFF 		bl	__aeabi_dsub
 1112              	.LVL256:
 518:main.c        ****                     fineCenter = (int)((fineProp * ((double) 255)) + 0.5);
 1113              		.loc 1 518 0
 1114 059e 7CA3     		adr	r3, .L125+8
 1115 05a0 D3E90023 		ldrd	r2, [r3]
 1116 05a4 FFF7FEFF 		bl	__aeabi_dmul
 1117              	.LVL257:
 1118 05a8 0022     		movs	r2, #0
 1119 05aa 7C4B     		ldr	r3, .L125+20
 1120 05ac FFF7FEFF 		bl	__aeabi_dadd
 1121              	.LVL258:
 1122 05b0 FFF7FEFF 		bl	__aeabi_d2iz
 1123              	.LVL259:
 519:main.c        **** 
 520:main.c        ****                     if (fineCenter > 160) {
 1124              		.loc 1 520 0
 1125 05b4 A028     		cmp	r0, #160
 1126 05b6 0ADD     		ble	.L58
 521:main.c        ****                         courseLow = courseCenter - 1;
 1127              		.loc 1 521 0
 1128 05b8 0AF1FF35 		add	r5, r10, #-1
 1129              	.LVL260:
 522:main.c        ****                         courseHigh = courseCenter + 2;
 1130              		.loc 1 522 0
 1131 05bc 0AF1020B 		add	fp, r10, #2
 1132              	.LVL261:
 523:main.c        ****                         sweepHigh = courseCenter + 3;
 1133              		.loc 1 523 0
 1134 05c0 0AF1030A 		add	r10, r10, #3
 1135              	.LVL262:
 524:main.c        **** 
 525:main.c        ****                         fineLow = fineCenter - 95;
 1136              		.loc 1 525 0
 1137 05c4 A0F15F08 		sub	r8, r0, #95
 1138              	.LVL263:
 526:main.c        ****                         fineHigh = fineCenter - 159;
 1139              		.loc 1 526 0
 1140 05c8 A0F19F07 		sub	r7, r0, #159
 1141              	.LVL264:
 1142 05cc 17E0     		b	.L59
 1143              	.LVL265:
 1144              	.L58:
 527:main.c        ****                         /*Set +1 higher than it needs to be for 
 528:main.c        ****                                                                        the for loop to sweep throug
 529:main.c        ****                                                                        necessary high value*/
 530:main.c        ****                     } else if (fineCenter > 94 && fineCenter <= 159) {
 1145              		.loc 1 530 0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 31


 1146 05ce A0F15F03 		sub	r3, r0, #95
 1147 05d2 402B     		cmp	r3, #64
 1148 05d4 09D8     		bhi	.L60
 531:main.c        ****                         courseLow = courseCenter - 1;
 1149              		.loc 1 531 0
 1150 05d6 0AF1FF35 		add	r5, r10, #-1
 1151              	.LVL266:
 532:main.c        ****                         courseHigh = courseCenter + 1;
 1152              		.loc 1 532 0
 1153 05da 0AF1010B 		add	fp, r10, #1
 1154              	.LVL267:
 533:main.c        ****                         sweepHigh = courseCenter + 2;
 1155              		.loc 1 533 0
 1156 05de 0AF1020A 		add	r10, r10, #2
 1157              	.LVL268:
 534:main.c        **** 
 535:main.c        ****                         fineLow = fineCenter - 95;
 1158              		.loc 1 535 0
 1159 05e2 9846     		mov	r8, r3
 1160              	.LVL269:
 536:main.c        ****                         fineHigh = fineCenter + 96;
 1161              		.loc 1 536 0
 1162 05e4 00F16007 		add	r7, r0, #96
 1163              	.LVL270:
 1164 05e8 09E0     		b	.L59
 1165              	.LVL271:
 1166              	.L60:
 537:main.c        ****                         /*Set +1 higher than it needs to be for 
 538:main.c        ****                                                                        the for loop to sweep throug
 539:main.c        ****                                                                        necessary high value*/
 540:main.c        ****                     } else {
 541:main.c        ****                         courseLow = courseCenter - 2;
 1167              		.loc 1 541 0
 1168 05ea AAF10205 		sub	r5, r10, #2
 1169              	.LVL272:
 542:main.c        ****                         courseHigh = courseCenter + 1;
 1170              		.loc 1 542 0
 1171 05ee 0AF1010B 		add	fp, r10, #1
 1172              	.LVL273:
 543:main.c        ****                         sweepHigh = courseCenter + 2;
 1173              		.loc 1 543 0
 1174 05f2 0AF1020A 		add	r10, r10, #2
 1175              	.LVL274:
 544:main.c        **** 
 545:main.c        ****                         fineLow = fineCenter + 160;
 1176              		.loc 1 545 0
 1177 05f6 00F1A008 		add	r8, r0, #160
 1178              	.LVL275:
 546:main.c        ****                         fineHigh = fineCenter + 95;
 1179              		.loc 1 546 0
 1180 05fa 00F15F07 		add	r7, r0, #95
 1181              	.LVL276:
 1182              	.L59:
 547:main.c        ****                         /*Set +1 higher than it needs to be for 
 548:main.c        ****                                                                        the for loop to sweep throug
 549:main.c        ****                                                                        necessary high value*/
 550:main.c        ****                     }
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 32


 551:main.c        **** 
 552:main.c        ****                     whichLoop = 1;
 553:main.c        ****                     decideLoop = sweepHigh - courseLow;
 1183              		.loc 1 553 0
 1184 05fe C5EB0A09 		rsb	r9, r5, r10
 1185              	.LVL277:
 552:main.c        ****                     decideLoop = sweepHigh - courseLow;
 1186              		.loc 1 552 0
 1187 0602 0123     		movs	r3, #1
 1188 0604 0293     		str	r3, [sp, #8]
 1189 0606 07E0     		b	.L81
 1190              	.LVL278:
 1191              	.L121:
 1192 0608 039D     		ldr	r5, [sp, #12]
 1193 060a DDF81080 		ldr	r8, [sp, #16]
 1194 060e 079E     		ldr	r6, [sp, #28]
 1195 0610 CDF80890 		str	r9, [sp, #8]
 1196 0614 DDF80490 		ldr	r9, [sp, #4]
 1197              	.LVL279:
 1198              	.L81:
 488:main.c        ****                     greenLight_Write(0);
 1199              		.loc 1 488 0
 1200 0618 FFF7FEFF 		bl	calibratePin_Read
 1201              	.LVL280:
 1202 061c 0128     		cmp	r0, #1
 1203 061e 82D0     		beq	.L61
 1204 0620 0395     		str	r5, [sp, #12]
 1205 0622 CDF81080 		str	r8, [sp, #16]
 1206 0626 0796     		str	r6, [sp, #28]
 1207 0628 CDF80490 		str	r9, [sp, #4]
 1208 062c DDF80890 		ldr	r9, [sp, #8]
 1209              	.LVL281:
 554:main.c        ****                 }
 555:main.c        **** 
 556:main.c        ****                 yellowLight_Write(0);
 1210              		.loc 1 556 0
 1211 0630 0020     		movs	r0, #0
 1212 0632 FFF7FEFF 		bl	yellowLight_Write
 1213              	.LVL282:
 557:main.c        **** 
 558:main.c        ****                 //Board is in watch mode while outside the loop below.
 559:main.c        ****                 //Board is in search mode while inside the loop below.
 560:main.c        **** 
 561:main.c        ****                 lfOutADC_StartConvert();
 1214              		.loc 1 561 0
 1215 0636 FFF7FEFF 		bl	lfOutADC_StartConvert
 1216              	.LVL283:
 562:main.c        **** 
 563:main.c        ****                 while (lfOutADC_GetResult32() > upRail || lfOutADC_GetResult32() < lowRail) {
 1217              		.loc 1 563 0
 1218 063a 86E0     		b	.L62
 1219              	.LVL284:
 1220              	.L80:
 564:main.c        **** 
 565:main.c        ****                     //Switch to search mode    
 566:main.c        **** 
 567:main.c        ****                     greenLight_Write(0);
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 33


 1221              		.loc 1 567 0
 1222 063c 0020     		movs	r0, #0
 1223 063e FFF7FEFF 		bl	greenLight_Write
 1224              	.LVL285:
 568:main.c        ****                     switches_Write(1);
 1225              		.loc 1 568 0
 1226 0642 0120     		movs	r0, #1
 1227 0644 FFF7FEFF 		bl	switches_Write
 1228              	.LVL286:
 569:main.c        **** 
 570:main.c        ****                     check = 0;
 571:main.c        ****                     lockFail = 0;
 572:main.c        **** 
 573:main.c        ****                     courseDAC_Start();
 1229              		.loc 1 573 0
 1230 0648 FFF7FEFF 		bl	courseDAC_Start
 1231              	.LVL287:
 574:main.c        ****                     fineDAC_Start();
 1232              		.loc 1 574 0
 1233 064c FFF7FEFF 		bl	fineDAC_Start
 1234              	.LVL288:
 575:main.c        ****                     eMonADC_StartConvert();
 1235              		.loc 1 575 0
 1236 0650 FFF7FEFF 		bl	eMonADC_StartConvert
 1237              	.LVL289:
 576:main.c        **** 
 577:main.c        ****                     //Sweep laser frequency    
 578:main.c        **** 
 579:main.c        ****                     for (i = courseLow; i < sweepHigh; i++) {
 1238              		.loc 1 579 0
 1239 0654 DDF80C80 		ldr	r8, [sp, #12]
 571:main.c        **** 
 1240              		.loc 1 571 0
 1241 0658 0023     		movs	r3, #0
 1242 065a 0293     		str	r3, [sp, #8]
 570:main.c        ****                     lockFail = 0;
 1243              		.loc 1 570 0
 1244 065c 1E46     		mov	r6, r3
 1245              		.loc 1 579 0
 1246 065e 72E0     		b	.L63
 1247              	.LVL290:
 1248              	.L79:
 580:main.c        ****                         courseDAC_SetValue(i);
 1249              		.loc 1 580 0
 1250 0660 5FFA88F0 		uxtb	r0, r8
 1251 0664 FFF7FEFF 		bl	courseDAC_SetValue
 1252              	.LVL291:
 581:main.c        **** 
 582:main.c        ****                         if (whichLoop == 1) {
 1253              		.loc 1 582 0
 1254 0668 B9F1010F 		cmp	r9, #1
 1255 066c 1BD1     		bne	.L118
 1256 066e 14E0     		b	.L106
 1257              	.LVL292:
 1258              	.L68:
 583:main.c        ****                             for (j = fineLow; j < 256; j++) {
 584:main.c        ****                                 fineDAC_SetValue(j);
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 34


 1259              		.loc 1 584 0
 1260 0670 E8B2     		uxtb	r0, r5
 1261 0672 FFF7FEFF 		bl	fineDAC_SetValue
 1262              	.LVL293:
 585:main.c        **** 
 586:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)
 1263              		.loc 1 586 0
 1264 0676 FFF7FEFF 		bl	eMonADC_GetResult16
 1265              	.LVL294:
 1266 067a A042     		cmp	r0, r4
 1267 067c 00DA     		bge	.L66
 587:main.c        ****                                     check = 1;
 1268              		.loc 1 587 0
 1269 067e 0126     		movs	r6, #1
 1270              	.LVL295:
 1271              	.L66:
 588:main.c        **** 
 589:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 1272              		.loc 1 589 0
 1273 0680 FFF7FEFF 		bl	eMonADC_GetResult16
 1274              	.LVL296:
 1275 0684 A042     		cmp	r0, r4
 1276 0686 03DD     		ble	.L67
 1277              		.loc 1 589 0 is_stmt 0 discriminator 1
 1278 0688 16B1     		cbz	r6, .L67
 590:main.c        ****                                     j = 300;
 1279              		.loc 1 590 0 is_stmt 1
 1280 068a 4FF49675 		mov	r5, #300
 1281              	.LVL297:
 591:main.c        ****                                     i = 300;
 1282              		.loc 1 591 0
 1283 068e A846     		mov	r8, r5
 1284              	.LVL298:
 1285              	.L67:
 592:main.c        ****                                 }
 593:main.c        **** 
 594:main.c        ****                                 CyDelayUs(1);
 1286              		.loc 1 594 0 discriminator 2
 1287 0690 0120     		movs	r0, #1
 1288 0692 FFF7FEFF 		bl	CyDelayUs
 1289              	.LVL299:
 583:main.c        ****                                 fineDAC_SetValue(j);
 1290              		.loc 1 583 0 discriminator 2
 1291 0696 0135     		adds	r5, r5, #1
 1292              	.LVL300:
 1293 0698 00E0     		b	.L64
 1294              	.LVL301:
 1295              	.L106:
 1296 069a 049D     		ldr	r5, [sp, #16]
 1297              	.L64:
 1298              	.LVL302:
 583:main.c        ****                                 fineDAC_SetValue(j);
 1299              		.loc 1 583 0 is_stmt 0 discriminator 1
 1300 069c FF2D     		cmp	r5, #255
 1301 069e E7DD     		ble	.L68
 595:main.c        ****                             }
 596:main.c        **** 
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 35


 597:main.c        ****                             whichLoop++;
 1302              		.loc 1 597 0 is_stmt 1
 1303 06a0 09F10109 		add	r9, r9, #1
 1304              	.LVL303:
 1305 06a4 3CE0     		b	.L69
 1306              	.LVL304:
 1307              	.L118:
 598:main.c        ****                         } else if (whichLoop < decideLoop && whichLoop > 1) {
 1308              		.loc 1 598 0
 1309 06a6 019B     		ldr	r3, [sp, #4]
 1310 06a8 9945     		cmp	r9, r3
 1311 06aa 34DA     		bge	.L109
 1312              		.loc 1 598 0 is_stmt 0 discriminator 1
 1313 06ac B9F1010F 		cmp	r9, #1
 1314 06b0 16DC     		bgt	.L110
 1315 06b2 0025     		movs	r5, #0
 1316 06b4 30E0     		b	.L70
 1317              	.LVL305:
 1318              	.L74:
 599:main.c        ****                             for (j = 0; j < 256; j++) {
 600:main.c        ****                                 fineDAC_SetValue(j);
 1319              		.loc 1 600 0 is_stmt 1
 1320 06b6 E8B2     		uxtb	r0, r5
 1321 06b8 FFF7FEFF 		bl	fineDAC_SetValue
 1322              	.LVL306:
 601:main.c        **** 
 602:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)
 1323              		.loc 1 602 0
 1324 06bc FFF7FEFF 		bl	eMonADC_GetResult16
 1325              	.LVL307:
 1326 06c0 A042     		cmp	r0, r4
 1327 06c2 00DA     		bge	.L72
 603:main.c        ****                                     check = 1;
 1328              		.loc 1 603 0
 1329 06c4 0126     		movs	r6, #1
 1330              	.LVL308:
 1331              	.L72:
 604:main.c        **** 
 605:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 1332              		.loc 1 605 0
 1333 06c6 FFF7FEFF 		bl	eMonADC_GetResult16
 1334              	.LVL309:
 1335 06ca A042     		cmp	r0, r4
 1336 06cc 03DD     		ble	.L73
 1337              		.loc 1 605 0 is_stmt 0 discriminator 1
 1338 06ce 16B1     		cbz	r6, .L73
 606:main.c        ****                                     j = 300;
 1339              		.loc 1 606 0 is_stmt 1
 1340 06d0 4FF49675 		mov	r5, #300
 1341              	.LVL310:
 607:main.c        ****                                     i = 300;
 1342              		.loc 1 607 0
 1343 06d4 A846     		mov	r8, r5
 1344              	.LVL311:
 1345              	.L73:
 608:main.c        ****                                 }
 609:main.c        **** 
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 36


 610:main.c        ****                                 CyDelayUs(1);
 1346              		.loc 1 610 0 discriminator 2
 1347 06d6 0120     		movs	r0, #1
 1348 06d8 FFF7FEFF 		bl	CyDelayUs
 1349              	.LVL312:
 599:main.c        ****                                 fineDAC_SetValue(j);
 1350              		.loc 1 599 0 discriminator 2
 1351 06dc 0135     		adds	r5, r5, #1
 1352              	.LVL313:
 1353 06de 00E0     		b	.L71
 1354              	.LVL314:
 1355              	.L110:
 1356 06e0 0025     		movs	r5, #0
 1357              	.L71:
 1358              	.LVL315:
 599:main.c        ****                                 fineDAC_SetValue(j);
 1359              		.loc 1 599 0 is_stmt 0 discriminator 1
 1360 06e2 FF2D     		cmp	r5, #255
 1361 06e4 E7DD     		ble	.L74
 611:main.c        ****                             }
 612:main.c        **** 
 613:main.c        ****                             whichLoop++;
 1362              		.loc 1 613 0 is_stmt 1
 1363 06e6 09F10109 		add	r9, r9, #1
 1364              	.LVL316:
 1365 06ea 19E0     		b	.L69
 1366              	.L77:
 614:main.c        ****                         } else {
 615:main.c        ****                             for (j = 0; j < fineHigh; j++) {
 616:main.c        ****                                 fineDAC_SetValue(j);
 1367              		.loc 1 616 0
 1368 06ec E8B2     		uxtb	r0, r5
 1369 06ee FFF7FEFF 		bl	fineDAC_SetValue
 1370              	.LVL317:
 617:main.c        **** 
 618:main.c        ****                                 if (eMonADC_GetResult16() < detectThres)
 1371              		.loc 1 618 0
 1372 06f2 FFF7FEFF 		bl	eMonADC_GetResult16
 1373              	.LVL318:
 1374 06f6 A042     		cmp	r0, r4
 1375 06f8 00DA     		bge	.L75
 619:main.c        ****                                     check = 1;
 1376              		.loc 1 619 0
 1377 06fa 0126     		movs	r6, #1
 1378              	.LVL319:
 1379              	.L75:
 620:main.c        **** 
 621:main.c        ****                                 if (eMonADC_GetResult16() > detectThres && check == 1) {
 1380              		.loc 1 621 0
 1381 06fc FFF7FEFF 		bl	eMonADC_GetResult16
 1382              	.LVL320:
 1383 0700 A042     		cmp	r0, r4
 1384 0702 03DD     		ble	.L76
 1385              		.loc 1 621 0 is_stmt 0 discriminator 1
 1386 0704 16B1     		cbz	r6, .L76
 622:main.c        ****                                     j = 300;
 1387              		.loc 1 622 0 is_stmt 1
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 37


 1388 0706 4FF49675 		mov	r5, #300
 1389              	.LVL321:
 623:main.c        ****                                     i = 300;
 1390              		.loc 1 623 0
 1391 070a A846     		mov	r8, r5
 1392              	.LVL322:
 1393              	.L76:
 624:main.c        ****                                 }
 625:main.c        **** 
 626:main.c        ****                                 CyDelayUs(1);
 1394              		.loc 1 626 0 discriminator 2
 1395 070c 0120     		movs	r0, #1
 1396 070e FFF7FEFF 		bl	CyDelayUs
 1397              	.LVL323:
 615:main.c        ****                                 fineDAC_SetValue(j);
 1398              		.loc 1 615 0 discriminator 2
 1399 0712 0135     		adds	r5, r5, #1
 1400              	.LVL324:
 1401 0714 00E0     		b	.L70
 1402              	.LVL325:
 1403              	.L109:
 1404 0716 0025     		movs	r5, #0
 1405              	.L70:
 1406              	.LVL326:
 615:main.c        ****                                 fineDAC_SetValue(j);
 1407              		.loc 1 615 0 is_stmt 0 discriminator 1
 1408 0718 BD42     		cmp	r5, r7
 1409 071a E7DB     		blt	.L77
 627:main.c        ****                             }
 628:main.c        **** 
 629:main.c        ****                             whichLoop = 1;
 1410              		.loc 1 629 0 is_stmt 1
 1411 071c 4FF00109 		mov	r9, #1
 1412              	.LVL327:
 1413              	.L69:
 630:main.c        ****                         }
 631:main.c        **** 
 632:main.c        ****                         if (i == courseHigh) {
 1414              		.loc 1 632 0
 1415 0720 D845     		cmp	r8, fp
 1416 0722 0BD1     		bne	.L78
 633:main.c        ****                             i = (courseLow - 1);
 1417              		.loc 1 633 0
 1418 0724 039B     		ldr	r3, [sp, #12]
 1419 0726 03F1FF38 		add	r8, r3, #-1
 1420              	.LVL328:
 634:main.c        ****                             lockFail++;
 1421              		.loc 1 634 0
 1422 072a 029B     		ldr	r3, [sp, #8]
 1423 072c 0133     		adds	r3, r3, #1
 1424              	.LVL329:
 635:main.c        **** 
 636:main.c        ****                             if (lockFail == 20) {
 1425              		.loc 1 636 0
 1426 072e 142B     		cmp	r3, #20
 1427 0730 03D1     		bne	.L115
 637:main.c        ****                                 redLight_Write(1);
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 38


 1428              		.loc 1 637 0
 1429 0732 0120     		movs	r0, #1
 1430 0734 FFF7FEFF 		bl	redLight_Write
 1431              	.LVL330:
 1432 0738 00E0     		b	.L78
 1433              	.LVL331:
 1434              	.L115:
 634:main.c        ****                             lockFail++;
 1435              		.loc 1 634 0
 1436 073a 0293     		str	r3, [sp, #8]
 1437              	.LVL332:
 1438              	.L78:
 638:main.c        ****                                 lockFail--;
 639:main.c        ****                             }
 640:main.c        ****                         }
 641:main.c        **** 
 642:main.c        ****                         CyDelayUs(1);
 1439              		.loc 1 642 0 discriminator 2
 1440 073c 0120     		movs	r0, #1
 1441 073e FFF7FEFF 		bl	CyDelayUs
 1442              	.LVL333:
 579:main.c        ****                         courseDAC_SetValue(i);
 1443              		.loc 1 579 0 discriminator 2
 1444 0742 08F10108 		add	r8, r8, #1
 1445              	.LVL334:
 1446              	.L63:
 579:main.c        ****                         courseDAC_SetValue(i);
 1447              		.loc 1 579 0 is_stmt 0 discriminator 1
 1448 0746 D045     		cmp	r8, r10
 1449 0748 8ADB     		blt	.L79
 1450              	.LVL335:
 1451              	.L62:
 563:main.c        **** 
 1452              		.loc 1 563 0 is_stmt 1
 1453 074a FFF7FEFF 		bl	lfOutADC_GetResult32
 1454              	.LVL336:
 1455 074e 059B     		ldr	r3, [sp, #20]
 1456 0750 9842     		cmp	r0, r3
 1457 0752 3FF773AF 		bgt	.L80
 563:main.c        **** 
 1458              		.loc 1 563 0 is_stmt 0 discriminator 1
 1459 0756 FFF7FEFF 		bl	lfOutADC_GetResult32
 1460              	.LVL337:
 1461 075a 069B     		ldr	r3, [sp, #24]
 1462 075c 9842     		cmp	r0, r3
 1463 075e FFF66DAF 		blt	.L80
 1464              	.LVL338:
 643:main.c        ****                     }
 644:main.c        ****                 }
 645:main.c        **** 
 646:main.c        ****                 //Switch to watch mode
 647:main.c        **** 
 648:main.c        ****                 whichLoop = 1;
 649:main.c        ****                 switches_Write(0);
 1465              		.loc 1 649 0 is_stmt 1
 1466 0762 0020     		movs	r0, #0
 1467 0764 FFF7FEFF 		bl	switches_Write
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 39


 1468              	.LVL339:
 650:main.c        ****                 greenLight_Write(1);
 1469              		.loc 1 650 0
 1470 0768 0120     		movs	r0, #1
 1471 076a FFF7FEFF 		bl	greenLight_Write
 1472              	.LVL340:
 651:main.c        ****                 redLight_Write(0);
 1473              		.loc 1 651 0
 1474 076e 0020     		movs	r0, #0
 1475 0770 FFF7FEFF 		bl	redLight_Write
 1476              	.LVL341:
 648:main.c        ****                 switches_Write(0);
 1477              		.loc 1 648 0
 1478 0774 4FF00109 		mov	r9, #1
 1479              	.LVL342:
 1480              	.L56:
 487:main.c        ****                 while (calibratePin_Read() == 1) {
 1481              		.loc 1 487 0
 1482 0778 FFF7FEFF 		bl	setting28V_Read
 1483              	.LVL343:
 1484 077c 0128     		cmp	r0, #1
 1485 077e 3FF443AF 		beq	.L121
 1486 0782 87E5     		b	.L4
 1487              	.L126:
 1488 0784 AFF30080 		.align	3
 1489              	.L125:
 1490 0788 00000000 		.word	0
 1491 078c 602BEA40 		.word	1089088352
 1492 0790 00000000 		.word	0
 1493 0794 00E06F40 		.word	1081073664
 1494 0798 00007040 		.word	1081081856
 1495 079c 0000E03F 		.word	1071644672
 1496              		.cfi_endproc
 1497              	.LFE63:
 1498              		.size	main, .-main
 1499              		.text
 1500              	.Letext0:
 1501              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1502              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1503              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1504              		.file 5 "Generated_Source\\PSoC5/checkLight.h"
 1505              		.file 6 "Generated_Source\\PSoC5/yellowLight.h"
 1506              		.file 7 "Generated_Source\\PSoC5/greenLight.h"
 1507              		.file 8 "Generated_Source\\PSoC5/redLight.h"
 1508              		.file 9 "Generated_Source\\PSoC5/switches.h"
 1509              		.file 10 "Generated_Source\\PSoC5/CyLib.h"
 1510              		.file 11 "Generated_Source\\PSoC5/lockIn.h"
 1511              		.file 12 "Generated_Source\\PSoC5/thresSample.h"
 1512              		.file 13 "Generated_Source\\PSoC5/eMonADC.h"
 1513              		.file 14 "Generated_Source\\PSoC5/lfOutADC.h"
 1514              		.file 15 "Generated_Source\\PSoC5/calibratePin.h"
 1515              		.file 16 "Generated_Source\\PSoC5/courseDAC.h"
 1516              		.file 17 "Generated_Source\\PSoC5/fineDAC.h"
 1517              		.file 18 "Generated_Source\\PSoC5/setting8V.h"
 1518              		.file 19 "Generated_Source\\PSoC5/setting22V.h"
 1519              		.file 20 "Generated_Source\\PSoC5/setting28V.h"
 1520              		.file 21 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 40


 1521              		.section	.debug_info,"",%progbits
 1522              	.Ldebug_info0:
 1523 0000 CC090000 		.4byte	0x9cc
 1524 0004 0400     		.2byte	0x4
 1525 0006 00000000 		.4byte	.Ldebug_abbrev0
 1526 000a 04       		.byte	0x4
 1527 000b 01       		.uleb128 0x1
 1528 000c 39030000 		.4byte	.LASF64
 1529 0010 01       		.byte	0x1
 1530 0011 E7020000 		.4byte	.LASF65
 1531 0015 60000000 		.4byte	.LASF66
 1532 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1533 001d 00000000 		.4byte	0
 1534 0021 00000000 		.4byte	.Ldebug_line0
 1535 0025 02       		.uleb128 0x2
 1536 0026 01       		.byte	0x1
 1537 0027 06       		.byte	0x6
 1538 0028 DA010000 		.4byte	.LASF0
 1539 002c 02       		.uleb128 0x2
 1540 002d 01       		.byte	0x1
 1541 002e 08       		.byte	0x8
 1542 002f B8010000 		.4byte	.LASF1
 1543 0033 02       		.uleb128 0x2
 1544 0034 02       		.byte	0x2
 1545 0035 05       		.byte	0x5
 1546 0036 0B000000 		.4byte	.LASF2
 1547 003a 02       		.uleb128 0x2
 1548 003b 02       		.byte	0x2
 1549 003c 07       		.byte	0x7
 1550 003d 58020000 		.4byte	.LASF3
 1551 0041 03       		.uleb128 0x3
 1552 0042 25030000 		.4byte	.LASF9
 1553 0046 02       		.byte	0x2
 1554 0047 3F       		.byte	0x3f
 1555 0048 4C000000 		.4byte	0x4c
 1556 004c 02       		.uleb128 0x2
 1557 004d 04       		.byte	0x4
 1558 004e 05       		.byte	0x5
 1559 004f EE030000 		.4byte	.LASF4
 1560 0053 02       		.uleb128 0x2
 1561 0054 04       		.byte	0x4
 1562 0055 07       		.byte	0x7
 1563 0056 EE020000 		.4byte	.LASF5
 1564 005a 02       		.uleb128 0x2
 1565 005b 08       		.byte	0x8
 1566 005c 05       		.byte	0x5
 1567 005d 40010000 		.4byte	.LASF6
 1568 0061 02       		.uleb128 0x2
 1569 0062 08       		.byte	0x8
 1570 0063 07       		.byte	0x7
 1571 0064 EE010000 		.4byte	.LASF7
 1572 0068 04       		.uleb128 0x4
 1573 0069 04       		.byte	0x4
 1574 006a 05       		.byte	0x5
 1575 006b 696E7400 		.ascii	"int\000"
 1576 006f 02       		.uleb128 0x2
 1577 0070 04       		.byte	0x4
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 41


 1578 0071 07       		.byte	0x7
 1579 0072 13020000 		.4byte	.LASF8
 1580 0076 03       		.uleb128 0x3
 1581 0077 E6010000 		.4byte	.LASF10
 1582 007b 03       		.byte	0x3
 1583 007c 2C       		.byte	0x2c
 1584 007d 41000000 		.4byte	0x41
 1585 0081 05       		.uleb128 0x5
 1586 0082 DF000000 		.4byte	.LASF11
 1587 0086 04       		.byte	0x4
 1588 0087 9201     		.2byte	0x192
 1589 0089 2C000000 		.4byte	0x2c
 1590 008d 05       		.uleb128 0x5
 1591 008e 48000000 		.4byte	.LASF12
 1592 0092 04       		.byte	0x4
 1593 0093 9301     		.2byte	0x193
 1594 0095 3A000000 		.4byte	0x3a
 1595 0099 05       		.uleb128 0x5
 1596 009a E0020000 		.4byte	.LASF13
 1597 009e 04       		.byte	0x4
 1598 009f 9401     		.2byte	0x194
 1599 00a1 53000000 		.4byte	0x53
 1600 00a5 05       		.uleb128 0x5
 1601 00a6 D9000000 		.4byte	.LASF14
 1602 00aa 04       		.byte	0x4
 1603 00ab 9601     		.2byte	0x196
 1604 00ad 33000000 		.4byte	0x33
 1605 00b1 05       		.uleb128 0x5
 1606 00b2 00030000 		.4byte	.LASF15
 1607 00b6 04       		.byte	0x4
 1608 00b7 9701     		.2byte	0x197
 1609 00b9 4C000000 		.4byte	0x4c
 1610 00bd 02       		.uleb128 0x2
 1611 00be 04       		.byte	0x4
 1612 00bf 04       		.byte	0x4
 1613 00c0 14010000 		.4byte	.LASF16
 1614 00c4 02       		.uleb128 0x2
 1615 00c5 08       		.byte	0x8
 1616 00c6 04       		.byte	0x4
 1617 00c7 06030000 		.4byte	.LASF17
 1618 00cb 02       		.uleb128 0x2
 1619 00cc 01       		.byte	0x1
 1620 00cd 08       		.byte	0x8
 1621 00ce 6B020000 		.4byte	.LASF18
 1622 00d2 02       		.uleb128 0x2
 1623 00d3 04       		.byte	0x4
 1624 00d4 07       		.byte	0x7
 1625 00d5 15000000 		.4byte	.LASF19
 1626 00d9 06       		.uleb128 0x6
 1627 00da 1E000000 		.4byte	.LASF67
 1628 00de 01       		.byte	0x1
 1629 00df 19       		.byte	0x19
 1630 00e0 68000000 		.4byte	0x68
 1631 00e4 00000000 		.4byte	.LFB63
 1632 00e8 A0070000 		.4byte	.LFE63-.LFB63
 1633 00ec 01       		.uleb128 0x1
 1634 00ed 9C       		.byte	0x9c
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 42


 1635 00ee 98080000 		.4byte	0x898
 1636 00f2 07       		.uleb128 0x7
 1637 00f3 6900     		.ascii	"i\000"
 1638 00f5 01       		.byte	0x1
 1639 00f6 1E       		.byte	0x1e
 1640 00f7 68000000 		.4byte	0x68
 1641 00fb 00000000 		.4byte	.LLST0
 1642 00ff 07       		.uleb128 0x7
 1643 0100 6A00     		.ascii	"j\000"
 1644 0102 01       		.byte	0x1
 1645 0103 1F       		.byte	0x1f
 1646 0104 68000000 		.4byte	0x68
 1647 0108 59000000 		.4byte	.LLST1
 1648 010c 08       		.uleb128 0x8
 1649 010d DC030000 		.4byte	.LASF20
 1650 0111 01       		.byte	0x1
 1651 0112 20       		.byte	0x20
 1652 0113 68000000 		.4byte	0x68
 1653 0117 75010000 		.4byte	.LLST2
 1654 011b 08       		.uleb128 0x8
 1655 011c 96010000 		.4byte	.LASF21
 1656 0120 01       		.byte	0x1
 1657 0121 22       		.byte	0x22
 1658 0122 68000000 		.4byte	0x68
 1659 0126 CE010000 		.4byte	.LLST3
 1660 012a 08       		.uleb128 0x8
 1661 012b 1E030000 		.4byte	.LASF22
 1662 012f 01       		.byte	0x1
 1663 0130 23       		.byte	0x23
 1664 0131 68000000 		.4byte	0x68
 1665 0135 36020000 		.4byte	.LLST4
 1666 0139 08       		.uleb128 0x8
 1667 013a 2F020000 		.4byte	.LASF23
 1668 013e 01       		.byte	0x1
 1669 013f 24       		.byte	0x24
 1670 0140 68000000 		.4byte	0x68
 1671 0144 9B020000 		.4byte	.LLST5
 1672 0148 08       		.uleb128 0x8
 1673 0149 15040000 		.4byte	.LASF24
 1674 014d 01       		.byte	0x1
 1675 014e 25       		.byte	0x25
 1676 014f 68000000 		.4byte	0x68
 1677 0153 00030000 		.4byte	.LLST6
 1678 0157 08       		.uleb128 0x8
 1679 0158 E2030000 		.4byte	.LASF25
 1680 015c 01       		.byte	0x1
 1681 015d 26       		.byte	0x26
 1682 015e C4000000 		.4byte	0xc4
 1683 0162 A3030000 		.4byte	.LLST7
 1684 0166 08       		.uleb128 0x8
 1685 0167 1A010000 		.4byte	.LASF26
 1686 016b 01       		.byte	0x1
 1687 016c 27       		.byte	0x27
 1688 016d 68000000 		.4byte	0x68
 1689 0171 2F040000 		.4byte	.LLST8
 1690 0175 08       		.uleb128 0x8
 1691 0176 2F030000 		.4byte	.LASF27
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 43


 1692 017a 01       		.byte	0x1
 1693 017b 28       		.byte	0x28
 1694 017c 68000000 		.4byte	0x68
 1695 0180 3C050000 		.4byte	.LLST9
 1696 0184 08       		.uleb128 0x8
 1697 0185 4D020000 		.4byte	.LASF28
 1698 0189 01       		.byte	0x1
 1699 018a 29       		.byte	0x29
 1700 018b 68000000 		.4byte	0x68
 1701 018f E4050000 		.4byte	.LLST10
 1702 0193 08       		.uleb128 0x8
 1703 0194 C6010000 		.4byte	.LASF29
 1704 0198 01       		.byte	0x1
 1705 0199 2A       		.byte	0x2a
 1706 019a C4000000 		.4byte	0xc4
 1707 019e 03060000 		.4byte	.LLST11
 1708 01a2 08       		.uleb128 0x8
 1709 01a3 00000000 		.4byte	.LASF30
 1710 01a7 01       		.byte	0x1
 1711 01a8 2B       		.byte	0x2b
 1712 01a9 68000000 		.4byte	0x68
 1713 01ad 4F060000 		.4byte	.LLST12
 1714 01b1 08       		.uleb128 0x8
 1715 01b2 05040000 		.4byte	.LASF31
 1716 01b6 01       		.byte	0x1
 1717 01b7 2C       		.byte	0x2c
 1718 01b8 68000000 		.4byte	0x68
 1719 01bc 84060000 		.4byte	.LLST13
 1720 01c0 08       		.uleb128 0x8
 1721 01c1 0B010000 		.4byte	.LASF32
 1722 01c5 01       		.byte	0x1
 1723 01c6 2D       		.byte	0x2d
 1724 01c7 68000000 		.4byte	0x68
 1725 01cb 43070000 		.4byte	.LLST14
 1726 01cf 08       		.uleb128 0x8
 1727 01d0 CF010000 		.4byte	.LASF33
 1728 01d4 01       		.byte	0x1
 1729 01d5 2F       		.byte	0x2f
 1730 01d6 68000000 		.4byte	0x68
 1731 01da 83070000 		.4byte	.LLST15
 1732 01de 08       		.uleb128 0x8
 1733 01df 41000000 		.4byte	.LASF34
 1734 01e3 01       		.byte	0x1
 1735 01e4 30       		.byte	0x30
 1736 01e5 68000000 		.4byte	0x68
 1737 01e9 BA070000 		.4byte	.LLST16
 1738 01ed 07       		.uleb128 0x7
 1739 01ee 64657600 		.ascii	"dev\000"
 1740 01f2 01       		.byte	0x1
 1741 01f3 31       		.byte	0x31
 1742 01f4 68000000 		.4byte	0x68
 1743 01f8 43080000 		.4byte	.LLST17
 1744 01fc 08       		.uleb128 0x8
 1745 01fd 05020000 		.4byte	.LASF35
 1746 0201 01       		.byte	0x1
 1747 0202 32       		.byte	0x32
 1748 0203 68000000 		.4byte	0x68
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 44


 1749 0207 AB080000 		.4byte	.LLST18
 1750 020b 08       		.uleb128 0x8
 1751 020c 2E040000 		.4byte	.LASF36
 1752 0210 01       		.byte	0x1
 1753 0211 33       		.byte	0x33
 1754 0212 68000000 		.4byte	0x68
 1755 0216 5E090000 		.4byte	.LLST19
 1756 021a 08       		.uleb128 0x8
 1757 021b 27010000 		.4byte	.LASF37
 1758 021f 01       		.byte	0x1
 1759 0220 35       		.byte	0x35
 1760 0221 68000000 		.4byte	0x68
 1761 0225 9E090000 		.4byte	.LLST20
 1762 0229 08       		.uleb128 0x8
 1763 022a AD020000 		.4byte	.LASF38
 1764 022e 01       		.byte	0x1
 1765 022f 36       		.byte	0x36
 1766 0230 68000000 		.4byte	0x68
 1767 0234 6A0A0000 		.4byte	.LLST21
 1768 0238 08       		.uleb128 0x8
 1769 0239 D7020000 		.4byte	.LASF39
 1770 023d 01       		.byte	0x1
 1771 023e 38       		.byte	0x38
 1772 023f 68000000 		.4byte	0x68
 1773 0243 190B0000 		.4byte	.LLST22
 1774 0247 09       		.uleb128 0x9
 1775 0248 0E000000 		.4byte	.LVL1
 1776 024c A9080000 		.4byte	0x8a9
 1777 0250 5A020000 		.4byte	0x25a
 1778 0254 0A       		.uleb128 0xa
 1779 0255 01       		.uleb128 0x1
 1780 0256 50       		.byte	0x50
 1781 0257 01       		.uleb128 0x1
 1782 0258 31       		.byte	0x31
 1783 0259 00       		.byte	0
 1784 025a 09       		.uleb128 0x9
 1785 025b 14000000 		.4byte	.LVL2
 1786 025f BA080000 		.4byte	0x8ba
 1787 0263 6D020000 		.4byte	0x26d
 1788 0267 0A       		.uleb128 0xa
 1789 0268 01       		.uleb128 0x1
 1790 0269 50       		.byte	0x50
 1791 026a 01       		.uleb128 0x1
 1792 026b 30       		.byte	0x30
 1793 026c 00       		.byte	0
 1794 026d 09       		.uleb128 0x9
 1795 026e 1A000000 		.4byte	.LVL3
 1796 0272 CB080000 		.4byte	0x8cb
 1797 0276 80020000 		.4byte	0x280
 1798 027a 0A       		.uleb128 0xa
 1799 027b 01       		.uleb128 0x1
 1800 027c 50       		.byte	0x50
 1801 027d 01       		.uleb128 0x1
 1802 027e 30       		.byte	0x30
 1803 027f 00       		.byte	0
 1804 0280 09       		.uleb128 0x9
 1805 0281 20000000 		.4byte	.LVL4
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 45


 1806 0285 DC080000 		.4byte	0x8dc
 1807 0289 93020000 		.4byte	0x293
 1808 028d 0A       		.uleb128 0xa
 1809 028e 01       		.uleb128 0x1
 1810 028f 50       		.byte	0x50
 1811 0290 01       		.uleb128 0x1
 1812 0291 30       		.byte	0x30
 1813 0292 00       		.byte	0
 1814 0293 09       		.uleb128 0x9
 1815 0294 26000000 		.4byte	.LVL5
 1816 0298 ED080000 		.4byte	0x8ed
 1817 029c A6020000 		.4byte	0x2a6
 1818 02a0 0A       		.uleb128 0xa
 1819 02a1 01       		.uleb128 0x1
 1820 02a2 50       		.byte	0x50
 1821 02a3 01       		.uleb128 0x1
 1822 02a4 30       		.byte	0x30
 1823 02a5 00       		.byte	0
 1824 02a6 0B       		.uleb128 0xb
 1825 02a7 2A000000 		.4byte	.LVL6
 1826 02ab FE080000 		.4byte	0x8fe
 1827 02af 09       		.uleb128 0x9
 1828 02b0 32000000 		.4byte	.LVL7
 1829 02b4 05090000 		.4byte	0x905
 1830 02b8 C3020000 		.4byte	0x2c3
 1831 02bc 0A       		.uleb128 0xa
 1832 02bd 01       		.uleb128 0x1
 1833 02be 50       		.byte	0x50
 1834 02bf 02       		.uleb128 0x2
 1835 02c0 08       		.byte	0x8
 1836 02c1 32       		.byte	0x32
 1837 02c2 00       		.byte	0
 1838 02c3 0B       		.uleb128 0xb
 1839 02c4 36000000 		.4byte	.LVL8
 1840 02c8 16090000 		.4byte	0x916
 1841 02cc 09       		.uleb128 0x9
 1842 02cd 5E000000 		.4byte	.LVL10
 1843 02d1 CB080000 		.4byte	0x8cb
 1844 02d5 DF020000 		.4byte	0x2df
 1845 02d9 0A       		.uleb128 0xa
 1846 02da 01       		.uleb128 0x1
 1847 02db 50       		.byte	0x50
 1848 02dc 01       		.uleb128 0x1
 1849 02dd 30       		.byte	0x30
 1850 02de 00       		.byte	0
 1851 02df 09       		.uleb128 0x9
 1852 02e0 64000000 		.4byte	.LVL11
 1853 02e4 BA080000 		.4byte	0x8ba
 1854 02e8 F2020000 		.4byte	0x2f2
 1855 02ec 0A       		.uleb128 0xa
 1856 02ed 01       		.uleb128 0x1
 1857 02ee 50       		.byte	0x50
 1858 02ef 01       		.uleb128 0x1
 1859 02f0 31       		.byte	0x31
 1860 02f1 00       		.byte	0
 1861 02f2 0B       		.uleb128 0xb
 1862 02f3 68000000 		.4byte	.LVL12
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 46


 1863 02f7 21090000 		.4byte	0x921
 1864 02fb 0B       		.uleb128 0xb
 1865 02fc 70000000 		.4byte	.LVL13
 1866 0300 2C090000 		.4byte	0x92c
 1867 0304 0B       		.uleb128 0xb
 1868 0305 74000000 		.4byte	.LVL14
 1869 0309 33090000 		.4byte	0x933
 1870 030d 0B       		.uleb128 0xb
 1871 030e 8C000000 		.4byte	.LVL20
 1872 0312 3E090000 		.4byte	0x93e
 1873 0316 0B       		.uleb128 0xb
 1874 0317 90000000 		.4byte	.LVL21
 1875 031b 45090000 		.4byte	0x945
 1876 031f 0B       		.uleb128 0xb
 1877 0320 94000000 		.4byte	.LVL22
 1878 0324 4C090000 		.4byte	0x94c
 1879 0328 0B       		.uleb128 0xb
 1880 0329 42010000 		.4byte	.LVL57
 1881 032d 57090000 		.4byte	0x957
 1882 0331 09       		.uleb128 0x9
 1883 0332 58010000 		.4byte	.LVL59
 1884 0336 BA080000 		.4byte	0x8ba
 1885 033a 44030000 		.4byte	0x344
 1886 033e 0A       		.uleb128 0xa
 1887 033f 01       		.uleb128 0x1
 1888 0340 50       		.byte	0x50
 1889 0341 01       		.uleb128 0x1
 1890 0342 30       		.byte	0x30
 1891 0343 00       		.byte	0
 1892 0344 0B       		.uleb128 0xb
 1893 0345 5C010000 		.4byte	.LVL60
 1894 0349 45090000 		.4byte	0x945
 1895 034d 09       		.uleb128 0x9
 1896 034e 64010000 		.4byte	.LVL62
 1897 0352 CB080000 		.4byte	0x8cb
 1898 0356 60030000 		.4byte	0x360
 1899 035a 0A       		.uleb128 0xa
 1900 035b 01       		.uleb128 0x1
 1901 035c 50       		.byte	0x50
 1902 035d 01       		.uleb128 0x1
 1903 035e 30       		.byte	0x30
 1904 035f 00       		.byte	0
 1905 0360 09       		.uleb128 0x9
 1906 0361 6A010000 		.4byte	.LVL63
 1907 0365 ED080000 		.4byte	0x8ed
 1908 0369 73030000 		.4byte	0x373
 1909 036d 0A       		.uleb128 0xa
 1910 036e 01       		.uleb128 0x1
 1911 036f 50       		.byte	0x50
 1912 0370 01       		.uleb128 0x1
 1913 0371 31       		.byte	0x31
 1914 0372 00       		.byte	0
 1915 0373 0B       		.uleb128 0xb
 1916 0374 6E010000 		.4byte	.LVL64
 1917 0378 62090000 		.4byte	0x962
 1918 037c 0B       		.uleb128 0xb
 1919 037d 72010000 		.4byte	.LVL65
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 47


 1920 0381 69090000 		.4byte	0x969
 1921 0385 0B       		.uleb128 0xb
 1922 0386 76010000 		.4byte	.LVL66
 1923 038a 2C090000 		.4byte	0x92c
 1924 038e 09       		.uleb128 0x9
 1925 038f 8A010000 		.4byte	.LVL68
 1926 0393 70090000 		.4byte	0x970
 1927 0397 A2030000 		.4byte	0x3a2
 1928 039b 0A       		.uleb128 0xa
 1929 039c 01       		.uleb128 0x1
 1930 039d 50       		.byte	0x50
 1931 039e 02       		.uleb128 0x2
 1932 039f 78       		.byte	0x78
 1933 03a0 00       		.sleb128 0
 1934 03a1 00       		.byte	0
 1935 03a2 09       		.uleb128 0x9
 1936 03a3 98010000 		.4byte	.LVL70
 1937 03a7 81090000 		.4byte	0x981
 1938 03ab B6030000 		.4byte	0x3b6
 1939 03af 0A       		.uleb128 0xa
 1940 03b0 01       		.uleb128 0x1
 1941 03b1 50       		.byte	0x50
 1942 03b2 02       		.uleb128 0x2
 1943 03b3 75       		.byte	0x75
 1944 03b4 00       		.sleb128 0
 1945 03b5 00       		.byte	0
 1946 03b6 0B       		.uleb128 0xb
 1947 03b7 9C010000 		.4byte	.LVL71
 1948 03bb 33090000 		.4byte	0x933
 1949 03bf 0B       		.uleb128 0xb
 1950 03c0 A6010000 		.4byte	.LVL73
 1951 03c4 33090000 		.4byte	0x933
 1952 03c8 09       		.uleb128 0x9
 1953 03c9 B8010000 		.4byte	.LVL76
 1954 03cd 92090000 		.4byte	0x992
 1955 03d1 DB030000 		.4byte	0x3db
 1956 03d5 0A       		.uleb128 0xa
 1957 03d6 01       		.uleb128 0x1
 1958 03d7 50       		.byte	0x50
 1959 03d8 01       		.uleb128 0x1
 1960 03d9 30       		.byte	0x30
 1961 03da 00       		.byte	0
 1962 03db 09       		.uleb128 0x9
 1963 03dc DE010000 		.4byte	.LVL83
 1964 03e0 81090000 		.4byte	0x981
 1965 03e4 EF030000 		.4byte	0x3ef
 1966 03e8 0A       		.uleb128 0xa
 1967 03e9 01       		.uleb128 0x1
 1968 03ea 50       		.byte	0x50
 1969 03eb 02       		.uleb128 0x2
 1970 03ec 75       		.byte	0x75
 1971 03ed 00       		.sleb128 0
 1972 03ee 00       		.byte	0
 1973 03ef 0B       		.uleb128 0xb
 1974 03f0 E2010000 		.4byte	.LVL84
 1975 03f4 33090000 		.4byte	0x933
 1976 03f8 0B       		.uleb128 0xb
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 48


 1977 03f9 EC010000 		.4byte	.LVL86
 1978 03fd 33090000 		.4byte	0x933
 1979 0401 09       		.uleb128 0x9
 1980 0402 FE010000 		.4byte	.LVL89
 1981 0406 92090000 		.4byte	0x992
 1982 040a 14040000 		.4byte	0x414
 1983 040e 0A       		.uleb128 0xa
 1984 040f 01       		.uleb128 0x1
 1985 0410 50       		.byte	0x50
 1986 0411 01       		.uleb128 0x1
 1987 0412 30       		.byte	0x30
 1988 0413 00       		.byte	0
 1989 0414 09       		.uleb128 0x9
 1990 0415 14020000 		.4byte	.LVL94
 1991 0419 81090000 		.4byte	0x981
 1992 041d 28040000 		.4byte	0x428
 1993 0421 0A       		.uleb128 0xa
 1994 0422 01       		.uleb128 0x1
 1995 0423 50       		.byte	0x50
 1996 0424 02       		.uleb128 0x2
 1997 0425 75       		.byte	0x75
 1998 0426 00       		.sleb128 0
 1999 0427 00       		.byte	0
 2000 0428 0B       		.uleb128 0xb
 2001 0429 18020000 		.4byte	.LVL95
 2002 042d 33090000 		.4byte	0x933
 2003 0431 0B       		.uleb128 0xb
 2004 0432 22020000 		.4byte	.LVL97
 2005 0436 33090000 		.4byte	0x933
 2006 043a 09       		.uleb128 0x9
 2007 043b 34020000 		.4byte	.LVL100
 2008 043f 92090000 		.4byte	0x992
 2009 0443 4D040000 		.4byte	0x44d
 2010 0447 0A       		.uleb128 0xa
 2011 0448 01       		.uleb128 0x1
 2012 0449 50       		.byte	0x50
 2013 044a 01       		.uleb128 0x1
 2014 044b 30       		.byte	0x30
 2015 044c 00       		.byte	0
 2016 044d 09       		.uleb128 0x9
 2017 044e 5A020000 		.4byte	.LVL107
 2018 0452 DC080000 		.4byte	0x8dc
 2019 0456 60040000 		.4byte	0x460
 2020 045a 0A       		.uleb128 0xa
 2021 045b 01       		.uleb128 0x1
 2022 045c 50       		.byte	0x50
 2023 045d 01       		.uleb128 0x1
 2024 045e 30       		.byte	0x30
 2025 045f 00       		.byte	0
 2026 0460 0B       		.uleb128 0xb
 2027 0461 6A020000 		.4byte	.LVL112
 2028 0465 A3090000 		.4byte	0x9a3
 2029 0469 0B       		.uleb128 0xb
 2030 046a 76020000 		.4byte	.LVL113
 2031 046e A3090000 		.4byte	0x9a3
 2032 0472 09       		.uleb128 0x9
 2033 0473 84020000 		.4byte	.LVL115
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 49


 2034 0477 ED080000 		.4byte	0x8ed
 2035 047b 85040000 		.4byte	0x485
 2036 047f 0A       		.uleb128 0xa
 2037 0480 01       		.uleb128 0x1
 2038 0481 50       		.byte	0x50
 2039 0482 01       		.uleb128 0x1
 2040 0483 30       		.byte	0x30
 2041 0484 00       		.byte	0
 2042 0485 09       		.uleb128 0x9
 2043 0486 8A020000 		.4byte	.LVL116
 2044 048a CB080000 		.4byte	0x8cb
 2045 048e 98040000 		.4byte	0x498
 2046 0492 0A       		.uleb128 0xa
 2047 0493 01       		.uleb128 0x1
 2048 0494 50       		.byte	0x50
 2049 0495 01       		.uleb128 0x1
 2050 0496 31       		.byte	0x31
 2051 0497 00       		.byte	0
 2052 0498 09       		.uleb128 0x9
 2053 0499 90020000 		.4byte	.LVL117
 2054 049d DC080000 		.4byte	0x8dc
 2055 04a1 AB040000 		.4byte	0x4ab
 2056 04a5 0A       		.uleb128 0xa
 2057 04a6 01       		.uleb128 0x1
 2058 04a7 50       		.byte	0x50
 2059 04a8 01       		.uleb128 0x1
 2060 04a9 30       		.byte	0x30
 2061 04aa 00       		.byte	0
 2062 04ab 0B       		.uleb128 0xb
 2063 04ac 98020000 		.4byte	.LVL119
 2064 04b0 AE090000 		.4byte	0x9ae
 2065 04b4 09       		.uleb128 0x9
 2066 04b5 B2020000 		.4byte	.LVL122
 2067 04b9 CB080000 		.4byte	0x8cb
 2068 04bd C7040000 		.4byte	0x4c7
 2069 04c1 0A       		.uleb128 0xa
 2070 04c2 01       		.uleb128 0x1
 2071 04c3 50       		.byte	0x50
 2072 04c4 01       		.uleb128 0x1
 2073 04c5 30       		.byte	0x30
 2074 04c6 00       		.byte	0
 2075 04c7 09       		.uleb128 0x9
 2076 04c8 B8020000 		.4byte	.LVL123
 2077 04cc BA080000 		.4byte	0x8ba
 2078 04d0 DA040000 		.4byte	0x4da
 2079 04d4 0A       		.uleb128 0xa
 2080 04d5 01       		.uleb128 0x1
 2081 04d6 50       		.byte	0x50
 2082 04d7 01       		.uleb128 0x1
 2083 04d8 31       		.byte	0x31
 2084 04d9 00       		.byte	0
 2085 04da 0B       		.uleb128 0xb
 2086 04db BC020000 		.4byte	.LVL124
 2087 04df 21090000 		.4byte	0x921
 2088 04e3 0B       		.uleb128 0xb
 2089 04e4 C4020000 		.4byte	.LVL125
 2090 04e8 2C090000 		.4byte	0x92c
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 50


 2091 04ec 0B       		.uleb128 0xb
 2092 04ed C8020000 		.4byte	.LVL126
 2093 04f1 33090000 		.4byte	0x933
 2094 04f5 0B       		.uleb128 0xb
 2095 04f6 E0020000 		.4byte	.LVL132
 2096 04fa 3E090000 		.4byte	0x93e
 2097 04fe 0B       		.uleb128 0xb
 2098 04ff E4020000 		.4byte	.LVL133
 2099 0503 45090000 		.4byte	0x945
 2100 0507 0B       		.uleb128 0xb
 2101 0508 E8020000 		.4byte	.LVL134
 2102 050c 4C090000 		.4byte	0x94c
 2103 0510 0B       		.uleb128 0xb
 2104 0511 AA030000 		.4byte	.LVL170
 2105 0515 57090000 		.4byte	0x957
 2106 0519 09       		.uleb128 0x9
 2107 051a BE030000 		.4byte	.LVL171
 2108 051e BA080000 		.4byte	0x8ba
 2109 0522 2C050000 		.4byte	0x52c
 2110 0526 0A       		.uleb128 0xa
 2111 0527 01       		.uleb128 0x1
 2112 0528 50       		.byte	0x50
 2113 0529 01       		.uleb128 0x1
 2114 052a 30       		.byte	0x30
 2115 052b 00       		.byte	0
 2116 052c 0B       		.uleb128 0xb
 2117 052d C2030000 		.4byte	.LVL172
 2118 0531 45090000 		.4byte	0x945
 2119 0535 09       		.uleb128 0x9
 2120 0536 CA030000 		.4byte	.LVL174
 2121 053a CB080000 		.4byte	0x8cb
 2122 053e 48050000 		.4byte	0x548
 2123 0542 0A       		.uleb128 0xa
 2124 0543 01       		.uleb128 0x1
 2125 0544 50       		.byte	0x50
 2126 0545 01       		.uleb128 0x1
 2127 0546 30       		.byte	0x30
 2128 0547 00       		.byte	0
 2129 0548 09       		.uleb128 0x9
 2130 0549 D0030000 		.4byte	.LVL175
 2131 054d ED080000 		.4byte	0x8ed
 2132 0551 5B050000 		.4byte	0x55b
 2133 0555 0A       		.uleb128 0xa
 2134 0556 01       		.uleb128 0x1
 2135 0557 50       		.byte	0x50
 2136 0558 01       		.uleb128 0x1
 2137 0559 31       		.byte	0x31
 2138 055a 00       		.byte	0
 2139 055b 0B       		.uleb128 0xb
 2140 055c D4030000 		.4byte	.LVL176
 2141 0560 62090000 		.4byte	0x962
 2142 0564 0B       		.uleb128 0xb
 2143 0565 D8030000 		.4byte	.LVL177
 2144 0569 69090000 		.4byte	0x969
 2145 056d 0B       		.uleb128 0xb
 2146 056e DC030000 		.4byte	.LVL178
 2147 0572 2C090000 		.4byte	0x92c
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 51


 2148 0576 09       		.uleb128 0x9
 2149 0577 10040000 		.4byte	.LVL180
 2150 057b 70090000 		.4byte	0x970
 2151 057f 8A050000 		.4byte	0x58a
 2152 0583 0A       		.uleb128 0xa
 2153 0584 01       		.uleb128 0x1
 2154 0585 50       		.byte	0x50
 2155 0586 02       		.uleb128 0x2
 2156 0587 78       		.byte	0x78
 2157 0588 00       		.sleb128 0
 2158 0589 00       		.byte	0
 2159 058a 09       		.uleb128 0x9
 2160 058b 1E040000 		.4byte	.LVL182
 2161 058f 81090000 		.4byte	0x981
 2162 0593 9E050000 		.4byte	0x59e
 2163 0597 0A       		.uleb128 0xa
 2164 0598 01       		.uleb128 0x1
 2165 0599 50       		.byte	0x50
 2166 059a 02       		.uleb128 0x2
 2167 059b 75       		.byte	0x75
 2168 059c 00       		.sleb128 0
 2169 059d 00       		.byte	0
 2170 059e 0B       		.uleb128 0xb
 2171 059f 22040000 		.4byte	.LVL183
 2172 05a3 33090000 		.4byte	0x933
 2173 05a7 0B       		.uleb128 0xb
 2174 05a8 2C040000 		.4byte	.LVL185
 2175 05ac 33090000 		.4byte	0x933
 2176 05b0 09       		.uleb128 0x9
 2177 05b1 3E040000 		.4byte	.LVL188
 2178 05b5 92090000 		.4byte	0x992
 2179 05b9 C3050000 		.4byte	0x5c3
 2180 05bd 0A       		.uleb128 0xa
 2181 05be 01       		.uleb128 0x1
 2182 05bf 50       		.byte	0x50
 2183 05c0 01       		.uleb128 0x1
 2184 05c1 31       		.byte	0x31
 2185 05c2 00       		.byte	0
 2186 05c3 09       		.uleb128 0x9
 2187 05c4 64040000 		.4byte	.LVL195
 2188 05c8 81090000 		.4byte	0x981
 2189 05cc D7050000 		.4byte	0x5d7
 2190 05d0 0A       		.uleb128 0xa
 2191 05d1 01       		.uleb128 0x1
 2192 05d2 50       		.byte	0x50
 2193 05d3 02       		.uleb128 0x2
 2194 05d4 75       		.byte	0x75
 2195 05d5 00       		.sleb128 0
 2196 05d6 00       		.byte	0
 2197 05d7 0B       		.uleb128 0xb
 2198 05d8 68040000 		.4byte	.LVL196
 2199 05dc 33090000 		.4byte	0x933
 2200 05e0 0B       		.uleb128 0xb
 2201 05e1 72040000 		.4byte	.LVL198
 2202 05e5 33090000 		.4byte	0x933
 2203 05e9 09       		.uleb128 0x9
 2204 05ea 84040000 		.4byte	.LVL201
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 52


 2205 05ee 92090000 		.4byte	0x992
 2206 05f2 FC050000 		.4byte	0x5fc
 2207 05f6 0A       		.uleb128 0xa
 2208 05f7 01       		.uleb128 0x1
 2209 05f8 50       		.byte	0x50
 2210 05f9 01       		.uleb128 0x1
 2211 05fa 31       		.byte	0x31
 2212 05fb 00       		.byte	0
 2213 05fc 09       		.uleb128 0x9
 2214 05fd 9A040000 		.4byte	.LVL206
 2215 0601 81090000 		.4byte	0x981
 2216 0605 10060000 		.4byte	0x610
 2217 0609 0A       		.uleb128 0xa
 2218 060a 01       		.uleb128 0x1
 2219 060b 50       		.byte	0x50
 2220 060c 02       		.uleb128 0x2
 2221 060d 75       		.byte	0x75
 2222 060e 00       		.sleb128 0
 2223 060f 00       		.byte	0
 2224 0610 0B       		.uleb128 0xb
 2225 0611 9E040000 		.4byte	.LVL207
 2226 0615 33090000 		.4byte	0x933
 2227 0619 0B       		.uleb128 0xb
 2228 061a A8040000 		.4byte	.LVL209
 2229 061e 33090000 		.4byte	0x933
 2230 0622 09       		.uleb128 0x9
 2231 0623 BA040000 		.4byte	.LVL212
 2232 0627 92090000 		.4byte	0x992
 2233 062b 35060000 		.4byte	0x635
 2234 062f 0A       		.uleb128 0xa
 2235 0630 01       		.uleb128 0x1
 2236 0631 50       		.byte	0x50
 2237 0632 01       		.uleb128 0x1
 2238 0633 31       		.byte	0x31
 2239 0634 00       		.byte	0
 2240 0635 09       		.uleb128 0x9
 2241 0636 E0040000 		.4byte	.LVL219
 2242 063a DC080000 		.4byte	0x8dc
 2243 063e 48060000 		.4byte	0x648
 2244 0642 0A       		.uleb128 0xa
 2245 0643 01       		.uleb128 0x1
 2246 0644 50       		.byte	0x50
 2247 0645 01       		.uleb128 0x1
 2248 0646 31       		.byte	0x31
 2249 0647 00       		.byte	0
 2250 0648 0B       		.uleb128 0xb
 2251 0649 F0040000 		.4byte	.LVL224
 2252 064d A3090000 		.4byte	0x9a3
 2253 0651 0B       		.uleb128 0xb
 2254 0652 FC040000 		.4byte	.LVL225
 2255 0656 A3090000 		.4byte	0x9a3
 2256 065a 09       		.uleb128 0x9
 2257 065b 0A050000 		.4byte	.LVL227
 2258 065f ED080000 		.4byte	0x8ed
 2259 0663 6D060000 		.4byte	0x66d
 2260 0667 0A       		.uleb128 0xa
 2261 0668 01       		.uleb128 0x1
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 53


 2262 0669 50       		.byte	0x50
 2263 066a 01       		.uleb128 0x1
 2264 066b 30       		.byte	0x30
 2265 066c 00       		.byte	0
 2266 066d 09       		.uleb128 0x9
 2267 066e 10050000 		.4byte	.LVL228
 2268 0672 CB080000 		.4byte	0x8cb
 2269 0676 80060000 		.4byte	0x680
 2270 067a 0A       		.uleb128 0xa
 2271 067b 01       		.uleb128 0x1
 2272 067c 50       		.byte	0x50
 2273 067d 01       		.uleb128 0x1
 2274 067e 31       		.byte	0x31
 2275 067f 00       		.byte	0
 2276 0680 09       		.uleb128 0x9
 2277 0681 16050000 		.4byte	.LVL229
 2278 0685 DC080000 		.4byte	0x8dc
 2279 0689 93060000 		.4byte	0x693
 2280 068d 0A       		.uleb128 0xa
 2281 068e 01       		.uleb128 0x1
 2282 068f 50       		.byte	0x50
 2283 0690 01       		.uleb128 0x1
 2284 0691 30       		.byte	0x30
 2285 0692 00       		.byte	0
 2286 0693 0B       		.uleb128 0xb
 2287 0694 1E050000 		.4byte	.LVL231
 2288 0698 B9090000 		.4byte	0x9b9
 2289 069c 09       		.uleb128 0x9
 2290 069d 2C050000 		.4byte	.LVL233
 2291 06a1 CB080000 		.4byte	0x8cb
 2292 06a5 AF060000 		.4byte	0x6af
 2293 06a9 0A       		.uleb128 0xa
 2294 06aa 01       		.uleb128 0x1
 2295 06ab 50       		.byte	0x50
 2296 06ac 01       		.uleb128 0x1
 2297 06ad 30       		.byte	0x30
 2298 06ae 00       		.byte	0
 2299 06af 09       		.uleb128 0x9
 2300 06b0 32050000 		.4byte	.LVL234
 2301 06b4 BA080000 		.4byte	0x8ba
 2302 06b8 C2060000 		.4byte	0x6c2
 2303 06bc 0A       		.uleb128 0xa
 2304 06bd 01       		.uleb128 0x1
 2305 06be 50       		.byte	0x50
 2306 06bf 01       		.uleb128 0x1
 2307 06c0 31       		.byte	0x31
 2308 06c1 00       		.byte	0
 2309 06c2 0B       		.uleb128 0xb
 2310 06c3 36050000 		.4byte	.LVL235
 2311 06c7 21090000 		.4byte	0x921
 2312 06cb 0B       		.uleb128 0xb
 2313 06cc 3E050000 		.4byte	.LVL236
 2314 06d0 2C090000 		.4byte	0x92c
 2315 06d4 0B       		.uleb128 0xb
 2316 06d5 42050000 		.4byte	.LVL237
 2317 06d9 33090000 		.4byte	0x933
 2318 06dd 0B       		.uleb128 0xb
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 54


 2319 06de 5A050000 		.4byte	.LVL243
 2320 06e2 3E090000 		.4byte	0x93e
 2321 06e6 0B       		.uleb128 0xb
 2322 06e7 5E050000 		.4byte	.LVL244
 2323 06eb 45090000 		.4byte	0x945
 2324 06ef 0B       		.uleb128 0xb
 2325 06f0 62050000 		.4byte	.LVL245
 2326 06f4 4C090000 		.4byte	0x94c
 2327 06f8 0B       		.uleb128 0xb
 2328 06f9 1C060000 		.4byte	.LVL280
 2329 06fd 57090000 		.4byte	0x957
 2330 0701 09       		.uleb128 0x9
 2331 0702 36060000 		.4byte	.LVL282
 2332 0706 BA080000 		.4byte	0x8ba
 2333 070a 14070000 		.4byte	0x714
 2334 070e 0A       		.uleb128 0xa
 2335 070f 01       		.uleb128 0x1
 2336 0710 50       		.byte	0x50
 2337 0711 01       		.uleb128 0x1
 2338 0712 30       		.byte	0x30
 2339 0713 00       		.byte	0
 2340 0714 0B       		.uleb128 0xb
 2341 0715 3A060000 		.4byte	.LVL283
 2342 0719 45090000 		.4byte	0x945
 2343 071d 09       		.uleb128 0x9
 2344 071e 42060000 		.4byte	.LVL285
 2345 0722 CB080000 		.4byte	0x8cb
 2346 0726 30070000 		.4byte	0x730
 2347 072a 0A       		.uleb128 0xa
 2348 072b 01       		.uleb128 0x1
 2349 072c 50       		.byte	0x50
 2350 072d 01       		.uleb128 0x1
 2351 072e 30       		.byte	0x30
 2352 072f 00       		.byte	0
 2353 0730 09       		.uleb128 0x9
 2354 0731 48060000 		.4byte	.LVL286
 2355 0735 ED080000 		.4byte	0x8ed
 2356 0739 43070000 		.4byte	0x743
 2357 073d 0A       		.uleb128 0xa
 2358 073e 01       		.uleb128 0x1
 2359 073f 50       		.byte	0x50
 2360 0740 01       		.uleb128 0x1
 2361 0741 31       		.byte	0x31
 2362 0742 00       		.byte	0
 2363 0743 0B       		.uleb128 0xb
 2364 0744 4C060000 		.4byte	.LVL287
 2365 0748 62090000 		.4byte	0x962
 2366 074c 0B       		.uleb128 0xb
 2367 074d 50060000 		.4byte	.LVL288
 2368 0751 69090000 		.4byte	0x969
 2369 0755 0B       		.uleb128 0xb
 2370 0756 54060000 		.4byte	.LVL289
 2371 075a 2C090000 		.4byte	0x92c
 2372 075e 09       		.uleb128 0x9
 2373 075f 68060000 		.4byte	.LVL291
 2374 0763 70090000 		.4byte	0x970
 2375 0767 72070000 		.4byte	0x772
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 55


 2376 076b 0A       		.uleb128 0xa
 2377 076c 01       		.uleb128 0x1
 2378 076d 50       		.byte	0x50
 2379 076e 02       		.uleb128 0x2
 2380 076f 78       		.byte	0x78
 2381 0770 00       		.sleb128 0
 2382 0771 00       		.byte	0
 2383 0772 09       		.uleb128 0x9
 2384 0773 76060000 		.4byte	.LVL293
 2385 0777 81090000 		.4byte	0x981
 2386 077b 86070000 		.4byte	0x786
 2387 077f 0A       		.uleb128 0xa
 2388 0780 01       		.uleb128 0x1
 2389 0781 50       		.byte	0x50
 2390 0782 02       		.uleb128 0x2
 2391 0783 75       		.byte	0x75
 2392 0784 00       		.sleb128 0
 2393 0785 00       		.byte	0
 2394 0786 0B       		.uleb128 0xb
 2395 0787 7A060000 		.4byte	.LVL294
 2396 078b 33090000 		.4byte	0x933
 2397 078f 0B       		.uleb128 0xb
 2398 0790 84060000 		.4byte	.LVL296
 2399 0794 33090000 		.4byte	0x933
 2400 0798 09       		.uleb128 0x9
 2401 0799 96060000 		.4byte	.LVL299
 2402 079d 92090000 		.4byte	0x992
 2403 07a1 AB070000 		.4byte	0x7ab
 2404 07a5 0A       		.uleb128 0xa
 2405 07a6 01       		.uleb128 0x1
 2406 07a7 50       		.byte	0x50
 2407 07a8 01       		.uleb128 0x1
 2408 07a9 31       		.byte	0x31
 2409 07aa 00       		.byte	0
 2410 07ab 09       		.uleb128 0x9
 2411 07ac BC060000 		.4byte	.LVL306
 2412 07b0 81090000 		.4byte	0x981
 2413 07b4 BF070000 		.4byte	0x7bf
 2414 07b8 0A       		.uleb128 0xa
 2415 07b9 01       		.uleb128 0x1
 2416 07ba 50       		.byte	0x50
 2417 07bb 02       		.uleb128 0x2
 2418 07bc 75       		.byte	0x75
 2419 07bd 00       		.sleb128 0
 2420 07be 00       		.byte	0
 2421 07bf 0B       		.uleb128 0xb
 2422 07c0 C0060000 		.4byte	.LVL307
 2423 07c4 33090000 		.4byte	0x933
 2424 07c8 0B       		.uleb128 0xb
 2425 07c9 CA060000 		.4byte	.LVL309
 2426 07cd 33090000 		.4byte	0x933
 2427 07d1 09       		.uleb128 0x9
 2428 07d2 DC060000 		.4byte	.LVL312
 2429 07d6 92090000 		.4byte	0x992
 2430 07da E4070000 		.4byte	0x7e4
 2431 07de 0A       		.uleb128 0xa
 2432 07df 01       		.uleb128 0x1
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 56


 2433 07e0 50       		.byte	0x50
 2434 07e1 01       		.uleb128 0x1
 2435 07e2 31       		.byte	0x31
 2436 07e3 00       		.byte	0
 2437 07e4 09       		.uleb128 0x9
 2438 07e5 F2060000 		.4byte	.LVL317
 2439 07e9 81090000 		.4byte	0x981
 2440 07ed F8070000 		.4byte	0x7f8
 2441 07f1 0A       		.uleb128 0xa
 2442 07f2 01       		.uleb128 0x1
 2443 07f3 50       		.byte	0x50
 2444 07f4 02       		.uleb128 0x2
 2445 07f5 75       		.byte	0x75
 2446 07f6 00       		.sleb128 0
 2447 07f7 00       		.byte	0
 2448 07f8 0B       		.uleb128 0xb
 2449 07f9 F6060000 		.4byte	.LVL318
 2450 07fd 33090000 		.4byte	0x933
 2451 0801 0B       		.uleb128 0xb
 2452 0802 00070000 		.4byte	.LVL320
 2453 0806 33090000 		.4byte	0x933
 2454 080a 09       		.uleb128 0x9
 2455 080b 12070000 		.4byte	.LVL323
 2456 080f 92090000 		.4byte	0x992
 2457 0813 1D080000 		.4byte	0x81d
 2458 0817 0A       		.uleb128 0xa
 2459 0818 01       		.uleb128 0x1
 2460 0819 50       		.byte	0x50
 2461 081a 01       		.uleb128 0x1
 2462 081b 31       		.byte	0x31
 2463 081c 00       		.byte	0
 2464 081d 09       		.uleb128 0x9
 2465 081e 38070000 		.4byte	.LVL330
 2466 0822 DC080000 		.4byte	0x8dc
 2467 0826 30080000 		.4byte	0x830
 2468 082a 0A       		.uleb128 0xa
 2469 082b 01       		.uleb128 0x1
 2470 082c 50       		.byte	0x50
 2471 082d 01       		.uleb128 0x1
 2472 082e 31       		.byte	0x31
 2473 082f 00       		.byte	0
 2474 0830 09       		.uleb128 0x9
 2475 0831 42070000 		.4byte	.LVL333
 2476 0835 92090000 		.4byte	0x992
 2477 0839 43080000 		.4byte	0x843
 2478 083d 0A       		.uleb128 0xa
 2479 083e 01       		.uleb128 0x1
 2480 083f 50       		.byte	0x50
 2481 0840 01       		.uleb128 0x1
 2482 0841 31       		.byte	0x31
 2483 0842 00       		.byte	0
 2484 0843 0B       		.uleb128 0xb
 2485 0844 4E070000 		.4byte	.LVL336
 2486 0848 A3090000 		.4byte	0x9a3
 2487 084c 0B       		.uleb128 0xb
 2488 084d 5A070000 		.4byte	.LVL337
 2489 0851 A3090000 		.4byte	0x9a3
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 57


 2490 0855 09       		.uleb128 0x9
 2491 0856 68070000 		.4byte	.LVL339
 2492 085a ED080000 		.4byte	0x8ed
 2493 085e 68080000 		.4byte	0x868
 2494 0862 0A       		.uleb128 0xa
 2495 0863 01       		.uleb128 0x1
 2496 0864 50       		.byte	0x50
 2497 0865 01       		.uleb128 0x1
 2498 0866 30       		.byte	0x30
 2499 0867 00       		.byte	0
 2500 0868 09       		.uleb128 0x9
 2501 0869 6E070000 		.4byte	.LVL340
 2502 086d CB080000 		.4byte	0x8cb
 2503 0871 7B080000 		.4byte	0x87b
 2504 0875 0A       		.uleb128 0xa
 2505 0876 01       		.uleb128 0x1
 2506 0877 50       		.byte	0x50
 2507 0878 01       		.uleb128 0x1
 2508 0879 31       		.byte	0x31
 2509 087a 00       		.byte	0
 2510 087b 09       		.uleb128 0x9
 2511 087c 74070000 		.4byte	.LVL341
 2512 0880 DC080000 		.4byte	0x8dc
 2513 0884 8E080000 		.4byte	0x88e
 2514 0888 0A       		.uleb128 0xa
 2515 0889 01       		.uleb128 0x1
 2516 088a 50       		.byte	0x50
 2517 088b 01       		.uleb128 0x1
 2518 088c 30       		.byte	0x30
 2519 088d 00       		.byte	0
 2520 088e 0B       		.uleb128 0xb
 2521 088f 7C070000 		.4byte	.LVL343
 2522 0893 C4090000 		.4byte	0x9c4
 2523 0897 00       		.byte	0
 2524 0898 0C       		.uleb128 0xc
 2525 0899 70020000 		.4byte	.LASF68
 2526 089d 15       		.byte	0x15
 2527 089e 9606     		.2byte	0x696
 2528 08a0 A4080000 		.4byte	0x8a4
 2529 08a4 0D       		.uleb128 0xd
 2530 08a5 76000000 		.4byte	0x76
 2531 08a9 0E       		.uleb128 0xe
 2532 08aa 4F000000 		.4byte	.LASF40
 2533 08ae 05       		.byte	0x5
 2534 08af 26       		.byte	0x26
 2535 08b0 BA080000 		.4byte	0x8ba
 2536 08b4 0F       		.uleb128 0xf
 2537 08b5 81000000 		.4byte	0x81
 2538 08b9 00       		.byte	0
 2539 08ba 0E       		.uleb128 0xe
 2540 08bb 84010000 		.4byte	.LASF41
 2541 08bf 06       		.byte	0x6
 2542 08c0 26       		.byte	0x26
 2543 08c1 CB080000 		.4byte	0x8cb
 2544 08c5 0F       		.uleb128 0xf
 2545 08c6 81000000 		.4byte	0x81
 2546 08ca 00       		.byte	0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 58


 2547 08cb 0E       		.uleb128 0xe
 2548 08cc 0D030000 		.4byte	.LASF42
 2549 08d0 07       		.byte	0x7
 2550 08d1 26       		.byte	0x26
 2551 08d2 DC080000 		.4byte	0x8dc
 2552 08d6 0F       		.uleb128 0xf
 2553 08d7 81000000 		.4byte	0x81
 2554 08db 00       		.byte	0
 2555 08dc 0E       		.uleb128 0xe
 2556 08dd 1F040000 		.4byte	.LASF43
 2557 08e1 08       		.byte	0x8
 2558 08e2 26       		.byte	0x26
 2559 08e3 ED080000 		.4byte	0x8ed
 2560 08e7 0F       		.uleb128 0xf
 2561 08e8 81000000 		.4byte	0x81
 2562 08ec 00       		.byte	0
 2563 08ed 0E       		.uleb128 0xe
 2564 08ee C8020000 		.4byte	.LASF44
 2565 08f2 09       		.byte	0x9
 2566 08f3 27       		.byte	0x27
 2567 08f4 FE080000 		.4byte	0x8fe
 2568 08f8 0F       		.uleb128 0xf
 2569 08f9 81000000 		.4byte	0x81
 2570 08fd 00       		.byte	0
 2571 08fe 10       		.uleb128 0x10
 2572 08ff F7030000 		.4byte	.LASF48
 2573 0903 0D       		.byte	0xd
 2574 0904 34       		.byte	0x34
 2575 0905 0E       		.uleb128 0xe
 2576 0906 0D040000 		.4byte	.LASF45
 2577 090a 0A       		.byte	0xa
 2578 090b 76       		.byte	0x76
 2579 090c 16090000 		.4byte	0x916
 2580 0910 0F       		.uleb128 0xf
 2581 0911 99000000 		.4byte	0x99
 2582 0915 00       		.byte	0
 2583 0916 11       		.uleb128 0x11
 2584 0917 8D020000 		.4byte	.LASF46
 2585 091b 0B       		.byte	0xb
 2586 091c 29       		.byte	0x29
 2587 091d 81000000 		.4byte	0x81
 2588 0921 11       		.uleb128 0x11
 2589 0922 E5000000 		.4byte	.LASF47
 2590 0926 0C       		.byte	0xc
 2591 0927 29       		.byte	0x29
 2592 0928 81000000 		.4byte	0x81
 2593 092c 10       		.uleb128 0x10
 2594 092d F6000000 		.4byte	.LASF49
 2595 0931 0D       		.byte	0xd
 2596 0932 D1       		.byte	0xd1
 2597 0933 11       		.uleb128 0x11
 2598 0934 99020000 		.4byte	.LASF50
 2599 0938 0D       		.byte	0xd
 2600 0939 3B       		.byte	0x3b
 2601 093a A5000000 		.4byte	0xa5
 2602 093e 10       		.uleb128 0x10
 2603 093f 31010000 		.4byte	.LASF51
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 59


 2604 0943 0E       		.byte	0xe
 2605 0944 3A       		.byte	0x3a
 2606 0945 10       		.uleb128 0x10
 2607 0946 37020000 		.4byte	.LASF52
 2608 094a 0E       		.byte	0xe
 2609 094b 3D       		.byte	0x3d
 2610 094c 11       		.uleb128 0x11
 2611 094d 23000000 		.4byte	.LASF53
 2612 0951 0E       		.byte	0xe
 2613 0952 56       		.byte	0x56
 2614 0953 B1000000 		.4byte	0xb1
 2615 0957 11       		.uleb128 0x11
 2616 0958 72010000 		.4byte	.LASF54
 2617 095c 0F       		.byte	0xf
 2618 095d 29       		.byte	0x29
 2619 095e 81000000 		.4byte	0x81
 2620 0962 10       		.uleb128 0x10
 2621 0963 7D020000 		.4byte	.LASF55
 2622 0967 10       		.byte	0x10
 2623 0968 33       		.byte	0x33
 2624 0969 10       		.uleb128 0x10
 2625 096a 33000000 		.4byte	.LASF56
 2626 096e 11       		.byte	0x11
 2627 096f 33       		.byte	0x33
 2628 0970 0E       		.uleb128 0xe
 2629 0971 5F010000 		.4byte	.LASF57
 2630 0975 10       		.byte	0x10
 2631 0976 37       		.byte	0x37
 2632 0977 81090000 		.4byte	0x981
 2633 097b 0F       		.uleb128 0xf
 2634 097c 81000000 		.4byte	0x81
 2635 0980 00       		.byte	0
 2636 0981 0E       		.uleb128 0xe
 2637 0982 4E010000 		.4byte	.LASF58
 2638 0986 11       		.byte	0x11
 2639 0987 37       		.byte	0x37
 2640 0988 92090000 		.4byte	0x992
 2641 098c 0F       		.uleb128 0xf
 2642 098d 81000000 		.4byte	0x81
 2643 0991 00       		.byte	0
 2644 0992 0E       		.uleb128 0xe
 2645 0993 AE010000 		.4byte	.LASF59
 2646 0997 0A       		.byte	0xa
 2647 0998 77       		.byte	0x77
 2648 0999 A3090000 		.4byte	0x9a3
 2649 099d 0F       		.uleb128 0xf
 2650 099e 8D000000 		.4byte	0x8d
 2651 09a2 00       		.byte	0
 2652 09a3 11       		.uleb128 0x11
 2653 09a4 C7030000 		.4byte	.LASF60
 2654 09a8 0E       		.byte	0xe
 2655 09a9 42       		.byte	0x42
 2656 09aa B1000000 		.4byte	0xb1
 2657 09ae 11       		.uleb128 0x11
 2658 09af 20020000 		.4byte	.LASF61
 2659 09b3 12       		.byte	0x12
 2660 09b4 29       		.byte	0x29
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 60


 2661 09b5 81000000 		.4byte	0x81
 2662 09b9 11       		.uleb128 0x11
 2663 09ba 9E010000 		.4byte	.LASF62
 2664 09be 13       		.byte	0x13
 2665 09bf 29       		.byte	0x29
 2666 09c0 81000000 		.4byte	0x81
 2667 09c4 11       		.uleb128 0x11
 2668 09c5 B8020000 		.4byte	.LASF63
 2669 09c9 14       		.byte	0x14
 2670 09ca 29       		.byte	0x29
 2671 09cb 81000000 		.4byte	0x81
 2672 09cf 00       		.byte	0
 2673              		.section	.debug_abbrev,"",%progbits
 2674              	.Ldebug_abbrev0:
 2675 0000 01       		.uleb128 0x1
 2676 0001 11       		.uleb128 0x11
 2677 0002 01       		.byte	0x1
 2678 0003 25       		.uleb128 0x25
 2679 0004 0E       		.uleb128 0xe
 2680 0005 13       		.uleb128 0x13
 2681 0006 0B       		.uleb128 0xb
 2682 0007 03       		.uleb128 0x3
 2683 0008 0E       		.uleb128 0xe
 2684 0009 1B       		.uleb128 0x1b
 2685 000a 0E       		.uleb128 0xe
 2686 000b 55       		.uleb128 0x55
 2687 000c 17       		.uleb128 0x17
 2688 000d 11       		.uleb128 0x11
 2689 000e 01       		.uleb128 0x1
 2690 000f 10       		.uleb128 0x10
 2691 0010 17       		.uleb128 0x17
 2692 0011 00       		.byte	0
 2693 0012 00       		.byte	0
 2694 0013 02       		.uleb128 0x2
 2695 0014 24       		.uleb128 0x24
 2696 0015 00       		.byte	0
 2697 0016 0B       		.uleb128 0xb
 2698 0017 0B       		.uleb128 0xb
 2699 0018 3E       		.uleb128 0x3e
 2700 0019 0B       		.uleb128 0xb
 2701 001a 03       		.uleb128 0x3
 2702 001b 0E       		.uleb128 0xe
 2703 001c 00       		.byte	0
 2704 001d 00       		.byte	0
 2705 001e 03       		.uleb128 0x3
 2706 001f 16       		.uleb128 0x16
 2707 0020 00       		.byte	0
 2708 0021 03       		.uleb128 0x3
 2709 0022 0E       		.uleb128 0xe
 2710 0023 3A       		.uleb128 0x3a
 2711 0024 0B       		.uleb128 0xb
 2712 0025 3B       		.uleb128 0x3b
 2713 0026 0B       		.uleb128 0xb
 2714 0027 49       		.uleb128 0x49
 2715 0028 13       		.uleb128 0x13
 2716 0029 00       		.byte	0
 2717 002a 00       		.byte	0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 61


 2718 002b 04       		.uleb128 0x4
 2719 002c 24       		.uleb128 0x24
 2720 002d 00       		.byte	0
 2721 002e 0B       		.uleb128 0xb
 2722 002f 0B       		.uleb128 0xb
 2723 0030 3E       		.uleb128 0x3e
 2724 0031 0B       		.uleb128 0xb
 2725 0032 03       		.uleb128 0x3
 2726 0033 08       		.uleb128 0x8
 2727 0034 00       		.byte	0
 2728 0035 00       		.byte	0
 2729 0036 05       		.uleb128 0x5
 2730 0037 16       		.uleb128 0x16
 2731 0038 00       		.byte	0
 2732 0039 03       		.uleb128 0x3
 2733 003a 0E       		.uleb128 0xe
 2734 003b 3A       		.uleb128 0x3a
 2735 003c 0B       		.uleb128 0xb
 2736 003d 3B       		.uleb128 0x3b
 2737 003e 05       		.uleb128 0x5
 2738 003f 49       		.uleb128 0x49
 2739 0040 13       		.uleb128 0x13
 2740 0041 00       		.byte	0
 2741 0042 00       		.byte	0
 2742 0043 06       		.uleb128 0x6
 2743 0044 2E       		.uleb128 0x2e
 2744 0045 01       		.byte	0x1
 2745 0046 3F       		.uleb128 0x3f
 2746 0047 19       		.uleb128 0x19
 2747 0048 03       		.uleb128 0x3
 2748 0049 0E       		.uleb128 0xe
 2749 004a 3A       		.uleb128 0x3a
 2750 004b 0B       		.uleb128 0xb
 2751 004c 3B       		.uleb128 0x3b
 2752 004d 0B       		.uleb128 0xb
 2753 004e 27       		.uleb128 0x27
 2754 004f 19       		.uleb128 0x19
 2755 0050 49       		.uleb128 0x49
 2756 0051 13       		.uleb128 0x13
 2757 0052 11       		.uleb128 0x11
 2758 0053 01       		.uleb128 0x1
 2759 0054 12       		.uleb128 0x12
 2760 0055 06       		.uleb128 0x6
 2761 0056 40       		.uleb128 0x40
 2762 0057 18       		.uleb128 0x18
 2763 0058 9642     		.uleb128 0x2116
 2764 005a 19       		.uleb128 0x19
 2765 005b 01       		.uleb128 0x1
 2766 005c 13       		.uleb128 0x13
 2767 005d 00       		.byte	0
 2768 005e 00       		.byte	0
 2769 005f 07       		.uleb128 0x7
 2770 0060 34       		.uleb128 0x34
 2771 0061 00       		.byte	0
 2772 0062 03       		.uleb128 0x3
 2773 0063 08       		.uleb128 0x8
 2774 0064 3A       		.uleb128 0x3a
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 62


 2775 0065 0B       		.uleb128 0xb
 2776 0066 3B       		.uleb128 0x3b
 2777 0067 0B       		.uleb128 0xb
 2778 0068 49       		.uleb128 0x49
 2779 0069 13       		.uleb128 0x13
 2780 006a 02       		.uleb128 0x2
 2781 006b 17       		.uleb128 0x17
 2782 006c 00       		.byte	0
 2783 006d 00       		.byte	0
 2784 006e 08       		.uleb128 0x8
 2785 006f 34       		.uleb128 0x34
 2786 0070 00       		.byte	0
 2787 0071 03       		.uleb128 0x3
 2788 0072 0E       		.uleb128 0xe
 2789 0073 3A       		.uleb128 0x3a
 2790 0074 0B       		.uleb128 0xb
 2791 0075 3B       		.uleb128 0x3b
 2792 0076 0B       		.uleb128 0xb
 2793 0077 49       		.uleb128 0x49
 2794 0078 13       		.uleb128 0x13
 2795 0079 02       		.uleb128 0x2
 2796 007a 17       		.uleb128 0x17
 2797 007b 00       		.byte	0
 2798 007c 00       		.byte	0
 2799 007d 09       		.uleb128 0x9
 2800 007e 898201   		.uleb128 0x4109
 2801 0081 01       		.byte	0x1
 2802 0082 11       		.uleb128 0x11
 2803 0083 01       		.uleb128 0x1
 2804 0084 31       		.uleb128 0x31
 2805 0085 13       		.uleb128 0x13
 2806 0086 01       		.uleb128 0x1
 2807 0087 13       		.uleb128 0x13
 2808 0088 00       		.byte	0
 2809 0089 00       		.byte	0
 2810 008a 0A       		.uleb128 0xa
 2811 008b 8A8201   		.uleb128 0x410a
 2812 008e 00       		.byte	0
 2813 008f 02       		.uleb128 0x2
 2814 0090 18       		.uleb128 0x18
 2815 0091 9142     		.uleb128 0x2111
 2816 0093 18       		.uleb128 0x18
 2817 0094 00       		.byte	0
 2818 0095 00       		.byte	0
 2819 0096 0B       		.uleb128 0xb
 2820 0097 898201   		.uleb128 0x4109
 2821 009a 00       		.byte	0
 2822 009b 11       		.uleb128 0x11
 2823 009c 01       		.uleb128 0x1
 2824 009d 31       		.uleb128 0x31
 2825 009e 13       		.uleb128 0x13
 2826 009f 00       		.byte	0
 2827 00a0 00       		.byte	0
 2828 00a1 0C       		.uleb128 0xc
 2829 00a2 34       		.uleb128 0x34
 2830 00a3 00       		.byte	0
 2831 00a4 03       		.uleb128 0x3
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 63


 2832 00a5 0E       		.uleb128 0xe
 2833 00a6 3A       		.uleb128 0x3a
 2834 00a7 0B       		.uleb128 0xb
 2835 00a8 3B       		.uleb128 0x3b
 2836 00a9 05       		.uleb128 0x5
 2837 00aa 49       		.uleb128 0x49
 2838 00ab 13       		.uleb128 0x13
 2839 00ac 3F       		.uleb128 0x3f
 2840 00ad 19       		.uleb128 0x19
 2841 00ae 3C       		.uleb128 0x3c
 2842 00af 19       		.uleb128 0x19
 2843 00b0 00       		.byte	0
 2844 00b1 00       		.byte	0
 2845 00b2 0D       		.uleb128 0xd
 2846 00b3 35       		.uleb128 0x35
 2847 00b4 00       		.byte	0
 2848 00b5 49       		.uleb128 0x49
 2849 00b6 13       		.uleb128 0x13
 2850 00b7 00       		.byte	0
 2851 00b8 00       		.byte	0
 2852 00b9 0E       		.uleb128 0xe
 2853 00ba 2E       		.uleb128 0x2e
 2854 00bb 01       		.byte	0x1
 2855 00bc 3F       		.uleb128 0x3f
 2856 00bd 19       		.uleb128 0x19
 2857 00be 03       		.uleb128 0x3
 2858 00bf 0E       		.uleb128 0xe
 2859 00c0 3A       		.uleb128 0x3a
 2860 00c1 0B       		.uleb128 0xb
 2861 00c2 3B       		.uleb128 0x3b
 2862 00c3 0B       		.uleb128 0xb
 2863 00c4 27       		.uleb128 0x27
 2864 00c5 19       		.uleb128 0x19
 2865 00c6 3C       		.uleb128 0x3c
 2866 00c7 19       		.uleb128 0x19
 2867 00c8 01       		.uleb128 0x1
 2868 00c9 13       		.uleb128 0x13
 2869 00ca 00       		.byte	0
 2870 00cb 00       		.byte	0
 2871 00cc 0F       		.uleb128 0xf
 2872 00cd 05       		.uleb128 0x5
 2873 00ce 00       		.byte	0
 2874 00cf 49       		.uleb128 0x49
 2875 00d0 13       		.uleb128 0x13
 2876 00d1 00       		.byte	0
 2877 00d2 00       		.byte	0
 2878 00d3 10       		.uleb128 0x10
 2879 00d4 2E       		.uleb128 0x2e
 2880 00d5 00       		.byte	0
 2881 00d6 3F       		.uleb128 0x3f
 2882 00d7 19       		.uleb128 0x19
 2883 00d8 03       		.uleb128 0x3
 2884 00d9 0E       		.uleb128 0xe
 2885 00da 3A       		.uleb128 0x3a
 2886 00db 0B       		.uleb128 0xb
 2887 00dc 3B       		.uleb128 0x3b
 2888 00dd 0B       		.uleb128 0xb
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 64


 2889 00de 27       		.uleb128 0x27
 2890 00df 19       		.uleb128 0x19
 2891 00e0 3C       		.uleb128 0x3c
 2892 00e1 19       		.uleb128 0x19
 2893 00e2 00       		.byte	0
 2894 00e3 00       		.byte	0
 2895 00e4 11       		.uleb128 0x11
 2896 00e5 2E       		.uleb128 0x2e
 2897 00e6 00       		.byte	0
 2898 00e7 3F       		.uleb128 0x3f
 2899 00e8 19       		.uleb128 0x19
 2900 00e9 03       		.uleb128 0x3
 2901 00ea 0E       		.uleb128 0xe
 2902 00eb 3A       		.uleb128 0x3a
 2903 00ec 0B       		.uleb128 0xb
 2904 00ed 3B       		.uleb128 0x3b
 2905 00ee 0B       		.uleb128 0xb
 2906 00ef 27       		.uleb128 0x27
 2907 00f0 19       		.uleb128 0x19
 2908 00f1 49       		.uleb128 0x49
 2909 00f2 13       		.uleb128 0x13
 2910 00f3 3C       		.uleb128 0x3c
 2911 00f4 19       		.uleb128 0x19
 2912 00f5 00       		.byte	0
 2913 00f6 00       		.byte	0
 2914 00f7 00       		.byte	0
 2915              		.section	.debug_loc,"",%progbits
 2916              	.Ldebug_loc0:
 2917              	.LLST0:
 2918 0000 08000000 		.4byte	.LVL0
 2919 0004 58000000 		.4byte	.LVL9
 2920 0008 0200     		.2byte	0x2
 2921 000a 30       		.byte	0x30
 2922 000b 9F       		.byte	0x9f
 2923 000c 76010000 		.4byte	.LVL66
 2924 0010 82010000 		.4byte	.LVL67
 2925 0014 0200     		.2byte	0x2
 2926 0016 91       		.byte	0x91
 2927 0017 44       		.sleb128 -60
 2928 0018 82010000 		.4byte	.LVL67
 2929 001c 66020000 		.4byte	.LVL111
 2930 0020 0100     		.2byte	0x1
 2931 0022 58       		.byte	0x58
 2932 0023 DC030000 		.4byte	.LVL178
 2933 0027 08040000 		.4byte	.LVL179
 2934 002b 0200     		.2byte	0x2
 2935 002d 91       		.byte	0x91
 2936 002e 44       		.sleb128 -60
 2937 002f 08040000 		.4byte	.LVL179
 2938 0033 EC040000 		.4byte	.LVL223
 2939 0037 0100     		.2byte	0x1
 2940 0039 58       		.byte	0x58
 2941 003a 54060000 		.4byte	.LVL289
 2942 003e 60060000 		.4byte	.LVL290
 2943 0042 0200     		.2byte	0x2
 2944 0044 91       		.byte	0x91
 2945 0045 44       		.sleb128 -60
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 65


 2946 0046 60060000 		.4byte	.LVL290
 2947 004a 4A070000 		.4byte	.LVL335
 2948 004e 0100     		.2byte	0x1
 2949 0050 58       		.byte	0x58
 2950 0051 00000000 		.4byte	0
 2951 0055 00000000 		.4byte	0
 2952              	.LLST1:
 2953 0059 08000000 		.4byte	.LVL0
 2954 005d 58000000 		.4byte	.LVL9
 2955 0061 0200     		.2byte	0x2
 2956 0063 30       		.byte	0x30
 2957 0064 9F       		.byte	0x9f
 2958 0065 92010000 		.4byte	.LVL69
 2959 0069 B0010000 		.4byte	.LVL74
 2960 006d 0100     		.2byte	0x1
 2961 006f 55       		.byte	0x55
 2962 0070 B2010000 		.4byte	.LVL75
 2963 0074 BC010000 		.4byte	.LVL78
 2964 0078 0100     		.2byte	0x1
 2965 007a 55       		.byte	0x55
 2966 007b BE010000 		.4byte	.LVL79
 2967 007f C8010000 		.4byte	.LVL81
 2968 0083 0100     		.2byte	0x1
 2969 0085 55       		.byte	0x55
 2970 0086 D8010000 		.4byte	.LVL82
 2971 008a F6010000 		.4byte	.LVL87
 2972 008e 0100     		.2byte	0x1
 2973 0090 55       		.byte	0x55
 2974 0091 F8010000 		.4byte	.LVL88
 2975 0095 02020000 		.4byte	.LVL91
 2976 0099 0100     		.2byte	0x1
 2977 009b 55       		.byte	0x55
 2978 009c 04020000 		.4byte	.LVL92
 2979 00a0 2C020000 		.4byte	.LVL98
 2980 00a4 0100     		.2byte	0x1
 2981 00a6 55       		.byte	0x55
 2982 00a7 2E020000 		.4byte	.LVL99
 2983 00ab 38020000 		.4byte	.LVL102
 2984 00af 0100     		.2byte	0x1
 2985 00b1 55       		.byte	0x55
 2986 00b2 3A020000 		.4byte	.LVL103
 2987 00b6 62020000 		.4byte	.LVL110
 2988 00ba 0100     		.2byte	0x1
 2989 00bc 55       		.byte	0x55
 2990 00bd 18040000 		.4byte	.LVL181
 2991 00c1 36040000 		.4byte	.LVL186
 2992 00c5 0100     		.2byte	0x1
 2993 00c7 55       		.byte	0x55
 2994 00c8 38040000 		.4byte	.LVL187
 2995 00cc 42040000 		.4byte	.LVL190
 2996 00d0 0100     		.2byte	0x1
 2997 00d2 55       		.byte	0x55
 2998 00d3 44040000 		.4byte	.LVL191
 2999 00d7 4E040000 		.4byte	.LVL193
 3000 00db 0100     		.2byte	0x1
 3001 00dd 55       		.byte	0x55
 3002 00de 5E040000 		.4byte	.LVL194
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 66


 3003 00e2 7C040000 		.4byte	.LVL199
 3004 00e6 0100     		.2byte	0x1
 3005 00e8 55       		.byte	0x55
 3006 00e9 7E040000 		.4byte	.LVL200
 3007 00ed 88040000 		.4byte	.LVL203
 3008 00f1 0100     		.2byte	0x1
 3009 00f3 55       		.byte	0x55
 3010 00f4 8A040000 		.4byte	.LVL204
 3011 00f8 B2040000 		.4byte	.LVL210
 3012 00fc 0100     		.2byte	0x1
 3013 00fe 55       		.byte	0x55
 3014 00ff B4040000 		.4byte	.LVL211
 3015 0103 BE040000 		.4byte	.LVL214
 3016 0107 0100     		.2byte	0x1
 3017 0109 55       		.byte	0x55
 3018 010a C0040000 		.4byte	.LVL215
 3019 010e E8040000 		.4byte	.LVL222
 3020 0112 0100     		.2byte	0x1
 3021 0114 55       		.byte	0x55
 3022 0115 70060000 		.4byte	.LVL292
 3023 0119 8E060000 		.4byte	.LVL297
 3024 011d 0100     		.2byte	0x1
 3025 011f 55       		.byte	0x55
 3026 0120 90060000 		.4byte	.LVL298
 3027 0124 9A060000 		.4byte	.LVL301
 3028 0128 0100     		.2byte	0x1
 3029 012a 55       		.byte	0x55
 3030 012b 9C060000 		.4byte	.LVL302
 3031 012f A6060000 		.4byte	.LVL304
 3032 0133 0100     		.2byte	0x1
 3033 0135 55       		.byte	0x55
 3034 0136 B6060000 		.4byte	.LVL305
 3035 013a D4060000 		.4byte	.LVL310
 3036 013e 0100     		.2byte	0x1
 3037 0140 55       		.byte	0x55
 3038 0141 D6060000 		.4byte	.LVL311
 3039 0145 E0060000 		.4byte	.LVL314
 3040 0149 0100     		.2byte	0x1
 3041 014b 55       		.byte	0x55
 3042 014c E2060000 		.4byte	.LVL315
 3043 0150 0A070000 		.4byte	.LVL321
 3044 0154 0100     		.2byte	0x1
 3045 0156 55       		.byte	0x55
 3046 0157 0C070000 		.4byte	.LVL322
 3047 015b 16070000 		.4byte	.LVL325
 3048 015f 0100     		.2byte	0x1
 3049 0161 55       		.byte	0x55
 3050 0162 18070000 		.4byte	.LVL326
 3051 0166 46070000 		.4byte	.LVL334
 3052 016a 0100     		.2byte	0x1
 3053 016c 55       		.byte	0x55
 3054 016d 00000000 		.4byte	0
 3055 0171 00000000 		.4byte	0
 3056              	.LLST2:
 3057 0175 08000000 		.4byte	.LVL0
 3058 0179 58000000 		.4byte	.LVL9
 3059 017d 0200     		.2byte	0x2
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 67


 3060 017f 30       		.byte	0x30
 3061 0180 9F       		.byte	0x9f
 3062 0181 6A010000 		.4byte	.LVL63
 3063 0185 82010000 		.4byte	.LVL67
 3064 0189 0200     		.2byte	0x2
 3065 018b 30       		.byte	0x30
 3066 018c 9F       		.byte	0x9f
 3067 018d 82010000 		.4byte	.LVL67
 3068 0191 66020000 		.4byte	.LVL111
 3069 0195 0100     		.2byte	0x1
 3070 0197 56       		.byte	0x56
 3071 0198 D0030000 		.4byte	.LVL175
 3072 019c 08040000 		.4byte	.LVL179
 3073 01a0 0200     		.2byte	0x2
 3074 01a2 30       		.byte	0x30
 3075 01a3 9F       		.byte	0x9f
 3076 01a4 08040000 		.4byte	.LVL179
 3077 01a8 EC040000 		.4byte	.LVL223
 3078 01ac 0100     		.2byte	0x1
 3079 01ae 56       		.byte	0x56
 3080 01af 48060000 		.4byte	.LVL286
 3081 01b3 60060000 		.4byte	.LVL290
 3082 01b7 0200     		.2byte	0x2
 3083 01b9 30       		.byte	0x30
 3084 01ba 9F       		.byte	0x9f
 3085 01bb 60060000 		.4byte	.LVL290
 3086 01bf 4A070000 		.4byte	.LVL335
 3087 01c3 0100     		.2byte	0x1
 3088 01c5 56       		.byte	0x56
 3089 01c6 00000000 		.4byte	0
 3090 01ca 00000000 		.4byte	0
 3091              	.LLST3:
 3092 01ce 08000000 		.4byte	.LVL0
 3093 01d2 58000000 		.4byte	.LVL9
 3094 01d6 0200     		.2byte	0x2
 3095 01d8 30       		.byte	0x30
 3096 01d9 9F       		.byte	0x9f
 3097 01da 94000000 		.4byte	.LVL22
 3098 01de A3000000 		.4byte	.LVL25-1
 3099 01e2 0100     		.2byte	0x1
 3100 01e4 50       		.byte	0x50
 3101 01e5 A3000000 		.4byte	.LVL25-1
 3102 01e9 3E010000 		.4byte	.LVL56
 3103 01ed 0700     		.2byte	0x7
 3104 01ef 91       		.byte	0x91
 3105 01f0 50       		.sleb128 -48
 3106 01f1 06       		.byte	0x6
 3107 01f2 23       		.byte	0x23
 3108 01f3 AC07     		.uleb128 0x3ac
 3109 01f5 9F       		.byte	0x9f
 3110 01f6 E8020000 		.4byte	.LVL134
 3111 01fa F7020000 		.4byte	.LVL137-1
 3112 01fe 0100     		.2byte	0x1
 3113 0200 50       		.byte	0x50
 3114 0201 F7020000 		.4byte	.LVL137-1
 3115 0205 9E030000 		.4byte	.LVL168
 3116 0209 0700     		.2byte	0x7
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 68


 3117 020b 91       		.byte	0x91
 3118 020c 50       		.sleb128 -48
 3119 020d 06       		.byte	0x6
 3120 020e 23       		.byte	0x23
 3121 020f D602     		.uleb128 0x156
 3122 0211 9F       		.byte	0x9f
 3123 0212 62050000 		.4byte	.LVL245
 3124 0216 71050000 		.4byte	.LVL248-1
 3125 021a 0100     		.2byte	0x1
 3126 021c 50       		.byte	0x50
 3127 021d 71050000 		.4byte	.LVL248-1
 3128 0221 08060000 		.4byte	.LVL278
 3129 0225 0700     		.2byte	0x7
 3130 0227 91       		.byte	0x91
 3131 0228 50       		.sleb128 -48
 3132 0229 06       		.byte	0x6
 3133 022a 23       		.byte	0x23
 3134 022b 8D02     		.uleb128 0x10d
 3135 022d 9F       		.byte	0x9f
 3136 022e 00000000 		.4byte	0
 3137 0232 00000000 		.4byte	0
 3138              	.LLST4:
 3139 0236 08000000 		.4byte	.LVL0
 3140 023a 58000000 		.4byte	.LVL9
 3141 023e 0200     		.2byte	0x2
 3142 0240 30       		.byte	0x30
 3143 0241 9F       		.byte	0x9f
 3144 0242 58000000 		.4byte	.LVL9
 3145 0246 9A000000 		.4byte	.LVL23
 3146 024a 0200     		.2byte	0x2
 3147 024c 91       		.byte	0x91
 3148 024d 4C       		.sleb128 -52
 3149 024e 9A000000 		.4byte	.LVL23
 3150 0252 A3000000 		.4byte	.LVL25-1
 3151 0256 0100     		.2byte	0x1
 3152 0258 52       		.byte	0x52
 3153 0259 A3000000 		.4byte	.LVL25-1
 3154 025d EE020000 		.4byte	.LVL135
 3155 0261 0200     		.2byte	0x2
 3156 0263 91       		.byte	0x91
 3157 0264 4C       		.sleb128 -52
 3158 0265 EE020000 		.4byte	.LVL135
 3159 0269 F7020000 		.4byte	.LVL137-1
 3160 026d 0100     		.2byte	0x1
 3161 026f 52       		.byte	0x52
 3162 0270 F7020000 		.4byte	.LVL137-1
 3163 0274 68050000 		.4byte	.LVL246
 3164 0278 0200     		.2byte	0x2
 3165 027a 91       		.byte	0x91
 3166 027b 4C       		.sleb128 -52
 3167 027c 68050000 		.4byte	.LVL246
 3168 0280 71050000 		.4byte	.LVL248-1
 3169 0284 0100     		.2byte	0x1
 3170 0286 52       		.byte	0x52
 3171 0287 71050000 		.4byte	.LVL248-1
 3172 028b A0070000 		.4byte	.LFE63
 3173 028f 0200     		.2byte	0x2
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 69


 3174 0291 91       		.byte	0x91
 3175 0292 4C       		.sleb128 -52
 3176 0293 00000000 		.4byte	0
 3177 0297 00000000 		.4byte	0
 3178              	.LLST5:
 3179 029b 08000000 		.4byte	.LVL0
 3180 029f 58000000 		.4byte	.LVL9
 3181 02a3 0200     		.2byte	0x2
 3182 02a5 30       		.byte	0x30
 3183 02a6 9F       		.byte	0x9f
 3184 02a7 58000000 		.4byte	.LVL9
 3185 02ab A0000000 		.4byte	.LVL24
 3186 02af 0200     		.2byte	0x2
 3187 02b1 91       		.byte	0x91
 3188 02b2 50       		.sleb128 -48
 3189 02b3 A0000000 		.4byte	.LVL24
 3190 02b7 A3000000 		.4byte	.LVL25-1
 3191 02bb 0100     		.2byte	0x1
 3192 02bd 53       		.byte	0x53
 3193 02be A3000000 		.4byte	.LVL25-1
 3194 02c2 F4020000 		.4byte	.LVL136
 3195 02c6 0200     		.2byte	0x2
 3196 02c8 91       		.byte	0x91
 3197 02c9 50       		.sleb128 -48
 3198 02ca F4020000 		.4byte	.LVL136
 3199 02ce F7020000 		.4byte	.LVL137-1
 3200 02d2 0100     		.2byte	0x1
 3201 02d4 53       		.byte	0x53
 3202 02d5 F7020000 		.4byte	.LVL137-1
 3203 02d9 6E050000 		.4byte	.LVL247
 3204 02dd 0200     		.2byte	0x2
 3205 02df 91       		.byte	0x91
 3206 02e0 50       		.sleb128 -48
 3207 02e1 6E050000 		.4byte	.LVL247
 3208 02e5 71050000 		.4byte	.LVL248-1
 3209 02e9 0100     		.2byte	0x1
 3210 02eb 53       		.byte	0x53
 3211 02ec 71050000 		.4byte	.LVL248-1
 3212 02f0 A0070000 		.4byte	.LFE63
 3213 02f4 0200     		.2byte	0x2
 3214 02f6 91       		.byte	0x91
 3215 02f7 50       		.sleb128 -48
 3216 02f8 00000000 		.4byte	0
 3217 02fc 00000000 		.4byte	0
 3218              	.LLST6:
 3219 0300 08000000 		.4byte	.LVL0
 3220 0304 58000000 		.4byte	.LVL9
 3221 0308 0200     		.2byte	0x2
 3222 030a 30       		.byte	0x30
 3223 030b 9F       		.byte	0x9f
 3224 030c 58000000 		.4byte	.LVL9
 3225 0310 C8000000 		.4byte	.LVL32
 3226 0314 0100     		.2byte	0x1
 3227 0316 55       		.byte	0x55
 3228 0317 FC000000 		.4byte	.LVL40
 3229 031b 06010000 		.4byte	.LVL43
 3230 031f 0100     		.2byte	0x1
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 70


 3231 0321 55       		.byte	0x55
 3232 0322 18010000 		.4byte	.LVL46
 3233 0326 22010000 		.4byte	.LVL49
 3234 032a 0100     		.2byte	0x1
 3235 032c 55       		.byte	0x55
 3236 032d 2C010000 		.4byte	.LVL52
 3237 0331 5E010000 		.4byte	.LVL61
 3238 0335 0100     		.2byte	0x1
 3239 0337 55       		.byte	0x55
 3240 0338 5E010000 		.4byte	.LVL61
 3241 033c A8020000 		.4byte	.LVL120
 3242 0340 0100     		.2byte	0x1
 3243 0342 5A       		.byte	0x5a
 3244 0343 A8020000 		.4byte	.LVL120
 3245 0347 AC020000 		.4byte	.LVL121
 3246 034b 0100     		.2byte	0x1
 3247 034d 55       		.byte	0x55
 3248 034e AC020000 		.4byte	.LVL121
 3249 0352 1C030000 		.4byte	.LVL144
 3250 0356 0100     		.2byte	0x1
 3251 0358 5A       		.byte	0x5a
 3252 0359 52030000 		.4byte	.LVL152
 3253 035d 5E030000 		.4byte	.LVL155
 3254 0361 0100     		.2byte	0x1
 3255 0363 5A       		.byte	0x5a
 3256 0364 72030000 		.4byte	.LVL158
 3257 0368 7E030000 		.4byte	.LVL161
 3258 036c 0100     		.2byte	0x1
 3259 036e 5A       		.byte	0x5a
 3260 036f 8A030000 		.4byte	.LVL164
 3261 0373 8E050000 		.4byte	.LVL254
 3262 0377 0100     		.2byte	0x1
 3263 0379 5A       		.byte	0x5a
 3264 037a C4050000 		.4byte	.LVL262
 3265 037e CE050000 		.4byte	.LVL265
 3266 0382 0100     		.2byte	0x1
 3267 0384 5A       		.byte	0x5a
 3268 0385 E2050000 		.4byte	.LVL268
 3269 0389 EA050000 		.4byte	.LVL271
 3270 038d 0100     		.2byte	0x1
 3271 038f 5A       		.byte	0x5a
 3272 0390 F6050000 		.4byte	.LVL274
 3273 0394 A0070000 		.4byte	.LFE63
 3274 0398 0100     		.2byte	0x1
 3275 039a 5A       		.byte	0x5a
 3276 039b 00000000 		.4byte	0
 3277 039f 00000000 		.4byte	0
 3278              	.LLST7:
 3279 03a3 08000000 		.4byte	.LVL0
 3280 03a7 58000000 		.4byte	.LVL9
 3281 03ab 0A00     		.2byte	0xa
 3282 03ad 9E       		.byte	0x9e
 3283 03ae 08       		.uleb128 0x8
 3284 03af 00000000 		.4byte	0
 3285 03b3 00000000 		.4byte	0
 3286 03b7 C2000000 		.4byte	.LVL30
 3287 03bb F6000000 		.4byte	.LVL38
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 71


 3288 03bf 0600     		.2byte	0x6
 3289 03c1 58       		.byte	0x58
 3290 03c2 93       		.byte	0x93
 3291 03c3 04       		.uleb128 0x4
 3292 03c4 59       		.byte	0x59
 3293 03c5 93       		.byte	0x93
 3294 03c6 04       		.uleb128 0x4
 3295 03c7 06010000 		.4byte	.LVL43
 3296 03cb 12010000 		.4byte	.LVL44
 3297 03cf 0600     		.2byte	0x6
 3298 03d1 58       		.byte	0x58
 3299 03d2 93       		.byte	0x93
 3300 03d3 04       		.uleb128 0x4
 3301 03d4 59       		.byte	0x59
 3302 03d5 93       		.byte	0x93
 3303 03d6 04       		.uleb128 0x4
 3304 03d7 22010000 		.4byte	.LVL49
 3305 03db 26010000 		.4byte	.LVL50
 3306 03df 0600     		.2byte	0x6
 3307 03e1 58       		.byte	0x58
 3308 03e2 93       		.byte	0x93
 3309 03e3 04       		.uleb128 0x4
 3310 03e4 59       		.byte	0x59
 3311 03e5 93       		.byte	0x93
 3312 03e6 04       		.uleb128 0x4
 3313 03e7 16030000 		.4byte	.LVL142
 3314 03eb 98030000 		.4byte	.LVL167
 3315 03ef 0600     		.2byte	0x6
 3316 03f1 56       		.byte	0x56
 3317 03f2 93       		.byte	0x93
 3318 03f3 04       		.uleb128 0x4
 3319 03f4 57       		.byte	0x57
 3320 03f5 93       		.byte	0x93
 3321 03f6 04       		.uleb128 0x4
 3322 03f7 88050000 		.4byte	.LVL252
 3323 03fb C8050000 		.4byte	.LVL263
 3324 03ff 0600     		.2byte	0x6
 3325 0401 58       		.byte	0x58
 3326 0402 93       		.byte	0x93
 3327 0403 04       		.uleb128 0x4
 3328 0404 59       		.byte	0x59
 3329 0405 93       		.byte	0x93
 3330 0406 04       		.uleb128 0x4
 3331 0407 CE050000 		.4byte	.LVL265
 3332 040b E4050000 		.4byte	.LVL269
 3333 040f 0600     		.2byte	0x6
 3334 0411 58       		.byte	0x58
 3335 0412 93       		.byte	0x93
 3336 0413 04       		.uleb128 0x4
 3337 0414 59       		.byte	0x59
 3338 0415 93       		.byte	0x93
 3339 0416 04       		.uleb128 0x4
 3340 0417 EA050000 		.4byte	.LVL271
 3341 041b FA050000 		.4byte	.LVL275
 3342 041f 0600     		.2byte	0x6
 3343 0421 58       		.byte	0x58
 3344 0422 93       		.byte	0x93
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 72


 3345 0423 04       		.uleb128 0x4
 3346 0424 59       		.byte	0x59
 3347 0425 93       		.byte	0x93
 3348 0426 04       		.uleb128 0x4
 3349 0427 00000000 		.4byte	0
 3350 042b 00000000 		.4byte	0
 3351              	.LLST8:
 3352 042f 08000000 		.4byte	.LVL0
 3353 0433 58000000 		.4byte	.LVL9
 3354 0437 0200     		.2byte	0x2
 3355 0439 30       		.byte	0x30
 3356 043a 9F       		.byte	0x9f
 3357 043b C8000000 		.4byte	.LVL32
 3358 043f CB000000 		.4byte	.LVL33-1
 3359 0443 0100     		.2byte	0x1
 3360 0445 50       		.byte	0x50
 3361 0446 CB000000 		.4byte	.LVL33-1
 3362 044a FC000000 		.4byte	.LVL40
 3363 044e 0100     		.2byte	0x1
 3364 0450 55       		.byte	0x55
 3365 0451 FC000000 		.4byte	.LVL40
 3366 0455 06010000 		.4byte	.LVL43
 3367 0459 0300     		.2byte	0x3
 3368 045b 75       		.byte	0x75
 3369 045c 7A       		.sleb128 -6
 3370 045d 9F       		.byte	0x9f
 3371 045e 06010000 		.4byte	.LVL43
 3372 0462 18010000 		.4byte	.LVL46
 3373 0466 0100     		.2byte	0x1
 3374 0468 55       		.byte	0x55
 3375 0469 18010000 		.4byte	.LVL46
 3376 046d 22010000 		.4byte	.LVL49
 3377 0471 0300     		.2byte	0x3
 3378 0473 75       		.byte	0x75
 3379 0474 7A       		.sleb128 -6
 3380 0475 9F       		.byte	0x9f
 3381 0476 22010000 		.4byte	.LVL49
 3382 047a 2C010000 		.4byte	.LVL52
 3383 047e 0100     		.2byte	0x1
 3384 0480 55       		.byte	0x55
 3385 0481 2C010000 		.4byte	.LVL52
 3386 0485 34010000 		.4byte	.LVL54
 3387 0489 0300     		.2byte	0x3
 3388 048b 75       		.byte	0x75
 3389 048c 7B       		.sleb128 -5
 3390 048d 9F       		.byte	0x9f
 3391 048e 1C030000 		.4byte	.LVL144
 3392 0492 1F030000 		.4byte	.LVL145-1
 3393 0496 0100     		.2byte	0x1
 3394 0498 50       		.byte	0x50
 3395 0499 1F030000 		.4byte	.LVL145-1
 3396 049d 52030000 		.4byte	.LVL152
 3397 04a1 0100     		.2byte	0x1
 3398 04a3 5A       		.byte	0x5a
 3399 04a4 52030000 		.4byte	.LVL152
 3400 04a8 5E030000 		.4byte	.LVL155
 3401 04ac 0300     		.2byte	0x3
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 73


 3402 04ae 7A       		.byte	0x7a
 3403 04af 7C       		.sleb128 -4
 3404 04b0 9F       		.byte	0x9f
 3405 04b1 5E030000 		.4byte	.LVL155
 3406 04b5 72030000 		.4byte	.LVL158
 3407 04b9 0100     		.2byte	0x1
 3408 04bb 5A       		.byte	0x5a
 3409 04bc 72030000 		.4byte	.LVL158
 3410 04c0 7E030000 		.4byte	.LVL161
 3411 04c4 0300     		.2byte	0x3
 3412 04c6 7A       		.byte	0x7a
 3413 04c7 7C       		.sleb128 -4
 3414 04c8 9F       		.byte	0x9f
 3415 04c9 7E030000 		.4byte	.LVL161
 3416 04cd 8A030000 		.4byte	.LVL164
 3417 04d1 0100     		.2byte	0x1
 3418 04d3 5A       		.byte	0x5a
 3419 04d4 8A030000 		.4byte	.LVL164
 3420 04d8 94030000 		.4byte	.LVL166
 3421 04dc 0300     		.2byte	0x3
 3422 04de 7A       		.byte	0x7a
 3423 04df 7C       		.sleb128 -4
 3424 04e0 9F       		.byte	0x9f
 3425 04e1 8E050000 		.4byte	.LVL254
 3426 04e5 91050000 		.4byte	.LVL255-1
 3427 04e9 0100     		.2byte	0x1
 3428 04eb 50       		.byte	0x50
 3429 04ec 91050000 		.4byte	.LVL255-1
 3430 04f0 C4050000 		.4byte	.LVL262
 3431 04f4 0100     		.2byte	0x1
 3432 04f6 5A       		.byte	0x5a
 3433 04f7 C4050000 		.4byte	.LVL262
 3434 04fb CE050000 		.4byte	.LVL265
 3435 04ff 0300     		.2byte	0x3
 3436 0501 7A       		.byte	0x7a
 3437 0502 7D       		.sleb128 -3
 3438 0503 9F       		.byte	0x9f
 3439 0504 CE050000 		.4byte	.LVL265
 3440 0508 E2050000 		.4byte	.LVL268
 3441 050c 0100     		.2byte	0x1
 3442 050e 5A       		.byte	0x5a
 3443 050f E2050000 		.4byte	.LVL268
 3444 0513 EA050000 		.4byte	.LVL271
 3445 0517 0300     		.2byte	0x3
 3446 0519 7A       		.byte	0x7a
 3447 051a 7E       		.sleb128 -2
 3448 051b 9F       		.byte	0x9f
 3449 051c EA050000 		.4byte	.LVL271
 3450 0520 F6050000 		.4byte	.LVL274
 3451 0524 0100     		.2byte	0x1
 3452 0526 5A       		.byte	0x5a
 3453 0527 F6050000 		.4byte	.LVL274
 3454 052b FE050000 		.4byte	.LVL276
 3455 052f 0300     		.2byte	0x3
 3456 0531 7A       		.byte	0x7a
 3457 0532 7E       		.sleb128 -2
 3458 0533 9F       		.byte	0x9f
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 74


 3459 0534 00000000 		.4byte	0
 3460 0538 00000000 		.4byte	0
 3461              	.LLST9:
 3462 053c 08000000 		.4byte	.LVL0
 3463 0540 58000000 		.4byte	.LVL9
 3464 0544 0200     		.2byte	0x2
 3465 0546 30       		.byte	0x30
 3466 0547 9F       		.byte	0x9f
 3467 0548 58000000 		.4byte	.LVL9
 3468 054c C0000000 		.4byte	.LVL29
 3469 0550 0100     		.2byte	0x1
 3470 0552 58       		.byte	0x58
 3471 0553 F6000000 		.4byte	.LVL38
 3472 0557 06010000 		.4byte	.LVL43
 3473 055b 0100     		.2byte	0x1
 3474 055d 58       		.byte	0x58
 3475 055e 12010000 		.4byte	.LVL44
 3476 0562 22010000 		.4byte	.LVL49
 3477 0566 0100     		.2byte	0x1
 3478 0568 58       		.byte	0x58
 3479 0569 26010000 		.4byte	.LVL50
 3480 056d 5E010000 		.4byte	.LVL61
 3481 0571 0100     		.2byte	0x1
 3482 0573 58       		.byte	0x58
 3483 0574 5E010000 		.4byte	.LVL61
 3484 0578 AC020000 		.4byte	.LVL121
 3485 057c 0200     		.2byte	0x2
 3486 057e 91       		.byte	0x91
 3487 057f 44       		.sleb128 -60
 3488 0580 AC020000 		.4byte	.LVL121
 3489 0584 9E030000 		.4byte	.LVL168
 3490 0588 0100     		.2byte	0x1
 3491 058a 55       		.byte	0x55
 3492 058b 9E030000 		.4byte	.LVL168
 3493 058f A6030000 		.4byte	.LVL169
 3494 0593 0200     		.2byte	0x2
 3495 0595 91       		.byte	0x91
 3496 0596 44       		.sleb128 -60
 3497 0597 A6030000 		.4byte	.LVL169
 3498 059b C4030000 		.4byte	.LVL173
 3499 059f 0100     		.2byte	0x1
 3500 05a1 55       		.byte	0x55
 3501 05a2 C4030000 		.4byte	.LVL173
 3502 05a6 26050000 		.4byte	.LVL232
 3503 05aa 0200     		.2byte	0x2
 3504 05ac 91       		.byte	0x91
 3505 05ad 44       		.sleb128 -60
 3506 05ae 26050000 		.4byte	.LVL232
 3507 05b2 08060000 		.4byte	.LVL278
 3508 05b6 0100     		.2byte	0x1
 3509 05b8 55       		.byte	0x55
 3510 05b9 08060000 		.4byte	.LVL278
 3511 05bd 18060000 		.4byte	.LVL279
 3512 05c1 0200     		.2byte	0x2
 3513 05c3 91       		.byte	0x91
 3514 05c4 44       		.sleb128 -60
 3515 05c5 18060000 		.4byte	.LVL279
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 75


 3516 05c9 3C060000 		.4byte	.LVL284
 3517 05cd 0100     		.2byte	0x1
 3518 05cf 55       		.byte	0x55
 3519 05d0 3C060000 		.4byte	.LVL284
 3520 05d4 A0070000 		.4byte	.LFE63
 3521 05d8 0200     		.2byte	0x2
 3522 05da 91       		.byte	0x91
 3523 05db 44       		.sleb128 -60
 3524 05dc 00000000 		.4byte	0
 3525 05e0 00000000 		.4byte	0
 3526              	.LLST10:
 3527 05e4 08000000 		.4byte	.LVL0
 3528 05e8 58000000 		.4byte	.LVL9
 3529 05ec 0200     		.2byte	0x2
 3530 05ee 30       		.byte	0x30
 3531 05ef 9F       		.byte	0x9f
 3532 05f0 58000000 		.4byte	.LVL9
 3533 05f4 A0070000 		.4byte	.LFE63
 3534 05f8 0100     		.2byte	0x1
 3535 05fa 5B       		.byte	0x5b
 3536 05fb 00000000 		.4byte	0
 3537 05ff 00000000 		.4byte	0
 3538              	.LLST11:
 3539 0603 08000000 		.4byte	.LVL0
 3540 0607 58000000 		.4byte	.LVL9
 3541 060b 0A00     		.2byte	0xa
 3542 060d 9E       		.byte	0x9e
 3543 060e 08       		.uleb128 0x8
 3544 060f 00000000 		.4byte	0
 3545 0613 00000000 		.4byte	0
 3546 0617 D8000000 		.4byte	.LVL34
 3547 061b E1000000 		.4byte	.LVL35-1
 3548 061f 0600     		.2byte	0x6
 3549 0621 50       		.byte	0x50
 3550 0622 93       		.byte	0x93
 3551 0623 04       		.uleb128 0x4
 3552 0624 51       		.byte	0x51
 3553 0625 93       		.byte	0x93
 3554 0626 04       		.uleb128 0x4
 3555 0627 2C030000 		.4byte	.LVL146
 3556 062b 35030000 		.4byte	.LVL147-1
 3557 062f 0600     		.2byte	0x6
 3558 0631 50       		.byte	0x50
 3559 0632 93       		.byte	0x93
 3560 0633 04       		.uleb128 0x4
 3561 0634 51       		.byte	0x51
 3562 0635 93       		.byte	0x93
 3563 0636 04       		.uleb128 0x4
 3564 0637 9E050000 		.4byte	.LVL256
 3565 063b A7050000 		.4byte	.LVL257-1
 3566 063f 0600     		.2byte	0x6
 3567 0641 50       		.byte	0x50
 3568 0642 93       		.byte	0x93
 3569 0643 04       		.uleb128 0x4
 3570 0644 51       		.byte	0x51
 3571 0645 93       		.byte	0x93
 3572 0646 04       		.uleb128 0x4
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 76


 3573 0647 00000000 		.4byte	0
 3574 064b 00000000 		.4byte	0
 3575              	.LLST12:
 3576 064f 08000000 		.4byte	.LVL0
 3577 0653 58000000 		.4byte	.LVL9
 3578 0657 0200     		.2byte	0x2
 3579 0659 30       		.byte	0x30
 3580 065a 9F       		.byte	0x9f
 3581 065b EE000000 		.4byte	.LVL37
 3582 065f 3E010000 		.4byte	.LVL56
 3583 0663 0100     		.2byte	0x1
 3584 0665 50       		.byte	0x50
 3585 0666 42030000 		.4byte	.LVL149
 3586 066a 9E030000 		.4byte	.LVL168
 3587 066e 0100     		.2byte	0x1
 3588 0670 50       		.byte	0x50
 3589 0671 B4050000 		.4byte	.LVL259
 3590 0675 08060000 		.4byte	.LVL278
 3591 0679 0100     		.2byte	0x1
 3592 067b 50       		.byte	0x50
 3593 067c 00000000 		.4byte	0
 3594 0680 00000000 		.4byte	0
 3595              	.LLST13:
 3596 0684 08000000 		.4byte	.LVL0
 3597 0688 58000000 		.4byte	.LVL9
 3598 068c 0200     		.2byte	0x2
 3599 068e 30       		.byte	0x30
 3600 068f 9F       		.byte	0x9f
 3601 0690 58000000 		.4byte	.LVL9
 3602 0694 50010000 		.4byte	.LVL58
 3603 0698 0100     		.2byte	0x1
 3604 069a 5A       		.byte	0x5a
 3605 069b 50010000 		.4byte	.LVL58
 3606 069f 58030000 		.4byte	.LVL153
 3607 06a3 0200     		.2byte	0x2
 3608 06a5 91       		.byte	0x91
 3609 06a6 48       		.sleb128 -56
 3610 06a7 58030000 		.4byte	.LVL153
 3611 06ab 5E030000 		.4byte	.LVL155
 3612 06af 0100     		.2byte	0x1
 3613 06b1 53       		.byte	0x53
 3614 06b2 5E030000 		.4byte	.LVL155
 3615 06b6 78030000 		.4byte	.LVL159
 3616 06ba 0200     		.2byte	0x2
 3617 06bc 91       		.byte	0x91
 3618 06bd 48       		.sleb128 -56
 3619 06be 78030000 		.4byte	.LVL159
 3620 06c2 7E030000 		.4byte	.LVL161
 3621 06c6 0100     		.2byte	0x1
 3622 06c8 53       		.byte	0x53
 3623 06c9 7E030000 		.4byte	.LVL161
 3624 06cd 90030000 		.4byte	.LVL165
 3625 06d1 0200     		.2byte	0x2
 3626 06d3 91       		.byte	0x91
 3627 06d4 48       		.sleb128 -56
 3628 06d5 90030000 		.4byte	.LVL165
 3629 06d9 94030000 		.4byte	.LVL166
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 77


 3630 06dd 0100     		.2byte	0x1
 3631 06df 53       		.byte	0x53
 3632 06e0 94030000 		.4byte	.LVL166
 3633 06e4 26050000 		.4byte	.LVL232
 3634 06e8 0200     		.2byte	0x2
 3635 06ea 91       		.byte	0x91
 3636 06eb 48       		.sleb128 -56
 3637 06ec 26050000 		.4byte	.LVL232
 3638 06f0 86050000 		.4byte	.LVL251
 3639 06f4 0100     		.2byte	0x1
 3640 06f6 58       		.byte	0x58
 3641 06f7 C8050000 		.4byte	.LVL263
 3642 06fb CE050000 		.4byte	.LVL265
 3643 06ff 0100     		.2byte	0x1
 3644 0701 58       		.byte	0x58
 3645 0702 E4050000 		.4byte	.LVL269
 3646 0706 EA050000 		.4byte	.LVL271
 3647 070a 0100     		.2byte	0x1
 3648 070c 53       		.byte	0x53
 3649 070d FA050000 		.4byte	.LVL275
 3650 0711 08060000 		.4byte	.LVL278
 3651 0715 0100     		.2byte	0x1
 3652 0717 58       		.byte	0x58
 3653 0718 08060000 		.4byte	.LVL278
 3654 071c 18060000 		.4byte	.LVL279
 3655 0720 0200     		.2byte	0x2
 3656 0722 91       		.byte	0x91
 3657 0723 48       		.sleb128 -56
 3658 0724 18060000 		.4byte	.LVL279
 3659 0728 3C060000 		.4byte	.LVL284
 3660 072c 0100     		.2byte	0x1
 3661 072e 58       		.byte	0x58
 3662 072f 3C060000 		.4byte	.LVL284
 3663 0733 A0070000 		.4byte	.LFE63
 3664 0737 0200     		.2byte	0x2
 3665 0739 91       		.byte	0x91
 3666 073a 48       		.sleb128 -56
 3667 073b 00000000 		.4byte	0
 3668 073f 00000000 		.4byte	0
 3669              	.LLST14:
 3670 0743 08000000 		.4byte	.LVL0
 3671 0747 58000000 		.4byte	.LVL9
 3672 074b 0200     		.2byte	0x2
 3673 074d 30       		.byte	0x30
 3674 074e 9F       		.byte	0x9f
 3675 074f 58000000 		.4byte	.LVL9
 3676 0753 16030000 		.4byte	.LVL142
 3677 0757 0100     		.2byte	0x1
 3678 0759 57       		.byte	0x57
 3679 075a 5C030000 		.4byte	.LVL154
 3680 075e 5E030000 		.4byte	.LVL155
 3681 0762 0100     		.2byte	0x1
 3682 0764 57       		.byte	0x57
 3683 0765 7C030000 		.4byte	.LVL160
 3684 0769 7E030000 		.4byte	.LVL161
 3685 076d 0100     		.2byte	0x1
 3686 076f 57       		.byte	0x57
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 78


 3687 0770 94030000 		.4byte	.LVL166
 3688 0774 A0070000 		.4byte	.LFE63
 3689 0778 0100     		.2byte	0x1
 3690 077a 57       		.byte	0x57
 3691 077b 00000000 		.4byte	0
 3692 077f 00000000 		.4byte	0
 3693              	.LLST15:
 3694 0783 08000000 		.4byte	.LVL0
 3695 0787 58000000 		.4byte	.LVL9
 3696 078b 0400     		.2byte	0x4
 3697 078d 0A       		.byte	0xa
 3698 078e A00F     		.2byte	0xfa0
 3699 0790 9F       		.byte	0x9f
 3700 0791 74000000 		.4byte	.LVL14
 3701 0795 7A000000 		.4byte	.LVL15
 3702 0799 0100     		.2byte	0x1
 3703 079b 50       		.byte	0x50
 3704 079c C8020000 		.4byte	.LVL126
 3705 07a0 CE020000 		.4byte	.LVL127
 3706 07a4 0100     		.2byte	0x1
 3707 07a6 50       		.byte	0x50
 3708 07a7 42050000 		.4byte	.LVL237
 3709 07ab 48050000 		.4byte	.LVL238
 3710 07af 0100     		.2byte	0x1
 3711 07b1 50       		.byte	0x50
 3712 07b2 00000000 		.4byte	0
 3713 07b6 00000000 		.4byte	0
 3714              	.LLST16:
 3715 07ba 08000000 		.4byte	.LVL0
 3716 07be 58000000 		.4byte	.LVL9
 3717 07c2 0400     		.2byte	0x4
 3718 07c4 0A       		.byte	0xa
 3719 07c5 A00F     		.2byte	0xfa0
 3720 07c7 9F       		.byte	0x9f
 3721 07c8 58000000 		.4byte	.LVL9
 3722 07cc 5E010000 		.4byte	.LVL61
 3723 07d0 0100     		.2byte	0x1
 3724 07d2 56       		.byte	0x56
 3725 07d3 5E010000 		.4byte	.LVL61
 3726 07d7 AC020000 		.4byte	.LVL121
 3727 07db 0200     		.2byte	0x2
 3728 07dd 91       		.byte	0x91
 3729 07de 54       		.sleb128 -44
 3730 07df AC020000 		.4byte	.LVL121
 3731 07e3 9E030000 		.4byte	.LVL168
 3732 07e7 0100     		.2byte	0x1
 3733 07e9 58       		.byte	0x58
 3734 07ea 9E030000 		.4byte	.LVL168
 3735 07ee A6030000 		.4byte	.LVL169
 3736 07f2 0200     		.2byte	0x2
 3737 07f4 91       		.byte	0x91
 3738 07f5 54       		.sleb128 -44
 3739 07f6 A6030000 		.4byte	.LVL169
 3740 07fa C4030000 		.4byte	.LVL173
 3741 07fe 0100     		.2byte	0x1
 3742 0800 58       		.byte	0x58
 3743 0801 C4030000 		.4byte	.LVL173
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 79


 3744 0805 26050000 		.4byte	.LVL232
 3745 0809 0200     		.2byte	0x2
 3746 080b 91       		.byte	0x91
 3747 080c 54       		.sleb128 -44
 3748 080d 26050000 		.4byte	.LVL232
 3749 0811 08060000 		.4byte	.LVL278
 3750 0815 0100     		.2byte	0x1
 3751 0817 56       		.byte	0x56
 3752 0818 08060000 		.4byte	.LVL278
 3753 081c 18060000 		.4byte	.LVL279
 3754 0820 0200     		.2byte	0x2
 3755 0822 91       		.byte	0x91
 3756 0823 54       		.sleb128 -44
 3757 0824 18060000 		.4byte	.LVL279
 3758 0828 3C060000 		.4byte	.LVL284
 3759 082c 0100     		.2byte	0x1
 3760 082e 56       		.byte	0x56
 3761 082f 3C060000 		.4byte	.LVL284
 3762 0833 A0070000 		.4byte	.LFE63
 3763 0837 0200     		.2byte	0x2
 3764 0839 91       		.byte	0x91
 3765 083a 54       		.sleb128 -44
 3766 083b 00000000 		.4byte	0
 3767 083f 00000000 		.4byte	0
 3768              	.LLST17:
 3769 0843 08000000 		.4byte	.LVL0
 3770 0847 58000000 		.4byte	.LVL9
 3771 084b 0200     		.2byte	0x2
 3772 084d 30       		.byte	0x30
 3773 084e 9F       		.byte	0x9f
 3774 084f 7E000000 		.4byte	.LVL16
 3775 0853 82000000 		.4byte	.LVL17
 3776 0857 0100     		.2byte	0x1
 3777 0859 53       		.byte	0x53
 3778 085a 82000000 		.4byte	.LVL17
 3779 085e 3E010000 		.4byte	.LVL56
 3780 0862 0700     		.2byte	0x7
 3781 0864 0A       		.byte	0xa
 3782 0865 D007     		.2byte	0x7d0
 3783 0867 76       		.byte	0x76
 3784 0868 00       		.sleb128 0
 3785 0869 1C       		.byte	0x1c
 3786 086a 9F       		.byte	0x9f
 3787 086b D2020000 		.4byte	.LVL128
 3788 086f D6020000 		.4byte	.LVL129
 3789 0873 0100     		.2byte	0x1
 3790 0875 53       		.byte	0x53
 3791 0876 D6020000 		.4byte	.LVL129
 3792 087a 9E030000 		.4byte	.LVL168
 3793 087e 0700     		.2byte	0x7
 3794 0880 0A       		.byte	0xa
 3795 0881 D007     		.2byte	0x7d0
 3796 0883 78       		.byte	0x78
 3797 0884 00       		.sleb128 0
 3798 0885 1C       		.byte	0x1c
 3799 0886 9F       		.byte	0x9f
 3800 0887 4C050000 		.4byte	.LVL239
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 80


 3801 088b 50050000 		.4byte	.LVL240
 3802 088f 0100     		.2byte	0x1
 3803 0891 53       		.byte	0x53
 3804 0892 50050000 		.4byte	.LVL240
 3805 0896 08060000 		.4byte	.LVL278
 3806 089a 0700     		.2byte	0x7
 3807 089c 0A       		.byte	0xa
 3808 089d D007     		.2byte	0x7d0
 3809 089f 76       		.byte	0x76
 3810 08a0 00       		.sleb128 0
 3811 08a1 1C       		.byte	0x1c
 3812 08a2 9F       		.byte	0x9f
 3813 08a3 00000000 		.4byte	0
 3814 08a7 00000000 		.4byte	0
 3815              	.LLST18:
 3816 08ab 08000000 		.4byte	.LVL0
 3817 08af 58000000 		.4byte	.LVL9
 3818 08b3 0200     		.2byte	0x2
 3819 08b5 30       		.byte	0x30
 3820 08b6 9F       		.byte	0x9f
 3821 08b7 84000000 		.4byte	.LVL18
 3822 08bb 88000000 		.4byte	.LVL19
 3823 08bf 0100     		.2byte	0x1
 3824 08c1 54       		.byte	0x54
 3825 08c2 88000000 		.4byte	.LVL19
 3826 08c6 8B000000 		.4byte	.LVL20-1
 3827 08ca 0500     		.2byte	0x5
 3828 08cc 73       		.byte	0x73
 3829 08cd 00       		.sleb128 0
 3830 08ce 31       		.byte	0x31
 3831 08cf 26       		.byte	0x26
 3832 08d0 9F       		.byte	0x9f
 3833 08d1 8B000000 		.4byte	.LVL20-1
 3834 08d5 3E010000 		.4byte	.LVL56
 3835 08d9 1100     		.2byte	0x11
 3836 08db 0A       		.byte	0xa
 3837 08dc D007     		.2byte	0x7d0
 3838 08de 76       		.byte	0x76
 3839 08df 00       		.sleb128 0
 3840 08e0 1C       		.byte	0x1c
 3841 08e1 4F       		.byte	0x4f
 3842 08e2 25       		.byte	0x25
 3843 08e3 76       		.byte	0x76
 3844 08e4 00       		.sleb128 0
 3845 08e5 1C       		.byte	0x1c
 3846 08e6 23       		.byte	0x23
 3847 08e7 D00F     		.uleb128 0x7d0
 3848 08e9 31       		.byte	0x31
 3849 08ea 26       		.byte	0x26
 3850 08eb 9F       		.byte	0x9f
 3851 08ec D8020000 		.4byte	.LVL130
 3852 08f0 DC020000 		.4byte	.LVL131
 3853 08f4 0100     		.2byte	0x1
 3854 08f6 54       		.byte	0x54
 3855 08f7 DC020000 		.4byte	.LVL131
 3856 08fb DF020000 		.4byte	.LVL132-1
 3857 08ff 0500     		.2byte	0x5
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 81


 3858 0901 73       		.byte	0x73
 3859 0902 00       		.sleb128 0
 3860 0903 31       		.byte	0x31
 3861 0904 26       		.byte	0x26
 3862 0905 9F       		.byte	0x9f
 3863 0906 DF020000 		.4byte	.LVL132-1
 3864 090a 9E030000 		.4byte	.LVL168
 3865 090e 1100     		.2byte	0x11
 3866 0910 0A       		.byte	0xa
 3867 0911 D007     		.2byte	0x7d0
 3868 0913 78       		.byte	0x78
 3869 0914 00       		.sleb128 0
 3870 0915 1C       		.byte	0x1c
 3871 0916 4F       		.byte	0x4f
 3872 0917 25       		.byte	0x25
 3873 0918 78       		.byte	0x78
 3874 0919 00       		.sleb128 0
 3875 091a 1C       		.byte	0x1c
 3876 091b 23       		.byte	0x23
 3877 091c D00F     		.uleb128 0x7d0
 3878 091e 31       		.byte	0x31
 3879 091f 26       		.byte	0x26
 3880 0920 9F       		.byte	0x9f
 3881 0921 52050000 		.4byte	.LVL241
 3882 0925 56050000 		.4byte	.LVL242
 3883 0929 0100     		.2byte	0x1
 3884 092b 54       		.byte	0x54
 3885 092c 56050000 		.4byte	.LVL242
 3886 0930 59050000 		.4byte	.LVL243-1
 3887 0934 0500     		.2byte	0x5
 3888 0936 73       		.byte	0x73
 3889 0937 00       		.sleb128 0
 3890 0938 31       		.byte	0x31
 3891 0939 26       		.byte	0x26
 3892 093a 9F       		.byte	0x9f
 3893 093b 59050000 		.4byte	.LVL243-1
 3894 093f 08060000 		.4byte	.LVL278
 3895 0943 1100     		.2byte	0x11
 3896 0945 0A       		.byte	0xa
 3897 0946 D007     		.2byte	0x7d0
 3898 0948 76       		.byte	0x76
 3899 0949 00       		.sleb128 0
 3900 094a 1C       		.byte	0x1c
 3901 094b 4F       		.byte	0x4f
 3902 094c 25       		.byte	0x25
 3903 094d 76       		.byte	0x76
 3904 094e 00       		.sleb128 0
 3905 094f 1C       		.byte	0x1c
 3906 0950 23       		.byte	0x23
 3907 0951 D00F     		.uleb128 0x7d0
 3908 0953 31       		.byte	0x31
 3909 0954 26       		.byte	0x26
 3910 0955 9F       		.byte	0x9f
 3911 0956 00000000 		.4byte	0
 3912 095a 00000000 		.4byte	0
 3913              	.LLST19:
 3914 095e 08000000 		.4byte	.LVL0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 82


 3915 0962 58000000 		.4byte	.LVL9
 3916 0966 0200     		.2byte	0x2
 3917 0968 30       		.byte	0x30
 3918 0969 9F       		.byte	0x9f
 3919 096a 58000000 		.4byte	.LVL9
 3920 096e 84000000 		.4byte	.LVL18
 3921 0972 0100     		.2byte	0x1
 3922 0974 54       		.byte	0x54
 3923 0975 88000000 		.4byte	.LVL19
 3924 0979 D8020000 		.4byte	.LVL130
 3925 097d 0100     		.2byte	0x1
 3926 097f 54       		.byte	0x54
 3927 0980 DC020000 		.4byte	.LVL131
 3928 0984 52050000 		.4byte	.LVL241
 3929 0988 0100     		.2byte	0x1
 3930 098a 54       		.byte	0x54
 3931 098b 56050000 		.4byte	.LVL242
 3932 098f A0070000 		.4byte	.LFE63
 3933 0993 0100     		.2byte	0x1
 3934 0995 54       		.byte	0x54
 3935 0996 00000000 		.4byte	0
 3936 099a 00000000 		.4byte	0
 3937              	.LLST20:
 3938 099e 08000000 		.4byte	.LVL0
 3939 09a2 58000000 		.4byte	.LVL9
 3940 09a6 0200     		.2byte	0x2
 3941 09a8 30       		.byte	0x30
 3942 09a9 9F       		.byte	0x9f
 3943 09aa 58000000 		.4byte	.LVL9
 3944 09ae C2000000 		.4byte	.LVL30
 3945 09b2 0100     		.2byte	0x1
 3946 09b4 59       		.byte	0x59
 3947 09b5 34010000 		.4byte	.LVL54
 3948 09b9 3E010000 		.4byte	.LVL56
 3949 09bd 0200     		.2byte	0x2
 3950 09bf 31       		.byte	0x31
 3951 09c0 9F       		.byte	0x9f
 3952 09c1 3E010000 		.4byte	.LVL56
 3953 09c5 7E020000 		.4byte	.LVL114
 3954 09c9 0100     		.2byte	0x1
 3955 09cb 59       		.byte	0x59
 3956 09cc 7E020000 		.4byte	.LVL114
 3957 09d0 94020000 		.4byte	.LVL118
 3958 09d4 0200     		.2byte	0x2
 3959 09d6 31       		.byte	0x31
 3960 09d7 9F       		.byte	0x9f
 3961 09d8 94020000 		.4byte	.LVL118
 3962 09dc 94030000 		.4byte	.LVL166
 3963 09e0 0100     		.2byte	0x1
 3964 09e2 59       		.byte	0x59
 3965 09e3 94030000 		.4byte	.LVL166
 3966 09e7 9E030000 		.4byte	.LVL168
 3967 09eb 0200     		.2byte	0x2
 3968 09ed 31       		.byte	0x31
 3969 09ee 9F       		.byte	0x9f
 3970 09ef 9E030000 		.4byte	.LVL168
 3971 09f3 04050000 		.4byte	.LVL226
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 83


 3972 09f7 0100     		.2byte	0x1
 3973 09f9 59       		.byte	0x59
 3974 09fa 04050000 		.4byte	.LVL226
 3975 09fe 1A050000 		.4byte	.LVL230
 3976 0a02 0200     		.2byte	0x2
 3977 0a04 31       		.byte	0x31
 3978 0a05 9F       		.byte	0x9f
 3979 0a06 1A050000 		.4byte	.LVL230
 3980 0a0a 26050000 		.4byte	.LVL232
 3981 0a0e 0100     		.2byte	0x1
 3982 0a10 59       		.byte	0x59
 3983 0a11 26050000 		.4byte	.LVL232
 3984 0a15 FE050000 		.4byte	.LVL276
 3985 0a19 0200     		.2byte	0x2
 3986 0a1b 91       		.byte	0x91
 3987 0a1c 40       		.sleb128 -64
 3988 0a1d FE050000 		.4byte	.LVL276
 3989 0a21 08060000 		.4byte	.LVL278
 3990 0a25 0200     		.2byte	0x2
 3991 0a27 31       		.byte	0x31
 3992 0a28 9F       		.byte	0x9f
 3993 0a29 08060000 		.4byte	.LVL278
 3994 0a2d 18060000 		.4byte	.LVL279
 3995 0a31 0100     		.2byte	0x1
 3996 0a33 59       		.byte	0x59
 3997 0a34 18060000 		.4byte	.LVL279
 3998 0a38 3C060000 		.4byte	.LVL284
 3999 0a3c 0200     		.2byte	0x2
 4000 0a3e 91       		.byte	0x91
 4001 0a3f 40       		.sleb128 -64
 4002 0a40 3C060000 		.4byte	.LVL284
 4003 0a44 62070000 		.4byte	.LVL338
 4004 0a48 0100     		.2byte	0x1
 4005 0a4a 59       		.byte	0x59
 4006 0a4b 62070000 		.4byte	.LVL338
 4007 0a4f 78070000 		.4byte	.LVL342
 4008 0a53 0200     		.2byte	0x2
 4009 0a55 31       		.byte	0x31
 4010 0a56 9F       		.byte	0x9f
 4011 0a57 78070000 		.4byte	.LVL342
 4012 0a5b A0070000 		.4byte	.LFE63
 4013 0a5f 0100     		.2byte	0x1
 4014 0a61 59       		.byte	0x59
 4015 0a62 00000000 		.4byte	0
 4016 0a66 00000000 		.4byte	0
 4017              	.LLST21:
 4018 0a6a 08000000 		.4byte	.LVL0
 4019 0a6e 58000000 		.4byte	.LVL9
 4020 0a72 0200     		.2byte	0x2
 4021 0a74 30       		.byte	0x30
 4022 0a75 9F       		.byte	0x9f
 4023 0a76 58000000 		.4byte	.LVL9
 4024 0a7a 3A010000 		.4byte	.LVL55
 4025 0a7e 0300     		.2byte	0x3
 4026 0a80 91       		.byte	0x91
 4027 0a81 BC7F     		.sleb128 -68
 4028 0a83 3A010000 		.4byte	.LVL55
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 84


 4029 0a87 3E010000 		.4byte	.LVL56
 4030 0a8b 0100     		.2byte	0x1
 4031 0a8d 53       		.byte	0x53
 4032 0a8e 3E010000 		.4byte	.LVL56
 4033 0a92 AC020000 		.4byte	.LVL121
 4034 0a96 0300     		.2byte	0x3
 4035 0a98 91       		.byte	0x91
 4036 0a99 BC7F     		.sleb128 -68
 4037 0a9b AC020000 		.4byte	.LVL121
 4038 0a9f 14030000 		.4byte	.LVL141
 4039 0aa3 0100     		.2byte	0x1
 4040 0aa5 56       		.byte	0x56
 4041 0aa6 98030000 		.4byte	.LVL167
 4042 0aaa 9E030000 		.4byte	.LVL168
 4043 0aae 0100     		.2byte	0x1
 4044 0ab0 56       		.byte	0x56
 4045 0ab1 9E030000 		.4byte	.LVL168
 4046 0ab5 A6030000 		.4byte	.LVL169
 4047 0ab9 0300     		.2byte	0x3
 4048 0abb 91       		.byte	0x91
 4049 0abc BC7F     		.sleb128 -68
 4050 0abe A6030000 		.4byte	.LVL169
 4051 0ac2 C4030000 		.4byte	.LVL173
 4052 0ac6 0100     		.2byte	0x1
 4053 0ac8 56       		.byte	0x56
 4054 0ac9 C4030000 		.4byte	.LVL173
 4055 0acd 26050000 		.4byte	.LVL232
 4056 0ad1 0300     		.2byte	0x3
 4057 0ad3 91       		.byte	0x91
 4058 0ad4 BC7F     		.sleb128 -68
 4059 0ad6 26050000 		.4byte	.LVL232
 4060 0ada 88050000 		.4byte	.LVL252
 4061 0ade 0100     		.2byte	0x1
 4062 0ae0 59       		.byte	0x59
 4063 0ae1 02060000 		.4byte	.LVL277
 4064 0ae5 08060000 		.4byte	.LVL278
 4065 0ae9 0100     		.2byte	0x1
 4066 0aeb 59       		.byte	0x59
 4067 0aec 08060000 		.4byte	.LVL278
 4068 0af0 18060000 		.4byte	.LVL279
 4069 0af4 0300     		.2byte	0x3
 4070 0af6 91       		.byte	0x91
 4071 0af7 BC7F     		.sleb128 -68
 4072 0af9 18060000 		.4byte	.LVL279
 4073 0afd 30060000 		.4byte	.LVL281
 4074 0b01 0100     		.2byte	0x1
 4075 0b03 59       		.byte	0x59
 4076 0b04 30060000 		.4byte	.LVL281
 4077 0b08 A0070000 		.4byte	.LFE63
 4078 0b0c 0300     		.2byte	0x3
 4079 0b0e 91       		.byte	0x91
 4080 0b0f BC7F     		.sleb128 -68
 4081 0b11 00000000 		.4byte	0
 4082 0b15 00000000 		.4byte	0
 4083              	.LLST22:
 4084 0b19 08000000 		.4byte	.LVL0
 4085 0b1d 58000000 		.4byte	.LVL9
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 85


 4086 0b21 0200     		.2byte	0x2
 4087 0b23 30       		.byte	0x30
 4088 0b24 9F       		.byte	0x9f
 4089 0b25 6A010000 		.4byte	.LVL63
 4090 0b29 82010000 		.4byte	.LVL67
 4091 0b2d 0200     		.2byte	0x2
 4092 0b2f 30       		.byte	0x30
 4093 0b30 9F       		.byte	0x9f
 4094 0b31 82010000 		.4byte	.LVL67
 4095 0b35 50020000 		.4byte	.LVL106
 4096 0b39 0200     		.2byte	0x2
 4097 0b3b 91       		.byte	0x91
 4098 0b3c 40       		.sleb128 -64
 4099 0b3d 50020000 		.4byte	.LVL106
 4100 0b41 59020000 		.4byte	.LVL107-1
 4101 0b45 0100     		.2byte	0x1
 4102 0b47 53       		.byte	0x53
 4103 0b48 59020000 		.4byte	.LVL107-1
 4104 0b4c 5A020000 		.4byte	.LVL107
 4105 0b50 0600     		.2byte	0x6
 4106 0b52 91       		.byte	0x91
 4107 0b53 40       		.sleb128 -64
 4108 0b54 06       		.byte	0x6
 4109 0b55 23       		.byte	0x23
 4110 0b56 01       		.uleb128 0x1
 4111 0b57 9F       		.byte	0x9f
 4112 0b58 5A020000 		.4byte	.LVL107
 4113 0b5c 5C020000 		.4byte	.LVL108
 4114 0b60 0200     		.2byte	0x2
 4115 0b62 91       		.byte	0x91
 4116 0b63 40       		.sleb128 -64
 4117 0b64 5C020000 		.4byte	.LVL108
 4118 0b68 5E020000 		.4byte	.LVL109
 4119 0b6c 0100     		.2byte	0x1
 4120 0b6e 53       		.byte	0x53
 4121 0b6f 5E020000 		.4byte	.LVL109
 4122 0b73 66020000 		.4byte	.LVL111
 4123 0b77 0200     		.2byte	0x2
 4124 0b79 91       		.byte	0x91
 4125 0b7a 40       		.sleb128 -64
 4126 0b7b D0030000 		.4byte	.LVL175
 4127 0b7f 08040000 		.4byte	.LVL179
 4128 0b83 0200     		.2byte	0x2
 4129 0b85 30       		.byte	0x30
 4130 0b86 9F       		.byte	0x9f
 4131 0b87 08040000 		.4byte	.LVL179
 4132 0b8b D6040000 		.4byte	.LVL218
 4133 0b8f 0200     		.2byte	0x2
 4134 0b91 91       		.byte	0x91
 4135 0b92 40       		.sleb128 -64
 4136 0b93 D6040000 		.4byte	.LVL218
 4137 0b97 DF040000 		.4byte	.LVL219-1
 4138 0b9b 0100     		.2byte	0x1
 4139 0b9d 53       		.byte	0x53
 4140 0b9e DF040000 		.4byte	.LVL219-1
 4141 0ba2 E0040000 		.4byte	.LVL219
 4142 0ba6 0600     		.2byte	0x6
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 86


 4143 0ba8 91       		.byte	0x91
 4144 0ba9 40       		.sleb128 -64
 4145 0baa 06       		.byte	0x6
 4146 0bab 23       		.byte	0x23
 4147 0bac 01       		.uleb128 0x1
 4148 0bad 9F       		.byte	0x9f
 4149 0bae E0040000 		.4byte	.LVL219
 4150 0bb2 E2040000 		.4byte	.LVL220
 4151 0bb6 0200     		.2byte	0x2
 4152 0bb8 91       		.byte	0x91
 4153 0bb9 40       		.sleb128 -64
 4154 0bba E2040000 		.4byte	.LVL220
 4155 0bbe E4040000 		.4byte	.LVL221
 4156 0bc2 0100     		.2byte	0x1
 4157 0bc4 53       		.byte	0x53
 4158 0bc5 E4040000 		.4byte	.LVL221
 4159 0bc9 EC040000 		.4byte	.LVL223
 4160 0bcd 0200     		.2byte	0x2
 4161 0bcf 91       		.byte	0x91
 4162 0bd0 40       		.sleb128 -64
 4163 0bd1 48060000 		.4byte	.LVL286
 4164 0bd5 60060000 		.4byte	.LVL290
 4165 0bd9 0200     		.2byte	0x2
 4166 0bdb 30       		.byte	0x30
 4167 0bdc 9F       		.byte	0x9f
 4168 0bdd 60060000 		.4byte	.LVL290
 4169 0be1 2E070000 		.4byte	.LVL329
 4170 0be5 0200     		.2byte	0x2
 4171 0be7 91       		.byte	0x91
 4172 0be8 40       		.sleb128 -64
 4173 0be9 2E070000 		.4byte	.LVL329
 4174 0bed 37070000 		.4byte	.LVL330-1
 4175 0bf1 0100     		.2byte	0x1
 4176 0bf3 53       		.byte	0x53
 4177 0bf4 37070000 		.4byte	.LVL330-1
 4178 0bf8 38070000 		.4byte	.LVL330
 4179 0bfc 0600     		.2byte	0x6
 4180 0bfe 91       		.byte	0x91
 4181 0bff 40       		.sleb128 -64
 4182 0c00 06       		.byte	0x6
 4183 0c01 23       		.byte	0x23
 4184 0c02 01       		.uleb128 0x1
 4185 0c03 9F       		.byte	0x9f
 4186 0c04 38070000 		.4byte	.LVL330
 4187 0c08 3A070000 		.4byte	.LVL331
 4188 0c0c 0200     		.2byte	0x2
 4189 0c0e 91       		.byte	0x91
 4190 0c0f 40       		.sleb128 -64
 4191 0c10 3A070000 		.4byte	.LVL331
 4192 0c14 3C070000 		.4byte	.LVL332
 4193 0c18 0100     		.2byte	0x1
 4194 0c1a 53       		.byte	0x53
 4195 0c1b 3C070000 		.4byte	.LVL332
 4196 0c1f 4A070000 		.4byte	.LVL335
 4197 0c23 0200     		.2byte	0x2
 4198 0c25 91       		.byte	0x91
 4199 0c26 40       		.sleb128 -64
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 87


 4200 0c27 00000000 		.4byte	0
 4201 0c2b 00000000 		.4byte	0
 4202              		.section	.debug_aranges,"",%progbits
 4203 0000 1C000000 		.4byte	0x1c
 4204 0004 0200     		.2byte	0x2
 4205 0006 00000000 		.4byte	.Ldebug_info0
 4206 000a 04       		.byte	0x4
 4207 000b 00       		.byte	0
 4208 000c 0000     		.2byte	0
 4209 000e 0000     		.2byte	0
 4210 0010 00000000 		.4byte	.LFB63
 4211 0014 A0070000 		.4byte	.LFE63-.LFB63
 4212 0018 00000000 		.4byte	0
 4213 001c 00000000 		.4byte	0
 4214              		.section	.debug_ranges,"",%progbits
 4215              	.Ldebug_ranges0:
 4216 0000 00000000 		.4byte	.LFB63
 4217 0004 A0070000 		.4byte	.LFE63
 4218 0008 00000000 		.4byte	0
 4219 000c 00000000 		.4byte	0
 4220              		.section	.debug_line,"",%progbits
 4221              	.Ldebug_line0:
 4222 0000 F4040000 		.section	.debug_str,"MS",%progbits,1
 4222      02003402 
 4222      00000201 
 4222      FB0E0D00 
 4222      01010101 
 4223              	.LASF30:
 4224 0000 66696E65 		.ascii	"fineCenter\000"
 4224      43656E74 
 4224      657200
 4225              	.LASF2:
 4226 000b 73686F72 		.ascii	"short int\000"
 4226      7420696E 
 4226      7400
 4227              	.LASF19:
 4228 0015 73697A65 		.ascii	"sizetype\000"
 4228      74797065 
 4228      00
 4229              	.LASF67:
 4230 001e 6D61696E 		.ascii	"main\000"
 4230      00
 4231              	.LASF53:
 4232 0023 6C664F75 		.ascii	"lfOutADC_Read32\000"
 4232      74414443 
 4232      5F526561 
 4232      64333200 
 4233              	.LASF56:
 4234 0033 66696E65 		.ascii	"fineDAC_Start\000"
 4234      4441435F 
 4234      53746172 
 4234      7400
 4235              	.LASF34:
 4236 0041 6C6F7756 		.ascii	"lowVal\000"
 4236      616C00
 4237              	.LASF12:
 4238 0048 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 88


 4238      313600
 4239              	.LASF40:
 4240 004f 63686563 		.ascii	"checkLight_Write\000"
 4240      6B4C6967 
 4240      68745F57 
 4240      72697465 
 4240      00
 4241              	.LASF66:
 4242 0060 433A5C55 		.ascii	"C:\\Users\\Thompson Lab\\Documents\\PSoC Creator\\A"
 4242      73657273 
 4242      5C54686F 
 4242      6D70736F 
 4242      6E204C61 
 4243 008e 646A7573 		.ascii	"djustable Automated Relocker Code\\Adjustable Autom"
 4243      7461626C 
 4243      65204175 
 4243      746F6D61 
 4243      74656420 
 4244 00c0 61746564 		.ascii	"ated Relocker Code.cydsn\000"
 4244      2052656C 
 4244      6F636B65 
 4244      7220436F 
 4244      64652E63 
 4245              	.LASF14:
 4246 00d9 696E7431 		.ascii	"int16\000"
 4246      3600
 4247              	.LASF11:
 4248 00df 75696E74 		.ascii	"uint8\000"
 4248      3800
 4249              	.LASF47:
 4250 00e5 74687265 		.ascii	"thresSample_Read\000"
 4250      7353616D 
 4250      706C655F 
 4250      52656164 
 4250      00
 4251              	.LASF49:
 4252 00f6 654D6F6E 		.ascii	"eMonADC_StartConvert\000"
 4252      4144435F 
 4252      53746172 
 4252      74436F6E 
 4252      76657274 
 4253              	.LASF32:
 4254 010b 66696E65 		.ascii	"fineHigh\000"
 4254      48696768 
 4254      00
 4255              	.LASF16:
 4256 0114 666C6F61 		.ascii	"float\000"
 4256      7400
 4257              	.LASF26:
 4258 011a 636F7572 		.ascii	"courseCenter\000"
 4258      73654365 
 4258      6E746572 
 4258      00
 4259              	.LASF37:
 4260 0127 77686963 		.ascii	"whichLoop\000"
 4260      684C6F6F 
 4260      7000
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 89


 4261              	.LASF51:
 4262 0131 6C664F75 		.ascii	"lfOutADC_Start\000"
 4262      74414443 
 4262      5F537461 
 4262      727400
 4263              	.LASF6:
 4264 0140 6C6F6E67 		.ascii	"long long int\000"
 4264      206C6F6E 
 4264      6720696E 
 4264      7400
 4265              	.LASF58:
 4266 014e 66696E65 		.ascii	"fineDAC_SetValue\000"
 4266      4441435F 
 4266      53657456 
 4266      616C7565 
 4266      00
 4267              	.LASF57:
 4268 015f 636F7572 		.ascii	"courseDAC_SetValue\000"
 4268      73654441 
 4268      435F5365 
 4268      7456616C 
 4268      756500
 4269              	.LASF54:
 4270 0172 63616C69 		.ascii	"calibratePin_Read\000"
 4270      62726174 
 4270      6550696E 
 4270      5F526561 
 4270      6400
 4271              	.LASF41:
 4272 0184 79656C6C 		.ascii	"yellowLight_Write\000"
 4272      6F774C69 
 4272      6768745F 
 4272      57726974 
 4272      6500
 4273              	.LASF21:
 4274 0196 6D6F6465 		.ascii	"modeOut\000"
 4274      4F757400 
 4275              	.LASF62:
 4276 019e 73657474 		.ascii	"setting22V_Read\000"
 4276      696E6732 
 4276      32565F52 
 4276      65616400 
 4277              	.LASF59:
 4278 01ae 43794465 		.ascii	"CyDelayUs\000"
 4278      6C617955 
 4278      7300
 4279              	.LASF1:
 4280 01b8 756E7369 		.ascii	"unsigned char\000"
 4280      676E6564 
 4280      20636861 
 4280      7200
 4281              	.LASF29:
 4282 01c6 66696E65 		.ascii	"fineProp\000"
 4282      50726F70 
 4282      00
 4283              	.LASF33:
 4284 01cf 6E6F7745 		.ascii	"nowEMonVal\000"
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 90


 4284      4D6F6E56 
 4284      616C00
 4285              	.LASF0:
 4286 01da 7369676E 		.ascii	"signed char\000"
 4286      65642063 
 4286      68617200 
 4287              	.LASF10:
 4288 01e6 696E7433 		.ascii	"int32_t\000"
 4288      325F7400 
 4289              	.LASF7:
 4290 01ee 6C6F6E67 		.ascii	"long long unsigned int\000"
 4290      206C6F6E 
 4290      6720756E 
 4290      7369676E 
 4290      65642069 
 4291              	.LASF35:
 4292 0205 74687265 		.ascii	"thresSubtract\000"
 4292      73537562 
 4292      74726163 
 4292      7400
 4293              	.LASF8:
 4294 0213 756E7369 		.ascii	"unsigned int\000"
 4294      676E6564 
 4294      20696E74 
 4294      00
 4295              	.LASF61:
 4296 0220 73657474 		.ascii	"setting8V_Read\000"
 4296      696E6738 
 4296      565F5265 
 4296      616400
 4297              	.LASF23:
 4298 022f 6C6F7752 		.ascii	"lowRail\000"
 4298      61696C00 
 4299              	.LASF52:
 4300 0237 6C664F75 		.ascii	"lfOutADC_StartConvert\000"
 4300      74414443 
 4300      5F537461 
 4300      7274436F 
 4300      6E766572 
 4301              	.LASF28:
 4302 024d 636F7572 		.ascii	"courseHigh\000"
 4302      73654869 
 4302      676800
 4303              	.LASF3:
 4304 0258 73686F72 		.ascii	"short unsigned int\000"
 4304      7420756E 
 4304      7369676E 
 4304      65642069 
 4304      6E7400
 4305              	.LASF18:
 4306 026b 63686172 		.ascii	"char\000"
 4306      00
 4307              	.LASF68:
 4308 0270 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4308      52784275 
 4308      66666572 
 4308      00
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 91


 4309              	.LASF55:
 4310 027d 636F7572 		.ascii	"courseDAC_Start\000"
 4310      73654441 
 4310      435F5374 
 4310      61727400 
 4311              	.LASF46:
 4312 028d 6C6F636B 		.ascii	"lockIn_Read\000"
 4312      496E5F52 
 4312      65616400 
 4313              	.LASF50:
 4314 0299 654D6F6E 		.ascii	"eMonADC_GetResult16\000"
 4314      4144435F 
 4314      47657452 
 4314      6573756C 
 4314      74313600 
 4315              	.LASF38:
 4316 02ad 64656369 		.ascii	"decideLoop\000"
 4316      64654C6F 
 4316      6F7000
 4317              	.LASF63:
 4318 02b8 73657474 		.ascii	"setting28V_Read\000"
 4318      696E6732 
 4318      38565F52 
 4318      65616400 
 4319              	.LASF44:
 4320 02c8 73776974 		.ascii	"switches_Write\000"
 4320      63686573 
 4320      5F577269 
 4320      746500
 4321              	.LASF39:
 4322 02d7 6C6F636B 		.ascii	"lockFail\000"
 4322      4661696C 
 4322      00
 4323              	.LASF13:
 4324 02e0 75696E74 		.ascii	"uint32\000"
 4324      333200
 4325              	.LASF65:
 4326 02e7 6D61696E 		.ascii	"main.c\000"
 4326      2E6300
 4327              	.LASF5:
 4328 02ee 6C6F6E67 		.ascii	"long unsigned int\000"
 4328      20756E73 
 4328      69676E65 
 4328      6420696E 
 4328      7400
 4329              	.LASF15:
 4330 0300 696E7433 		.ascii	"int32\000"
 4330      3200
 4331              	.LASF17:
 4332 0306 646F7562 		.ascii	"double\000"
 4332      6C6500
 4333              	.LASF42:
 4334 030d 67726565 		.ascii	"greenLight_Write\000"
 4334      6E4C6967 
 4334      68745F57 
 4334      72697465 
 4334      00
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 92


 4335              	.LASF22:
 4336 031e 75705261 		.ascii	"upRail\000"
 4336      696C00
 4337              	.LASF9:
 4338 0325 5F5F696E 		.ascii	"__int32_t\000"
 4338      7433325F 
 4338      7400
 4339              	.LASF27:
 4340 032f 636F7572 		.ascii	"courseLow\000"
 4340      73654C6F 
 4340      7700
 4341              	.LASF64:
 4342 0339 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4342      4320342E 
 4342      392E3320 
 4342      32303135 
 4342      30333033 
 4343 036c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4343      20726576 
 4343      6973696F 
 4343      6E203232 
 4343      31323230 
 4344 039f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4344      66756E63 
 4344      74696F6E 
 4344      2D736563 
 4344      74696F6E 
 4345              	.LASF60:
 4346 03c7 6C664F75 		.ascii	"lfOutADC_GetResult32\000"
 4346      74414443 
 4346      5F476574 
 4346      52657375 
 4346      6C743332 
 4347              	.LASF20:
 4348 03dc 63686563 		.ascii	"check\000"
 4348      6B00
 4349              	.LASF25:
 4350 03e2 73776565 		.ascii	"sweepCenter\000"
 4350      7043656E 
 4350      74657200 
 4351              	.LASF4:
 4352 03ee 6C6F6E67 		.ascii	"long int\000"
 4352      20696E74 
 4352      00
 4353              	.LASF48:
 4354 03f7 654D6F6E 		.ascii	"eMonADC_Start\000"
 4354      4144435F 
 4354      53746172 
 4354      7400
 4355              	.LASF31:
 4356 0405 66696E65 		.ascii	"fineLow\000"
 4356      4C6F7700 
 4357              	.LASF45:
 4358 040d 43794465 		.ascii	"CyDelay\000"
 4358      6C617900 
 4359              	.LASF24:
 4360 0415 73776565 		.ascii	"sweepHigh\000"
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccpMTeFg.s 			page 93


 4360      70486967 
 4360      6800
 4361              	.LASF43:
 4362 041f 7265644C 		.ascii	"redLight_Write\000"
 4362      69676874 
 4362      5F577269 
 4362      746500
 4363              	.LASF36:
 4364 042e 64657465 		.ascii	"detectThres\000"
 4364      63745468 
 4364      72657300 
 4365              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
