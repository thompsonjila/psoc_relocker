ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"errMonPin.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.errMonPin_Write,"ax",%progbits
  20              		.align	1
  21              		.global	errMonPin_Write
  22              		.thumb
  23              		.thumb_func
  24              		.type	errMonPin_Write, %function
  25              	errMonPin_Write:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\errMonPin.c"
   1:Generated_Source\PSoC5/errMonPin.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/errMonPin.c **** * File Name: errMonPin.c  
   3:Generated_Source\PSoC5/errMonPin.c **** * Version 2.20
   4:Generated_Source\PSoC5/errMonPin.c **** *
   5:Generated_Source\PSoC5/errMonPin.c **** * Description:
   6:Generated_Source\PSoC5/errMonPin.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC5/errMonPin.c **** *
   8:Generated_Source\PSoC5/errMonPin.c **** * Note:
   9:Generated_Source\PSoC5/errMonPin.c **** *
  10:Generated_Source\PSoC5/errMonPin.c **** ********************************************************************************
  11:Generated_Source\PSoC5/errMonPin.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/errMonPin.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/errMonPin.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/errMonPin.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/errMonPin.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/errMonPin.c **** 
  17:Generated_Source\PSoC5/errMonPin.c **** #include "cytypes.h"
  18:Generated_Source\PSoC5/errMonPin.c **** #include "errMonPin.h"
  19:Generated_Source\PSoC5/errMonPin.c **** 
  20:Generated_Source\PSoC5/errMonPin.c **** /* APIs are not generated for P15[7:6] on PSoC 5 */
  21:Generated_Source\PSoC5/errMonPin.c **** #if !(CY_PSOC5A &&\
  22:Generated_Source\PSoC5/errMonPin.c **** 	 errMonPin__PORT == 15 && ((errMonPin__MASK & 0xC0) != 0))
  23:Generated_Source\PSoC5/errMonPin.c **** 
  24:Generated_Source\PSoC5/errMonPin.c **** 
  25:Generated_Source\PSoC5/errMonPin.c **** /*******************************************************************************
  26:Generated_Source\PSoC5/errMonPin.c **** * Function Name: errMonPin_Write
  27:Generated_Source\PSoC5/errMonPin.c **** ****************************************************************************//**
  28:Generated_Source\PSoC5/errMonPin.c **** *
  29:Generated_Source\PSoC5/errMonPin.c **** * \brief Writes the value to the physical port (data output register), masking
  30:Generated_Source\PSoC5/errMonPin.c **** *  and shifting the bits appropriately. 
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 2


  31:Generated_Source\PSoC5/errMonPin.c **** *
  32:Generated_Source\PSoC5/errMonPin.c **** * The data output register controls the signal applied to the physical pin in 
  33:Generated_Source\PSoC5/errMonPin.c **** * conjunction with the drive mode parameter. This function avoids changing 
  34:Generated_Source\PSoC5/errMonPin.c **** * other bits in the port by using the appropriate method (read-modify-write or
  35:Generated_Source\PSoC5/errMonPin.c **** * bit banding).
  36:Generated_Source\PSoC5/errMonPin.c **** *
  37:Generated_Source\PSoC5/errMonPin.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  38:Generated_Source\PSoC5/errMonPin.c **** * as it is driven by the hardware signal attached to it.
  39:Generated_Source\PSoC5/errMonPin.c **** *
  40:Generated_Source\PSoC5/errMonPin.c **** * \param value
  41:Generated_Source\PSoC5/errMonPin.c **** *  Value to write to the component instance.
  42:Generated_Source\PSoC5/errMonPin.c **** *
  43:Generated_Source\PSoC5/errMonPin.c **** * \return 
  44:Generated_Source\PSoC5/errMonPin.c **** *  None 
  45:Generated_Source\PSoC5/errMonPin.c **** *
  46:Generated_Source\PSoC5/errMonPin.c **** * \sideeffect
  47:Generated_Source\PSoC5/errMonPin.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
  48:Generated_Source\PSoC5/errMonPin.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
  49:Generated_Source\PSoC5/errMonPin.c **** *  interrupts this function and performs writes to the Pins component data 
  50:Generated_Source\PSoC5/errMonPin.c **** *  register can cause corrupted port data. To avoid this issue, you should 
  51:Generated_Source\PSoC5/errMonPin.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
  52:Generated_Source\PSoC5/errMonPin.c **** *  this function.
  53:Generated_Source\PSoC5/errMonPin.c **** *
  54:Generated_Source\PSoC5/errMonPin.c **** * \funcusage
  55:Generated_Source\PSoC5/errMonPin.c **** *  \snippet errMonPin_SUT.c usage_errMonPin_Write
  56:Generated_Source\PSoC5/errMonPin.c **** *******************************************************************************/
  57:Generated_Source\PSoC5/errMonPin.c **** void errMonPin_Write(uint8 value)
  58:Generated_Source\PSoC5/errMonPin.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  59:Generated_Source\PSoC5/errMonPin.c ****     uint8 staticBits = (errMonPin_DR & (uint8)(~errMonPin_MASK));
  34              		.loc 1 59 0
  35 0000 044A     		ldr	r2, .L2
  60:Generated_Source\PSoC5/errMonPin.c ****     errMonPin_DR = staticBits | ((uint8)(value << errMonPin_SHIFT) & errMonPin_MASK);
  36              		.loc 1 60 0
  37 0002 C000     		lsls	r0, r0, #3
  38              	.LVL1:
  59:Generated_Source\PSoC5/errMonPin.c ****     uint8 staticBits = (errMonPin_DR & (uint8)(~errMonPin_MASK));
  39              		.loc 1 59 0
  40 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  41              	.LVL2:
  42              		.loc 1 60 0
  43 0006 00F00800 		and	r0, r0, #8
  44 000a 03F0F703 		and	r3, r3, #247
  45              	.LVL3:
  46 000e 0343     		orrs	r3, r3, r0
  47 0010 1370     		strb	r3, [r2]
  48 0012 7047     		bx	lr
  49              	.L3:
  50              		.align	2
  51              	.L2:
  52 0014 00510040 		.word	1073762560
  53              		.cfi_endproc
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 3


  54              	.LFE0:
  55              		.size	errMonPin_Write, .-errMonPin_Write
  56              		.section	.text.errMonPin_SetDriveMode,"ax",%progbits
  57              		.align	1
  58              		.global	errMonPin_SetDriveMode
  59              		.thumb
  60              		.thumb_func
  61              		.type	errMonPin_SetDriveMode, %function
  62              	errMonPin_SetDriveMode:
  63              	.LFB1:
  61:Generated_Source\PSoC5/errMonPin.c **** }
  62:Generated_Source\PSoC5/errMonPin.c **** 
  63:Generated_Source\PSoC5/errMonPin.c **** 
  64:Generated_Source\PSoC5/errMonPin.c **** /*******************************************************************************
  65:Generated_Source\PSoC5/errMonPin.c **** * Function Name: errMonPin_SetDriveMode
  66:Generated_Source\PSoC5/errMonPin.c **** ****************************************************************************//**
  67:Generated_Source\PSoC5/errMonPin.c **** *
  68:Generated_Source\PSoC5/errMonPin.c **** * \brief Sets the drive mode for each of the Pins component's pins.
  69:Generated_Source\PSoC5/errMonPin.c **** * 
  70:Generated_Source\PSoC5/errMonPin.c **** * <b>Note</b> This affects all pins in the Pins component instance. Use the
  71:Generated_Source\PSoC5/errMonPin.c **** * Per-Pin APIs if you wish to control individual pin's drive modes.
  72:Generated_Source\PSoC5/errMonPin.c **** *
  73:Generated_Source\PSoC5/errMonPin.c **** * \param mode
  74:Generated_Source\PSoC5/errMonPin.c **** *  Mode for the selected signals. Valid options are documented in 
  75:Generated_Source\PSoC5/errMonPin.c **** *  \ref driveMode.
  76:Generated_Source\PSoC5/errMonPin.c **** *
  77:Generated_Source\PSoC5/errMonPin.c **** * \return
  78:Generated_Source\PSoC5/errMonPin.c **** *  None
  79:Generated_Source\PSoC5/errMonPin.c **** *
  80:Generated_Source\PSoC5/errMonPin.c **** * \sideeffect
  81:Generated_Source\PSoC5/errMonPin.c **** *  If you use read-modify-write operations that are not atomic, the ISR can
  82:Generated_Source\PSoC5/errMonPin.c **** *  cause corruption of this function. An ISR that interrupts this function 
  83:Generated_Source\PSoC5/errMonPin.c **** *  and performs writes to the Pins component Drive Mode registers can cause 
  84:Generated_Source\PSoC5/errMonPin.c **** *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  85:Generated_Source\PSoC5/errMonPin.c **** *  APIs (primary method) or disable interrupts around this function.
  86:Generated_Source\PSoC5/errMonPin.c **** *
  87:Generated_Source\PSoC5/errMonPin.c **** * \funcusage
  88:Generated_Source\PSoC5/errMonPin.c **** *  \snippet errMonPin_SUT.c usage_errMonPin_SetDriveMode
  89:Generated_Source\PSoC5/errMonPin.c **** *******************************************************************************/
  90:Generated_Source\PSoC5/errMonPin.c **** void errMonPin_SetDriveMode(uint8 mode)
  91:Generated_Source\PSoC5/errMonPin.c **** {
  64              		.loc 1 91 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL4:
  92:Generated_Source\PSoC5/errMonPin.c **** 	CyPins_SetPinDriveMode(errMonPin_0, mode);
  70              		.loc 1 92 0
  71 0000 044A     		ldr	r2, .L5
  72 0002 00F00E00 		and	r0, r0, #14
  73              	.LVL5:
  74 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  75 0008 03F0F103 		and	r3, r3, #241
  76 000c 1843     		orrs	r0, r0, r3
  77 000e 1070     		strb	r0, [r2]
  78 0010 7047     		bx	lr
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 4


  79              	.L6:
  80 0012 00BF     		.align	2
  81              	.L5:
  82 0014 03500040 		.word	1073762307
  83              		.cfi_endproc
  84              	.LFE1:
  85              		.size	errMonPin_SetDriveMode, .-errMonPin_SetDriveMode
  86              		.section	.text.errMonPin_Read,"ax",%progbits
  87              		.align	1
  88              		.global	errMonPin_Read
  89              		.thumb
  90              		.thumb_func
  91              		.type	errMonPin_Read, %function
  92              	errMonPin_Read:
  93              	.LFB2:
  93:Generated_Source\PSoC5/errMonPin.c **** }
  94:Generated_Source\PSoC5/errMonPin.c **** 
  95:Generated_Source\PSoC5/errMonPin.c **** 
  96:Generated_Source\PSoC5/errMonPin.c **** /*******************************************************************************
  97:Generated_Source\PSoC5/errMonPin.c **** * Function Name: errMonPin_Read
  98:Generated_Source\PSoC5/errMonPin.c **** ****************************************************************************//**
  99:Generated_Source\PSoC5/errMonPin.c **** *
 100:Generated_Source\PSoC5/errMonPin.c **** * \brief Reads the associated physical port (pin status register) and masks 
 101:Generated_Source\PSoC5/errMonPin.c **** *  the required bits according to the width and bit position of the component
 102:Generated_Source\PSoC5/errMonPin.c **** *  instance. 
 103:Generated_Source\PSoC5/errMonPin.c **** *
 104:Generated_Source\PSoC5/errMonPin.c **** * The pin's status register returns the current logic level present on the 
 105:Generated_Source\PSoC5/errMonPin.c **** * physical pin.
 106:Generated_Source\PSoC5/errMonPin.c **** *
 107:Generated_Source\PSoC5/errMonPin.c **** * \return 
 108:Generated_Source\PSoC5/errMonPin.c **** *  The current value for the pins in the component as a right justified number.
 109:Generated_Source\PSoC5/errMonPin.c **** *
 110:Generated_Source\PSoC5/errMonPin.c **** * \funcusage
 111:Generated_Source\PSoC5/errMonPin.c **** *  \snippet errMonPin_SUT.c usage_errMonPin_Read  
 112:Generated_Source\PSoC5/errMonPin.c **** *******************************************************************************/
 113:Generated_Source\PSoC5/errMonPin.c **** uint8 errMonPin_Read(void)
 114:Generated_Source\PSoC5/errMonPin.c **** {
  94              		.loc 1 114 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
 115:Generated_Source\PSoC5/errMonPin.c ****     return (errMonPin_PS & errMonPin_MASK) >> errMonPin_SHIFT;
  99              		.loc 1 115 0
 100 0000 024B     		ldr	r3, .L8
 101 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 116:Generated_Source\PSoC5/errMonPin.c **** }
 102              		.loc 1 116 0
 103 0004 C0F3C000 		ubfx	r0, r0, #3, #1
 104 0008 7047     		bx	lr
 105              	.L9:
 106 000a 00BF     		.align	2
 107              	.L8:
 108 000c 01510040 		.word	1073762561
 109              		.cfi_endproc
 110              	.LFE2:
 111              		.size	errMonPin_Read, .-errMonPin_Read
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 5


 112              		.section	.text.errMonPin_ReadDataReg,"ax",%progbits
 113              		.align	1
 114              		.global	errMonPin_ReadDataReg
 115              		.thumb
 116              		.thumb_func
 117              		.type	errMonPin_ReadDataReg, %function
 118              	errMonPin_ReadDataReg:
 119              	.LFB3:
 117:Generated_Source\PSoC5/errMonPin.c **** 
 118:Generated_Source\PSoC5/errMonPin.c **** 
 119:Generated_Source\PSoC5/errMonPin.c **** /*******************************************************************************
 120:Generated_Source\PSoC5/errMonPin.c **** * Function Name: errMonPin_ReadDataReg
 121:Generated_Source\PSoC5/errMonPin.c **** ****************************************************************************//**
 122:Generated_Source\PSoC5/errMonPin.c **** *
 123:Generated_Source\PSoC5/errMonPin.c **** * \brief Reads the associated physical port's data output register and masks 
 124:Generated_Source\PSoC5/errMonPin.c **** *  the correct bits according to the width and bit position of the component 
 125:Generated_Source\PSoC5/errMonPin.c **** *  instance. 
 126:Generated_Source\PSoC5/errMonPin.c **** *
 127:Generated_Source\PSoC5/errMonPin.c **** * The data output register controls the signal applied to the physical pin in 
 128:Generated_Source\PSoC5/errMonPin.c **** * conjunction with the drive mode parameter. This is not the same as the 
 129:Generated_Source\PSoC5/errMonPin.c **** * preferred errMonPin_Read() API because the 
 130:Generated_Source\PSoC5/errMonPin.c **** * errMonPin_ReadDataReg() reads the data register instead of the status 
 131:Generated_Source\PSoC5/errMonPin.c **** * register. For output pins this is a useful function to determine the value 
 132:Generated_Source\PSoC5/errMonPin.c **** * just written to the pin.
 133:Generated_Source\PSoC5/errMonPin.c **** *
 134:Generated_Source\PSoC5/errMonPin.c **** * \return 
 135:Generated_Source\PSoC5/errMonPin.c **** *  The current value of the data register masked and shifted into a right 
 136:Generated_Source\PSoC5/errMonPin.c **** *  justified number for the component instance.
 137:Generated_Source\PSoC5/errMonPin.c **** *
 138:Generated_Source\PSoC5/errMonPin.c **** * \funcusage
 139:Generated_Source\PSoC5/errMonPin.c **** *  \snippet errMonPin_SUT.c usage_errMonPin_ReadDataReg 
 140:Generated_Source\PSoC5/errMonPin.c **** *******************************************************************************/
 141:Generated_Source\PSoC5/errMonPin.c **** uint8 errMonPin_ReadDataReg(void)
 142:Generated_Source\PSoC5/errMonPin.c **** {
 120              		.loc 1 142 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 143:Generated_Source\PSoC5/errMonPin.c ****     return (errMonPin_DR & errMonPin_MASK) >> errMonPin_SHIFT;
 125              		.loc 1 143 0
 126 0000 024B     		ldr	r3, .L11
 127 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 144:Generated_Source\PSoC5/errMonPin.c **** }
 128              		.loc 1 144 0
 129 0004 C0F3C000 		ubfx	r0, r0, #3, #1
 130 0008 7047     		bx	lr
 131              	.L12:
 132 000a 00BF     		.align	2
 133              	.L11:
 134 000c 00510040 		.word	1073762560
 135              		.cfi_endproc
 136              	.LFE3:
 137              		.size	errMonPin_ReadDataReg, .-errMonPin_ReadDataReg
 138              		.text
 139              	.Letext0:
 140              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 6


 141              		.section	.debug_info,"",%progbits
 142              	.Ldebug_info0:
 143 0000 1D010000 		.4byte	0x11d
 144 0004 0400     		.2byte	0x4
 145 0006 00000000 		.4byte	.Ldebug_abbrev0
 146 000a 04       		.byte	0x4
 147 000b 01       		.uleb128 0x1
 148 000c C3000000 		.4byte	.LASF20
 149 0010 0C       		.byte	0xc
 150 0011 76000000 		.4byte	.LASF21
 151 0015 B4010000 		.4byte	.LASF22
 152 0019 00000000 		.4byte	.Ldebug_ranges0+0
 153 001d 00000000 		.4byte	0
 154 0021 00000000 		.4byte	.Ldebug_line0
 155 0025 02       		.uleb128 0x2
 156 0026 01       		.byte	0x1
 157 0027 06       		.byte	0x6
 158 0028 A8010000 		.4byte	.LASF0
 159 002c 02       		.uleb128 0x2
 160 002d 01       		.byte	0x1
 161 002e 08       		.byte	0x8
 162 002f 51000000 		.4byte	.LASF1
 163 0033 02       		.uleb128 0x2
 164 0034 02       		.byte	0x2
 165 0035 05       		.byte	0x5
 166 0036 78010000 		.4byte	.LASF2
 167 003a 02       		.uleb128 0x2
 168 003b 02       		.byte	0x2
 169 003c 07       		.byte	0x7
 170 003d 21000000 		.4byte	.LASF3
 171 0041 02       		.uleb128 0x2
 172 0042 04       		.byte	0x4
 173 0043 05       		.byte	0x5
 174 0044 9F010000 		.4byte	.LASF4
 175 0048 02       		.uleb128 0x2
 176 0049 04       		.byte	0x4
 177 004a 07       		.byte	0x7
 178 004b 64000000 		.4byte	.LASF5
 179 004f 02       		.uleb128 0x2
 180 0050 08       		.byte	0x8
 181 0051 05       		.byte	0x5
 182 0052 56010000 		.4byte	.LASF6
 183 0056 02       		.uleb128 0x2
 184 0057 08       		.byte	0x8
 185 0058 07       		.byte	0x7
 186 0059 3A000000 		.4byte	.LASF7
 187 005d 03       		.uleb128 0x3
 188 005e 04       		.byte	0x4
 189 005f 05       		.byte	0x5
 190 0060 696E7400 		.ascii	"int\000"
 191 0064 02       		.uleb128 0x2
 192 0065 04       		.byte	0x4
 193 0066 07       		.byte	0x7
 194 0067 A0000000 		.4byte	.LASF8
 195 006b 04       		.uleb128 0x4
 196 006c 82010000 		.4byte	.LASF12
 197 0070 02       		.byte	0x2
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 7


 198 0071 E401     		.2byte	0x1e4
 199 0073 2C000000 		.4byte	0x2c
 200 0077 02       		.uleb128 0x2
 201 0078 04       		.byte	0x4
 202 0079 04       		.byte	0x4
 203 007a 34000000 		.4byte	.LASF9
 204 007e 02       		.uleb128 0x2
 205 007f 08       		.byte	0x8
 206 0080 04       		.byte	0x4
 207 0081 99000000 		.4byte	.LASF10
 208 0085 02       		.uleb128 0x2
 209 0086 01       		.byte	0x1
 210 0087 08       		.byte	0x8
 211 0088 64010000 		.4byte	.LASF11
 212 008c 04       		.uleb128 0x4
 213 008d 5F000000 		.4byte	.LASF13
 214 0091 02       		.byte	0x2
 215 0092 8E02     		.2byte	0x28e
 216 0094 98000000 		.4byte	0x98
 217 0098 05       		.uleb128 0x5
 218 0099 6B000000 		.4byte	0x6b
 219 009d 06       		.uleb128 0x6
 220 009e 00000000 		.4byte	.LASF14
 221 00a2 01       		.byte	0x1
 222 00a3 39       		.byte	0x39
 223 00a4 00000000 		.4byte	.LFB0
 224 00a8 18000000 		.4byte	.LFE0-.LFB0
 225 00ac 01       		.uleb128 0x1
 226 00ad 9C       		.byte	0x9c
 227 00ae D1000000 		.4byte	0xd1
 228 00b2 07       		.uleb128 0x7
 229 00b3 10000000 		.4byte	.LASF16
 230 00b7 01       		.byte	0x1
 231 00b8 39       		.byte	0x39
 232 00b9 6B000000 		.4byte	0x6b
 233 00bd 00000000 		.4byte	.LLST0
 234 00c1 08       		.uleb128 0x8
 235 00c2 16000000 		.4byte	.LASF23
 236 00c6 01       		.byte	0x1
 237 00c7 3B       		.byte	0x3b
 238 00c8 6B000000 		.4byte	0x6b
 239 00cc 21000000 		.4byte	.LLST1
 240 00d0 00       		.byte	0
 241 00d1 06       		.uleb128 0x6
 242 00d2 88010000 		.4byte	.LASF15
 243 00d6 01       		.byte	0x1
 244 00d7 5A       		.byte	0x5a
 245 00d8 00000000 		.4byte	.LFB1
 246 00dc 18000000 		.4byte	.LFE1-.LFB1
 247 00e0 01       		.uleb128 0x1
 248 00e1 9C       		.byte	0x9c
 249 00e2 F6000000 		.4byte	0xf6
 250 00e6 07       		.uleb128 0x7
 251 00e7 51010000 		.4byte	.LASF17
 252 00eb 01       		.byte	0x1
 253 00ec 5A       		.byte	0x5a
 254 00ed 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 8


 255 00f1 39000000 		.4byte	.LLST2
 256 00f5 00       		.byte	0
 257 00f6 09       		.uleb128 0x9
 258 00f7 69010000 		.4byte	.LASF18
 259 00fb 01       		.byte	0x1
 260 00fc 71       		.byte	0x71
 261 00fd 6B000000 		.4byte	0x6b
 262 0101 00000000 		.4byte	.LFB2
 263 0105 10000000 		.4byte	.LFE2-.LFB2
 264 0109 01       		.uleb128 0x1
 265 010a 9C       		.byte	0x9c
 266 010b 09       		.uleb128 0x9
 267 010c AD000000 		.4byte	.LASF19
 268 0110 01       		.byte	0x1
 269 0111 8D       		.byte	0x8d
 270 0112 6B000000 		.4byte	0x6b
 271 0116 00000000 		.4byte	.LFB3
 272 011a 10000000 		.4byte	.LFE3-.LFB3
 273 011e 01       		.uleb128 0x1
 274 011f 9C       		.byte	0x9c
 275 0120 00       		.byte	0
 276              		.section	.debug_abbrev,"",%progbits
 277              	.Ldebug_abbrev0:
 278 0000 01       		.uleb128 0x1
 279 0001 11       		.uleb128 0x11
 280 0002 01       		.byte	0x1
 281 0003 25       		.uleb128 0x25
 282 0004 0E       		.uleb128 0xe
 283 0005 13       		.uleb128 0x13
 284 0006 0B       		.uleb128 0xb
 285 0007 03       		.uleb128 0x3
 286 0008 0E       		.uleb128 0xe
 287 0009 1B       		.uleb128 0x1b
 288 000a 0E       		.uleb128 0xe
 289 000b 55       		.uleb128 0x55
 290 000c 17       		.uleb128 0x17
 291 000d 11       		.uleb128 0x11
 292 000e 01       		.uleb128 0x1
 293 000f 10       		.uleb128 0x10
 294 0010 17       		.uleb128 0x17
 295 0011 00       		.byte	0
 296 0012 00       		.byte	0
 297 0013 02       		.uleb128 0x2
 298 0014 24       		.uleb128 0x24
 299 0015 00       		.byte	0
 300 0016 0B       		.uleb128 0xb
 301 0017 0B       		.uleb128 0xb
 302 0018 3E       		.uleb128 0x3e
 303 0019 0B       		.uleb128 0xb
 304 001a 03       		.uleb128 0x3
 305 001b 0E       		.uleb128 0xe
 306 001c 00       		.byte	0
 307 001d 00       		.byte	0
 308 001e 03       		.uleb128 0x3
 309 001f 24       		.uleb128 0x24
 310 0020 00       		.byte	0
 311 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 9


 312 0022 0B       		.uleb128 0xb
 313 0023 3E       		.uleb128 0x3e
 314 0024 0B       		.uleb128 0xb
 315 0025 03       		.uleb128 0x3
 316 0026 08       		.uleb128 0x8
 317 0027 00       		.byte	0
 318 0028 00       		.byte	0
 319 0029 04       		.uleb128 0x4
 320 002a 16       		.uleb128 0x16
 321 002b 00       		.byte	0
 322 002c 03       		.uleb128 0x3
 323 002d 0E       		.uleb128 0xe
 324 002e 3A       		.uleb128 0x3a
 325 002f 0B       		.uleb128 0xb
 326 0030 3B       		.uleb128 0x3b
 327 0031 05       		.uleb128 0x5
 328 0032 49       		.uleb128 0x49
 329 0033 13       		.uleb128 0x13
 330 0034 00       		.byte	0
 331 0035 00       		.byte	0
 332 0036 05       		.uleb128 0x5
 333 0037 35       		.uleb128 0x35
 334 0038 00       		.byte	0
 335 0039 49       		.uleb128 0x49
 336 003a 13       		.uleb128 0x13
 337 003b 00       		.byte	0
 338 003c 00       		.byte	0
 339 003d 06       		.uleb128 0x6
 340 003e 2E       		.uleb128 0x2e
 341 003f 01       		.byte	0x1
 342 0040 3F       		.uleb128 0x3f
 343 0041 19       		.uleb128 0x19
 344 0042 03       		.uleb128 0x3
 345 0043 0E       		.uleb128 0xe
 346 0044 3A       		.uleb128 0x3a
 347 0045 0B       		.uleb128 0xb
 348 0046 3B       		.uleb128 0x3b
 349 0047 0B       		.uleb128 0xb
 350 0048 27       		.uleb128 0x27
 351 0049 19       		.uleb128 0x19
 352 004a 11       		.uleb128 0x11
 353 004b 01       		.uleb128 0x1
 354 004c 12       		.uleb128 0x12
 355 004d 06       		.uleb128 0x6
 356 004e 40       		.uleb128 0x40
 357 004f 18       		.uleb128 0x18
 358 0050 9742     		.uleb128 0x2117
 359 0052 19       		.uleb128 0x19
 360 0053 01       		.uleb128 0x1
 361 0054 13       		.uleb128 0x13
 362 0055 00       		.byte	0
 363 0056 00       		.byte	0
 364 0057 07       		.uleb128 0x7
 365 0058 05       		.uleb128 0x5
 366 0059 00       		.byte	0
 367 005a 03       		.uleb128 0x3
 368 005b 0E       		.uleb128 0xe
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 10


 369 005c 3A       		.uleb128 0x3a
 370 005d 0B       		.uleb128 0xb
 371 005e 3B       		.uleb128 0x3b
 372 005f 0B       		.uleb128 0xb
 373 0060 49       		.uleb128 0x49
 374 0061 13       		.uleb128 0x13
 375 0062 02       		.uleb128 0x2
 376 0063 17       		.uleb128 0x17
 377 0064 00       		.byte	0
 378 0065 00       		.byte	0
 379 0066 08       		.uleb128 0x8
 380 0067 34       		.uleb128 0x34
 381 0068 00       		.byte	0
 382 0069 03       		.uleb128 0x3
 383 006a 0E       		.uleb128 0xe
 384 006b 3A       		.uleb128 0x3a
 385 006c 0B       		.uleb128 0xb
 386 006d 3B       		.uleb128 0x3b
 387 006e 0B       		.uleb128 0xb
 388 006f 49       		.uleb128 0x49
 389 0070 13       		.uleb128 0x13
 390 0071 02       		.uleb128 0x2
 391 0072 17       		.uleb128 0x17
 392 0073 00       		.byte	0
 393 0074 00       		.byte	0
 394 0075 09       		.uleb128 0x9
 395 0076 2E       		.uleb128 0x2e
 396 0077 00       		.byte	0
 397 0078 3F       		.uleb128 0x3f
 398 0079 19       		.uleb128 0x19
 399 007a 03       		.uleb128 0x3
 400 007b 0E       		.uleb128 0xe
 401 007c 3A       		.uleb128 0x3a
 402 007d 0B       		.uleb128 0xb
 403 007e 3B       		.uleb128 0x3b
 404 007f 0B       		.uleb128 0xb
 405 0080 27       		.uleb128 0x27
 406 0081 19       		.uleb128 0x19
 407 0082 49       		.uleb128 0x49
 408 0083 13       		.uleb128 0x13
 409 0084 11       		.uleb128 0x11
 410 0085 01       		.uleb128 0x1
 411 0086 12       		.uleb128 0x12
 412 0087 06       		.uleb128 0x6
 413 0088 40       		.uleb128 0x40
 414 0089 18       		.uleb128 0x18
 415 008a 9742     		.uleb128 0x2117
 416 008c 19       		.uleb128 0x19
 417 008d 00       		.byte	0
 418 008e 00       		.byte	0
 419 008f 00       		.byte	0
 420              		.section	.debug_loc,"",%progbits
 421              	.Ldebug_loc0:
 422              	.LLST0:
 423 0000 00000000 		.4byte	.LVL0
 424 0004 04000000 		.4byte	.LVL1
 425 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 11


 426 000a 50       		.byte	0x50
 427 000b 04000000 		.4byte	.LVL1
 428 000f 18000000 		.4byte	.LFE0
 429 0013 0400     		.2byte	0x4
 430 0015 F3       		.byte	0xf3
 431 0016 01       		.uleb128 0x1
 432 0017 50       		.byte	0x50
 433 0018 9F       		.byte	0x9f
 434 0019 00000000 		.4byte	0
 435 001d 00000000 		.4byte	0
 436              	.LLST1:
 437 0021 06000000 		.4byte	.LVL2
 438 0025 0E000000 		.4byte	.LVL3
 439 0029 0600     		.2byte	0x6
 440 002b 73       		.byte	0x73
 441 002c 00       		.sleb128 0
 442 002d 09       		.byte	0x9
 443 002e F7       		.byte	0xf7
 444 002f 1A       		.byte	0x1a
 445 0030 9F       		.byte	0x9f
 446 0031 00000000 		.4byte	0
 447 0035 00000000 		.4byte	0
 448              	.LLST2:
 449 0039 00000000 		.4byte	.LVL4
 450 003d 06000000 		.4byte	.LVL5
 451 0041 0100     		.2byte	0x1
 452 0043 50       		.byte	0x50
 453 0044 06000000 		.4byte	.LVL5
 454 0048 18000000 		.4byte	.LFE1
 455 004c 0400     		.2byte	0x4
 456 004e F3       		.byte	0xf3
 457 004f 01       		.uleb128 0x1
 458 0050 50       		.byte	0x50
 459 0051 9F       		.byte	0x9f
 460 0052 00000000 		.4byte	0
 461 0056 00000000 		.4byte	0
 462              		.section	.debug_aranges,"",%progbits
 463 0000 34000000 		.4byte	0x34
 464 0004 0200     		.2byte	0x2
 465 0006 00000000 		.4byte	.Ldebug_info0
 466 000a 04       		.byte	0x4
 467 000b 00       		.byte	0
 468 000c 0000     		.2byte	0
 469 000e 0000     		.2byte	0
 470 0010 00000000 		.4byte	.LFB0
 471 0014 18000000 		.4byte	.LFE0-.LFB0
 472 0018 00000000 		.4byte	.LFB1
 473 001c 18000000 		.4byte	.LFE1-.LFB1
 474 0020 00000000 		.4byte	.LFB2
 475 0024 10000000 		.4byte	.LFE2-.LFB2
 476 0028 00000000 		.4byte	.LFB3
 477 002c 10000000 		.4byte	.LFE3-.LFB3
 478 0030 00000000 		.4byte	0
 479 0034 00000000 		.4byte	0
 480              		.section	.debug_ranges,"",%progbits
 481              	.Ldebug_ranges0:
 482 0000 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 12


 483 0004 18000000 		.4byte	.LFE0
 484 0008 00000000 		.4byte	.LFB1
 485 000c 18000000 		.4byte	.LFE1
 486 0010 00000000 		.4byte	.LFB2
 487 0014 10000000 		.4byte	.LFE2
 488 0018 00000000 		.4byte	.LFB3
 489 001c 10000000 		.4byte	.LFE3
 490 0020 00000000 		.4byte	0
 491 0024 00000000 		.4byte	0
 492              		.section	.debug_line,"",%progbits
 493              	.Ldebug_line0:
 494 0000 94000000 		.section	.debug_str,"MS",%progbits,1
 494      02004600 
 494      00000201 
 494      FB0E0D00 
 494      01010101 
 495              	.LASF14:
 496 0000 6572724D 		.ascii	"errMonPin_Write\000"
 496      6F6E5069 
 496      6E5F5772 
 496      69746500 
 497              	.LASF16:
 498 0010 76616C75 		.ascii	"value\000"
 498      6500
 499              	.LASF23:
 500 0016 73746174 		.ascii	"staticBits\000"
 500      69634269 
 500      747300
 501              	.LASF3:
 502 0021 73686F72 		.ascii	"short unsigned int\000"
 502      7420756E 
 502      7369676E 
 502      65642069 
 502      6E7400
 503              	.LASF9:
 504 0034 666C6F61 		.ascii	"float\000"
 504      7400
 505              	.LASF7:
 506 003a 6C6F6E67 		.ascii	"long long unsigned int\000"
 506      206C6F6E 
 506      6720756E 
 506      7369676E 
 506      65642069 
 507              	.LASF1:
 508 0051 756E7369 		.ascii	"unsigned char\000"
 508      676E6564 
 508      20636861 
 508      7200
 509              	.LASF13:
 510 005f 72656738 		.ascii	"reg8\000"
 510      00
 511              	.LASF5:
 512 0064 6C6F6E67 		.ascii	"long unsigned int\000"
 512      20756E73 
 512      69676E65 
 512      6420696E 
 512      7400
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 13


 513              	.LASF21:
 514 0076 47656E65 		.ascii	"Generated_Source\\PSoC5\\errMonPin.c\000"
 514      72617465 
 514      645F536F 
 514      75726365 
 514      5C50536F 
 515              	.LASF10:
 516 0099 646F7562 		.ascii	"double\000"
 516      6C6500
 517              	.LASF8:
 518 00a0 756E7369 		.ascii	"unsigned int\000"
 518      676E6564 
 518      20696E74 
 518      00
 519              	.LASF19:
 520 00ad 6572724D 		.ascii	"errMonPin_ReadDataReg\000"
 520      6F6E5069 
 520      6E5F5265 
 520      61644461 
 520      74615265 
 521              	.LASF20:
 522 00c3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 522      43313120 
 522      352E342E 
 522      31203230 
 522      31363036 
 523 00f6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 523      20726576 
 523      6973696F 
 523      6E203233 
 523      37373135 
 524 0129 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 524      66756E63 
 524      74696F6E 
 524      2D736563 
 524      74696F6E 
 525              	.LASF17:
 526 0151 6D6F6465 		.ascii	"mode\000"
 526      00
 527              	.LASF6:
 528 0156 6C6F6E67 		.ascii	"long long int\000"
 528      206C6F6E 
 528      6720696E 
 528      7400
 529              	.LASF11:
 530 0164 63686172 		.ascii	"char\000"
 530      00
 531              	.LASF18:
 532 0169 6572724D 		.ascii	"errMonPin_Read\000"
 532      6F6E5069 
 532      6E5F5265 
 532      616400
 533              	.LASF2:
 534 0178 73686F72 		.ascii	"short int\000"
 534      7420696E 
 534      7400
 535              	.LASF12:
ARM GAS  C:\Users\THOMPS~1\AppData\Local\Temp\ccZVYoP6.s 			page 14


 536 0182 75696E74 		.ascii	"uint8\000"
 536      3800
 537              	.LASF15:
 538 0188 6572724D 		.ascii	"errMonPin_SetDriveMode\000"
 538      6F6E5069 
 538      6E5F5365 
 538      74447269 
 538      76654D6F 
 539              	.LASF4:
 540 019f 6C6F6E67 		.ascii	"long int\000"
 540      20696E74 
 540      00
 541              	.LASF0:
 542 01a8 7369676E 		.ascii	"signed char\000"
 542      65642063 
 542      68617200 
 543              	.LASF22:
 544 01b4 5C5C766C 		.ascii	"\\\\vladan\\Thompson Lab Documents\\Graham\\Arduino"
 544      6164616E 
 544      5C54686F 
 544      6D70736F 
 544      6E204C61 
 545 01e2 5C547269 		.ascii	"\\Triggered Relocker\\src\\Adjustable Automated Rel"
 545      67676572 
 545      65642052 
 545      656C6F63 
 545      6B65725C 
 546 0212 6F636B65 		.ascii	"ocker Code\\Adjustable Automated Relocker Code.cyds"
 546      7220436F 
 546      64655C41 
 546      646A7573 
 546      7461626C 
 547 0244 6E00     		.ascii	"n\000"
 548              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
